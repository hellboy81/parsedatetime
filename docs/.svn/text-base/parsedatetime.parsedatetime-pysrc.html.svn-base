<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>parsedatetime.parsedatetime</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="parsedatetime-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://code-bear.com/code/parsedatetime">parsedatetime</a></th>
          </tr></table></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="parsedatetime-module.html">Package&nbsp;parsedatetime</a> ::
        Module&nbsp;parsedatetime
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="parsedatetime.parsedatetime-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="parsedatetime.parsedatetime-module.html">Module parsedatetime.parsedatetime</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno">   1</tt>  <tt class="py-line"><tt class="py-comment">#!/usr/bin/env python</tt> </tt>
<a name="L2"></a><tt class="py-lineno">   2</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L3"></a><tt class="py-lineno">   3</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L4"></a><tt class="py-lineno">   4</tt>  <tt class="py-line"><tt class="py-docstring">Parse human-readable date/time text.</tt> </tt>
<a name="L5"></a><tt class="py-lineno">   5</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L6"></a><tt class="py-lineno">   6</tt>  <tt class="py-line"> </tt>
<a name="L7"></a><tt class="py-lineno">   7</tt>  <tt class="py-line"><tt class="py-name">__license__</tt> <tt class="py-op">=</tt> <tt class="py-string">"""</tt> </tt>
<a name="L8"></a><tt class="py-lineno">   8</tt>  <tt class="py-line"><tt class="py-string">Copyright (c) 2004-2008 Mike Taylor</tt> </tt>
<a name="L9"></a><tt class="py-lineno">   9</tt>  <tt class="py-line"><tt class="py-string">Copyright (c) 2006-2008 Darshana Chhajed</tt> </tt>
<a name="L10"></a><tt class="py-lineno">  10</tt>  <tt class="py-line"><tt class="py-string">All rights reserved.</tt> </tt>
<a name="L11"></a><tt class="py-lineno">  11</tt>  <tt class="py-line"><tt class="py-string"></tt> </tt>
<a name="L12"></a><tt class="py-lineno">  12</tt>  <tt class="py-line"><tt class="py-string">Licensed under the Apache License, Version 2.0 (the "License");</tt> </tt>
<a name="L13"></a><tt class="py-lineno">  13</tt>  <tt class="py-line"><tt class="py-string">you may not use this file except in compliance with the License.</tt> </tt>
<a name="L14"></a><tt class="py-lineno">  14</tt>  <tt class="py-line"><tt class="py-string">You may obtain a copy of the License at</tt> </tt>
<a name="L15"></a><tt class="py-lineno">  15</tt>  <tt class="py-line"><tt class="py-string"></tt> </tt>
<a name="L16"></a><tt class="py-lineno">  16</tt>  <tt class="py-line"><tt class="py-string">   http://www.apache.org/licenses/LICENSE-2.0</tt> </tt>
<a name="L17"></a><tt class="py-lineno">  17</tt>  <tt class="py-line"><tt class="py-string"></tt> </tt>
<a name="L18"></a><tt class="py-lineno">  18</tt>  <tt class="py-line"><tt class="py-string">Unless required by applicable law or agreed to in writing, software</tt> </tt>
<a name="L19"></a><tt class="py-lineno">  19</tt>  <tt class="py-line"><tt class="py-string">distributed under the License is distributed on an "AS IS" BASIS,</tt> </tt>
<a name="L20"></a><tt class="py-lineno">  20</tt>  <tt class="py-line"><tt class="py-string">WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</tt> </tt>
<a name="L21"></a><tt class="py-lineno">  21</tt>  <tt class="py-line"><tt class="py-string">See the License for the specific language governing permissions and</tt> </tt>
<a name="L22"></a><tt class="py-lineno">  22</tt>  <tt class="py-line"><tt class="py-string">limitations under the License.</tt> </tt>
<a name="L23"></a><tt class="py-lineno">  23</tt>  <tt class="py-line"><tt class="py-string">"""</tt> </tt>
<a name="L24"></a><tt class="py-lineno">  24</tt>  <tt class="py-line"> </tt>
<a name="L25"></a><tt class="py-lineno">  25</tt>  <tt class="py-line"><tt id="link-0" class="py-name" targets="Variable parsedatetime.parsedatetime._debug=parsedatetime.parsedatetime-module.html#_debug"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-0', '_debug', 'link-0');">_debug</a></tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L26"></a><tt class="py-lineno">  26</tt>  <tt class="py-line"> </tt>
<a name="L27"></a><tt class="py-lineno">  27</tt>  <tt class="py-line"> </tt>
<a name="L28"></a><tt class="py-lineno">  28</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">re</tt> </tt>
<a name="L29"></a><tt class="py-lineno">  29</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">time</tt> </tt>
<a name="L30"></a><tt class="py-lineno">  30</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">datetime</tt> </tt>
<a name="L31"></a><tt class="py-lineno">  31</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">rfc822</tt> </tt>
<a name="L32"></a><tt class="py-lineno">  32</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Module parsedatetime.parsedatetime_consts=parsedatetime.parsedatetime_consts-module.html"><a title="parsedatetime.parsedatetime_consts" class="py-name" href="#" onclick="return doclink('link-1', 'parsedatetime_consts', 'link-1');">parsedatetime_consts</a></tt> </tt>
<a name="L33"></a><tt class="py-lineno">  33</tt>  <tt class="py-line"> </tt>
<a name="L34"></a><tt class="py-lineno">  34</tt>  <tt class="py-line"> </tt>
<a name="L35"></a><tt class="py-lineno">  35</tt>  <tt class="py-line"><tt class="py-comment"># Copied from feedparser.py</tt> </tt>
<a name="L36"></a><tt class="py-lineno">  36</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Universal Feedparser</tt> </tt>
<a name="L37"></a><tt class="py-lineno">  37</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Copyright (c) 2002-2006, Mark Pilgrim, All rights reserved.</tt> </tt>
<a name="L38"></a><tt class="py-lineno">  38</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Originally a def inside of _parse_date_w3dtf()</tt> </tt>
<a name="_extract_date"></a><div id="_extract_date-def"><a name="L39"></a><tt class="py-lineno">  39</tt> <a class="py-toggle" href="#" id="_extract_date-toggle" onclick="return toggle('_extract_date');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime-module.html#_extract_date">_extract_date</a><tt class="py-op">(</tt><tt class="py-param">m</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="_extract_date-collapsed" style="display:none;" pad="++++" indent="++++"></div><div id="_extract_date-expanded"><a name="L40"></a><tt class="py-lineno">  40</tt>  <tt class="py-line">    <tt class="py-name">year</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'year'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L41"></a><tt class="py-lineno">  41</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">year</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">100</tt><tt class="py-op">:</tt> </tt>
<a name="L42"></a><tt class="py-lineno">  42</tt>  <tt class="py-line">        <tt class="py-name">year</tt> <tt class="py-op">=</tt> <tt class="py-number">100</tt> <tt class="py-op">*</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">gmtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> <tt class="py-op">/</tt> <tt class="py-number">100</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">year</tt><tt class="py-op">)</tt> </tt>
<a name="L43"></a><tt class="py-lineno">  43</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">year</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">1000</tt><tt class="py-op">:</tt> </tt>
<a name="L44"></a><tt class="py-lineno">  44</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt> </tt>
<a name="L45"></a><tt class="py-lineno">  45</tt>  <tt class="py-line">    <tt class="py-name">julian</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'julian'</tt><tt class="py-op">)</tt> </tt>
<a name="L46"></a><tt class="py-lineno">  46</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">julian</tt><tt class="py-op">:</tt> </tt>
<a name="L47"></a><tt class="py-lineno">  47</tt>  <tt class="py-line">        <tt class="py-name">julian</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">julian</tt><tt class="py-op">)</tt> </tt>
<a name="L48"></a><tt class="py-lineno">  48</tt>  <tt class="py-line">        <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-name">julian</tt> <tt class="py-op">/</tt> <tt class="py-number">30</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L49"></a><tt class="py-lineno">  49</tt>  <tt class="py-line">        <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-name">julian</tt> <tt class="py-op">%</tt> <tt class="py-number">30</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L50"></a><tt class="py-lineno">  50</tt>  <tt class="py-line">        <tt class="py-name">jday</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
<a name="L51"></a><tt class="py-lineno">  51</tt>  <tt class="py-line">        <tt class="py-keyword">while</tt> <tt class="py-name">jday</tt> <tt class="py-op">!=</tt> <tt class="py-name">julian</tt><tt class="py-op">:</tt> </tt>
<a name="L52"></a><tt class="py-lineno">  52</tt>  <tt class="py-line">            <tt class="py-name">t</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">mktime</tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">year</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">,</tt> <tt class="py-name">day</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L53"></a><tt class="py-lineno">  53</tt>  <tt class="py-line">            <tt class="py-name">jday</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">gmtime</tt><tt class="py-op">(</tt><tt class="py-name">t</tt><tt class="py-op">)</tt><tt class="py-op">[</tt><tt class="py-op">-</tt><tt class="py-number">2</tt><tt class="py-op">]</tt> </tt>
<a name="L54"></a><tt class="py-lineno">  54</tt>  <tt class="py-line">            <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">abs</tt><tt class="py-op">(</tt><tt class="py-name">jday</tt> <tt class="py-op">-</tt> <tt class="py-name">julian</tt><tt class="py-op">)</tt> </tt>
<a name="L55"></a><tt class="py-lineno">  55</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">jday</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">julian</tt><tt class="py-op">:</tt> </tt>
<a name="L56"></a><tt class="py-lineno">  56</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">diff</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">day</tt><tt class="py-op">:</tt> </tt>
<a name="L57"></a><tt class="py-lineno">  57</tt>  <tt class="py-line">                    <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-name">day</tt> <tt class="py-op">-</tt> <tt class="py-name">diff</tt> </tt>
<a name="L58"></a><tt class="py-lineno">  58</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L59"></a><tt class="py-lineno">  59</tt>  <tt class="py-line">                    <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-name">month</tt> <tt class="py-op">-</tt> <tt class="py-number">1</tt> </tt>
<a name="L60"></a><tt class="py-lineno">  60</tt>  <tt class="py-line">                    <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-number">31</tt> </tt>
<a name="L61"></a><tt class="py-lineno">  61</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">jday</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">julian</tt><tt class="py-op">:</tt> </tt>
<a name="L62"></a><tt class="py-lineno">  62</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">day</tt> <tt class="py-op">+</tt> <tt class="py-name">diff</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">28</tt><tt class="py-op">:</tt> </tt>
<a name="L63"></a><tt class="py-lineno">  63</tt>  <tt class="py-line">                    <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-name">day</tt> <tt class="py-op">+</tt> <tt class="py-name">diff</tt> </tt>
<a name="L64"></a><tt class="py-lineno">  64</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L65"></a><tt class="py-lineno">  65</tt>  <tt class="py-line">                    <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-name">month</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L66"></a><tt class="py-lineno">  66</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">year</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">,</tt> <tt class="py-name">day</tt> </tt>
<a name="L67"></a><tt class="py-lineno">  67</tt>  <tt class="py-line">    <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'month'</tt><tt class="py-op">)</tt> </tt>
<a name="L68"></a><tt class="py-lineno">  68</tt>  <tt class="py-line">    <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L69"></a><tt class="py-lineno">  69</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">month</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L70"></a><tt class="py-lineno">  70</tt>  <tt class="py-line">        <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L71"></a><tt class="py-lineno">  71</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L72"></a><tt class="py-lineno">  72</tt>  <tt class="py-line">        <tt class="py-name">month</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">month</tt><tt class="py-op">)</tt> </tt>
<a name="L73"></a><tt class="py-lineno">  73</tt>  <tt class="py-line">        <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt> </tt>
<a name="L74"></a><tt class="py-lineno">  74</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">day</tt><tt class="py-op">:</tt> </tt>
<a name="L75"></a><tt class="py-lineno">  75</tt>  <tt class="py-line">            <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">day</tt><tt class="py-op">)</tt> </tt>
<a name="L76"></a><tt class="py-lineno">  76</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L77"></a><tt class="py-lineno">  77</tt>  <tt class="py-line">            <tt class="py-name">day</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L78"></a><tt class="py-lineno">  78</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">year</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">,</tt> <tt class="py-name">day</tt> </tt>
</div><a name="L79"></a><tt class="py-lineno">  79</tt>  <tt class="py-line"> </tt>
<a name="L80"></a><tt class="py-lineno">  80</tt>  <tt class="py-line"><tt class="py-comment"># Copied from feedparser.py</tt> </tt>
<a name="L81"></a><tt class="py-lineno">  81</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Universal Feedparser</tt> </tt>
<a name="L82"></a><tt class="py-lineno">  82</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Copyright (c) 2002-2006, Mark Pilgrim, All rights reserved.</tt> </tt>
<a name="L83"></a><tt class="py-lineno">  83</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Originally a def inside of _parse_date_w3dtf()</tt> </tt>
<a name="_extract_time"></a><div id="_extract_time-def"><a name="L84"></a><tt class="py-lineno">  84</tt> <a class="py-toggle" href="#" id="_extract_time-toggle" onclick="return toggle('_extract_time');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime-module.html#_extract_time">_extract_time</a><tt class="py-op">(</tt><tt class="py-param">m</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="_extract_time-collapsed" style="display:none;" pad="++++" indent="++++"></div><div id="_extract_time-expanded"><a name="L85"></a><tt class="py-lineno">  85</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">m</tt><tt class="py-op">:</tt> </tt>
<a name="L86"></a><tt class="py-lineno">  86</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt> </tt>
<a name="L87"></a><tt class="py-lineno">  87</tt>  <tt class="py-line">    <tt class="py-name">hours</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt> </tt>
<a name="L88"></a><tt class="py-lineno">  88</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">hours</tt><tt class="py-op">:</tt> </tt>
<a name="L89"></a><tt class="py-lineno">  89</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt> </tt>
<a name="L90"></a><tt class="py-lineno">  90</tt>  <tt class="py-line">    <tt class="py-name">hours</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">hours</tt><tt class="py-op">)</tt> </tt>
<a name="L91"></a><tt class="py-lineno">  91</tt>  <tt class="py-line">    <tt class="py-name">minutes</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L92"></a><tt class="py-lineno">  92</tt>  <tt class="py-line">    <tt class="py-name">seconds</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt> </tt>
<a name="L93"></a><tt class="py-lineno">  93</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">seconds</tt><tt class="py-op">:</tt> </tt>
<a name="L94"></a><tt class="py-lineno">  94</tt>  <tt class="py-line">        <tt class="py-name">seconds</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">seconds</tt><tt class="py-op">)</tt> </tt>
<a name="L95"></a><tt class="py-lineno">  95</tt>  <tt class="py-line">    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L96"></a><tt class="py-lineno">  96</tt>  <tt class="py-line">        <tt class="py-name">seconds</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L97"></a><tt class="py-lineno">  97</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">hours</tt><tt class="py-op">,</tt> <tt class="py-name">minutes</tt><tt class="py-op">,</tt> <tt class="py-name">seconds</tt> </tt>
</div><a name="L98"></a><tt class="py-lineno">  98</tt>  <tt class="py-line"> </tt>
<a name="L99"></a><tt class="py-lineno">  99</tt>  <tt class="py-line"> </tt>
<a name="L100"></a><tt class="py-lineno"> 100</tt>  <tt class="py-line"><tt class="py-comment"># Copied from feedparser.py</tt> </tt>
<a name="L101"></a><tt class="py-lineno"> 101</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Universal Feedparser</tt> </tt>
<a name="L102"></a><tt class="py-lineno"> 102</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Copyright (c) 2002-2006, Mark Pilgrim, All rights reserved.</tt> </tt>
<a name="L103"></a><tt class="py-lineno"> 103</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Modified to return a tuple instead of mktime</tt> </tt>
<a name="L104"></a><tt class="py-lineno"> 104</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#</tt> </tt>
<a name="L105"></a><tt class="py-lineno"> 105</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Original comment:</tt> </tt>
<a name="L106"></a><tt class="py-lineno"> 106</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#   W3DTF-style date parsing adapted from PyXML xml.utils.iso8601, written by</tt> </tt>
<a name="L107"></a><tt class="py-lineno"> 107</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#   Drake and licensed under the Python license.  Removed all range checking</tt> </tt>
<a name="L108"></a><tt class="py-lineno"> 108</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#   for month, day, hour, minute, and second, since mktime will normalize</tt> </tt>
<a name="L109"></a><tt class="py-lineno"> 109</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#   these later</tt> </tt>
<a name="_parse_date_w3dtf"></a><div id="_parse_date_w3dtf-def"><a name="L110"></a><tt class="py-lineno"> 110</tt> <a class="py-toggle" href="#" id="_parse_date_w3dtf-toggle" onclick="return toggle('_parse_date_w3dtf');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime-module.html#_parse_date_w3dtf">_parse_date_w3dtf</a><tt class="py-op">(</tt><tt class="py-param">dateString</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="_parse_date_w3dtf-collapsed" style="display:none;" pad="++++" indent="++++"></div><div id="_parse_date_w3dtf-expanded"><a name="L111"></a><tt class="py-lineno"> 111</tt>  <tt class="py-line">    <tt class="py-comment"># the __extract_date and __extract_time methods were</tt> </tt>
<a name="L112"></a><tt class="py-lineno"> 112</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-comment"># copied-out so they could be used by my code --bear</tt> </tt>
<a name="L113"></a><tt class="py-lineno"> 113</tt>  <tt class="py-line"><tt class="py-comment"></tt>    <tt class="py-keyword">def</tt> <tt class="py-def-name">__extract_tzd</tt><tt class="py-op">(</tt><tt class="py-param">m</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L114"></a><tt class="py-lineno"> 114</tt>  <tt class="py-line">        <tt class="py-docstring">'''Return the Time Zone Designator as an offset in seconds from UTC.'''</tt> </tt>
<a name="L115"></a><tt class="py-lineno"> 115</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">m</tt><tt class="py-op">:</tt> </tt>
<a name="L116"></a><tt class="py-lineno"> 116</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-number">0</tt> </tt>
<a name="L117"></a><tt class="py-lineno"> 117</tt>  <tt class="py-line">        <tt class="py-name">tzd</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'tzd'</tt><tt class="py-op">)</tt> </tt>
<a name="L118"></a><tt class="py-lineno"> 118</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">tzd</tt><tt class="py-op">:</tt> </tt>
<a name="L119"></a><tt class="py-lineno"> 119</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-number">0</tt> </tt>
<a name="L120"></a><tt class="py-lineno"> 120</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">tzd</tt> <tt class="py-op">==</tt> <tt class="py-string">'Z'</tt><tt class="py-op">:</tt> </tt>
<a name="L121"></a><tt class="py-lineno"> 121</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-number">0</tt> </tt>
<a name="L122"></a><tt class="py-lineno"> 122</tt>  <tt class="py-line">        <tt class="py-name">hours</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'tzdhours'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L123"></a><tt class="py-lineno"> 123</tt>  <tt class="py-line">        <tt class="py-name">minutes</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'tzdminutes'</tt><tt class="py-op">)</tt> </tt>
<a name="L124"></a><tt class="py-lineno"> 124</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">minutes</tt><tt class="py-op">:</tt> </tt>
<a name="L125"></a><tt class="py-lineno"> 125</tt>  <tt class="py-line">            <tt class="py-name">minutes</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">minutes</tt><tt class="py-op">)</tt> </tt>
<a name="L126"></a><tt class="py-lineno"> 126</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L127"></a><tt class="py-lineno"> 127</tt>  <tt class="py-line">            <tt class="py-name">minutes</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L128"></a><tt class="py-lineno"> 128</tt>  <tt class="py-line">        <tt class="py-name">offset</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">hours</tt><tt class="py-op">*</tt><tt class="py-number">60</tt> <tt class="py-op">+</tt> <tt class="py-name">minutes</tt><tt class="py-op">)</tt> <tt class="py-op">*</tt> <tt class="py-number">60</tt> </tt>
<a name="L129"></a><tt class="py-lineno"> 129</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">tzd</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> <tt class="py-op">==</tt> <tt class="py-string">'+'</tt><tt class="py-op">:</tt> </tt>
<a name="L130"></a><tt class="py-lineno"> 130</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-op">-</tt><tt class="py-name">offset</tt> </tt>
<a name="L131"></a><tt class="py-lineno"> 131</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">offset</tt> </tt>
</div><a name="L132"></a><tt class="py-lineno"> 132</tt>  <tt class="py-line"> </tt>
<a name="L133"></a><tt class="py-lineno"> 133</tt>  <tt class="py-line">    <tt class="py-name">__date_re</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-string">'(?P&lt;year&gt;\d\d\d\d)'</tt> </tt>
<a name="L134"></a><tt class="py-lineno"> 134</tt>  <tt class="py-line">                 <tt class="py-string">'(?:(?P&lt;dsep&gt;-|)'</tt> </tt>
<a name="L135"></a><tt class="py-lineno"> 135</tt>  <tt class="py-line">                 <tt class="py-string">'(?:(?P&lt;julian&gt;\d\d\d)'</tt> </tt>
<a name="L136"></a><tt class="py-lineno"> 136</tt>  <tt class="py-line">                 <tt class="py-string">'|(?P&lt;month&gt;\d\d)(?:(?P=dsep)(?P&lt;day&gt;\d\d))?))?'</tt><tt class="py-op">)</tt> </tt>
<a name="L137"></a><tt class="py-lineno"> 137</tt>  <tt class="py-line">    <tt class="py-name">__tzd_re</tt> <tt class="py-op">=</tt> <tt class="py-string">'(?P&lt;tzd&gt;[-+](?P&lt;tzdhours&gt;\d\d)(?::?(?P&lt;tzdminutes&gt;\d\d))|Z)'</tt> </tt>
<a name="L138"></a><tt class="py-lineno"> 138</tt>  <tt class="py-line">    <tt class="py-name">__tzd_rx</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">compile</tt><tt class="py-op">(</tt><tt class="py-name">__tzd_re</tt><tt class="py-op">)</tt> </tt>
<a name="L139"></a><tt class="py-lineno"> 139</tt>  <tt class="py-line">    <tt class="py-name">__time_re</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-string">'(?P&lt;hours&gt;\d\d)(?P&lt;tsep&gt;:|)(?P&lt;minutes&gt;\d\d)'</tt> </tt>
<a name="L140"></a><tt class="py-lineno"> 140</tt>  <tt class="py-line">                 <tt class="py-string">'(?:(?P=tsep)(?P&lt;seconds&gt;\d\d(?:[.,]\d+)?))?'</tt> </tt>
<a name="L141"></a><tt class="py-lineno"> 141</tt>  <tt class="py-line">                 <tt class="py-op">+</tt> <tt class="py-name">__tzd_re</tt><tt class="py-op">)</tt> </tt>
<a name="L142"></a><tt class="py-lineno"> 142</tt>  <tt class="py-line">    <tt class="py-name">__datetime_re</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s(?:T%s)?'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">__date_re</tt><tt class="py-op">,</tt> <tt class="py-name">__time_re</tt><tt class="py-op">)</tt> </tt>
<a name="L143"></a><tt class="py-lineno"> 143</tt>  <tt class="py-line">    <tt class="py-name">__datetime_rx</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">compile</tt><tt class="py-op">(</tt><tt class="py-name">__datetime_re</tt><tt class="py-op">)</tt> </tt>
<a name="L144"></a><tt class="py-lineno"> 144</tt>  <tt class="py-line">    <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">__datetime_rx</tt><tt class="py-op">.</tt><tt class="py-name">match</tt><tt class="py-op">(</tt><tt class="py-name">dateString</tt><tt class="py-op">)</tt> </tt>
<a name="L145"></a><tt class="py-lineno"> 145</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">dateString</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> <tt class="py-keyword">return</tt> </tt>
<a name="L146"></a><tt class="py-lineno"> 146</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt id="link-2" class="py-name" targets="Function parsedatetime.parsedatetime._extract_date()=parsedatetime.parsedatetime-module.html#_extract_date"><a title="parsedatetime.parsedatetime._extract_date" class="py-name" href="#" onclick="return doclink('link-2', '_extract_date', 'link-2');">_extract_date</a></tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt id="link-3" class="py-name" targets="Function parsedatetime.parsedatetime._extract_time()=parsedatetime.parsedatetime-module.html#_extract_time"><a title="parsedatetime.parsedatetime._extract_time" class="py-name" href="#" onclick="return doclink('link-3', '_extract_time', 'link-3');">_extract_time</a></tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
</div><a name="L147"></a><tt class="py-lineno"> 147</tt>  <tt class="py-line"> </tt>
<a name="L148"></a><tt class="py-lineno"> 148</tt>  <tt class="py-line"> </tt>
<a name="L149"></a><tt class="py-lineno"> 149</tt>  <tt class="py-line"><tt class="py-comment"># Copied from feedparser.py</tt> </tt>
<a name="L150"></a><tt class="py-lineno"> 150</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Universal Feedparser</tt> </tt>
<a name="L151"></a><tt class="py-lineno"> 151</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Copyright (c) 2002-2006, Mark Pilgrim, All rights reserved.</tt> </tt>
<a name="L152"></a><tt class="py-lineno"> 152</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># Modified to return a tuple instead of mktime</tt> </tt>
<a name="L153"></a><tt class="py-lineno"> 153</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment">#</tt> </tt>
<a name="_parse_date_rfc822"></a><div id="_parse_date_rfc822-def"><a name="L154"></a><tt class="py-lineno"> 154</tt> <a class="py-toggle" href="#" id="_parse_date_rfc822-toggle" onclick="return toggle('_parse_date_rfc822');">-</a><tt class="py-line"><tt class="py-comment"></tt><tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime-module.html#_parse_date_rfc822">_parse_date_rfc822</a><tt class="py-op">(</tt><tt class="py-param">dateString</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="_parse_date_rfc822-collapsed" style="display:none;" pad="++++" indent="++++"></div><div id="_parse_date_rfc822-expanded"><a name="L155"></a><tt class="py-lineno"> 155</tt>  <tt class="py-line">    <tt class="py-docstring">'''Parse an RFC822, RFC1123, RFC2822, or asctime-style date'''</tt> </tt>
<a name="L156"></a><tt class="py-lineno"> 156</tt>  <tt class="py-line">    <tt class="py-name">data</tt> <tt class="py-op">=</tt> <tt class="py-name">dateString</tt><tt class="py-op">.</tt><tt class="py-name">split</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L157"></a><tt class="py-lineno"> 157</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">data</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">[</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> <tt class="py-keyword">in</tt> <tt class="py-op">(</tt><tt class="py-string">','</tt><tt class="py-op">,</tt> <tt class="py-string">'.'</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt class="py-name">data</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-keyword">in</tt> <tt class="py-name">rfc822</tt><tt class="py-op">.</tt><tt class="py-name">_daynames</tt><tt class="py-op">:</tt> </tt>
<a name="L158"></a><tt class="py-lineno"> 158</tt>  <tt class="py-line">        <tt class="py-keyword">del</tt> <tt class="py-name">data</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt> </tt>
<a name="L159"></a><tt class="py-lineno"> 159</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">data</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">4</tt><tt class="py-op">:</tt> </tt>
<a name="L160"></a><tt class="py-lineno"> 160</tt>  <tt class="py-line">        <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">data</tt><tt class="py-op">[</tt><tt class="py-number">3</tt><tt class="py-op">]</tt> </tt>
<a name="L161"></a><tt class="py-lineno"> 161</tt>  <tt class="py-line">        <tt class="py-name">i</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">.</tt><tt class="py-name">find</tt><tt class="py-op">(</tt><tt class="py-string">'+'</tt><tt class="py-op">)</tt> </tt>
<a name="L162"></a><tt class="py-lineno"> 162</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">i</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L163"></a><tt class="py-lineno"> 163</tt>  <tt class="py-line">            <tt class="py-name">data</tt><tt class="py-op">[</tt><tt class="py-number">3</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt><tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">i</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">+</tt><tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">]</tt> </tt>
<a name="L164"></a><tt class="py-lineno"> 164</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L165"></a><tt class="py-lineno"> 165</tt>  <tt class="py-line">            <tt class="py-name">data</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-string">''</tt><tt class="py-op">)</tt> </tt>
<a name="L166"></a><tt class="py-lineno"> 166</tt>  <tt class="py-line">        <tt class="py-name">dateString</tt> <tt class="py-op">=</tt> <tt class="py-string">" "</tt><tt class="py-op">.</tt><tt class="py-name">join</tt><tt class="py-op">(</tt><tt class="py-name">data</tt><tt class="py-op">)</tt> </tt>
<a name="L167"></a><tt class="py-lineno"> 167</tt>  <tt class="py-line">    <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">data</tt><tt class="py-op">)</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">5</tt><tt class="py-op">:</tt> </tt>
<a name="L168"></a><tt class="py-lineno"> 168</tt>  <tt class="py-line">        <tt class="py-name">dateString</tt> <tt class="py-op">+=</tt> <tt class="py-string">' 00:00:00 GMT'</tt> </tt>
<a name="L169"></a><tt class="py-lineno"> 169</tt>  <tt class="py-line">    <tt class="py-keyword">return</tt> <tt class="py-name">rfc822</tt><tt class="py-op">.</tt><tt class="py-name">parsedate_tz</tt><tt class="py-op">(</tt><tt class="py-name">dateString</tt><tt class="py-op">)</tt> </tt>
</div><a name="L170"></a><tt class="py-lineno"> 170</tt>  <tt class="py-line"> </tt>
<a name="L171"></a><tt class="py-lineno"> 171</tt>  <tt class="py-line"><tt class="py-comment"># rfc822.py defines several time zones, but we define some extra ones.</tt> </tt>
<a name="L172"></a><tt class="py-lineno"> 172</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt class="py-comment"># 'ET' is equivalent to 'EST', etc.</tt> </tt>
<a name="L173"></a><tt class="py-lineno"> 173</tt>  <tt class="py-line"><tt class="py-comment"></tt><tt id="link-4" class="py-name" targets="Variable parsedatetime.parsedatetime._additional_timezones=parsedatetime.parsedatetime-module.html#_additional_timezones"><a title="parsedatetime.parsedatetime._additional_timezones" class="py-name" href="#" onclick="return doclink('link-4', '_additional_timezones', 'link-4');">_additional_timezones</a></tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt><tt class="py-string">'AT'</tt><tt class="py-op">:</tt> <tt class="py-op">-</tt><tt class="py-number">400</tt><tt class="py-op">,</tt> <tt class="py-string">'ET'</tt><tt class="py-op">:</tt> <tt class="py-op">-</tt><tt class="py-number">500</tt><tt class="py-op">,</tt> </tt>
<a name="L174"></a><tt class="py-lineno"> 174</tt>  <tt class="py-line">                         <tt class="py-string">'CT'</tt><tt class="py-op">:</tt> <tt class="py-op">-</tt><tt class="py-number">600</tt><tt class="py-op">,</tt> <tt class="py-string">'MT'</tt><tt class="py-op">:</tt> <tt class="py-op">-</tt><tt class="py-number">700</tt><tt class="py-op">,</tt> </tt>
<a name="L175"></a><tt class="py-lineno"> 175</tt>  <tt class="py-line">                         <tt class="py-string">'PT'</tt><tt class="py-op">:</tt> <tt class="py-op">-</tt><tt class="py-number">800</tt><tt class="py-op">}</tt> </tt>
<a name="L176"></a><tt class="py-lineno"> 176</tt>  <tt class="py-line"><tt class="py-name">rfc822</tt><tt class="py-op">.</tt><tt class="py-name">_timezones</tt><tt class="py-op">.</tt><tt class="py-name">update</tt><tt class="py-op">(</tt><tt id="link-5" class="py-name"><a title="parsedatetime.parsedatetime._additional_timezones" class="py-name" href="#" onclick="return doclink('link-5', '_additional_timezones', 'link-4');">_additional_timezones</a></tt><tt class="py-op">)</tt> </tt>
<a name="L177"></a><tt class="py-lineno"> 177</tt>  <tt class="py-line"> </tt>
<a name="L178"></a><tt class="py-lineno"> 178</tt>  <tt class="py-line"> </tt>
<a name="Calendar"></a><div id="Calendar-def"><a name="L179"></a><tt class="py-lineno"> 179</tt> <a class="py-toggle" href="#" id="Calendar-toggle" onclick="return toggle('Calendar');">-</a><tt class="py-line"><tt class="py-keyword">class</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html">Calendar</a><tt class="py-op">:</tt> </tt>
</div><div id="Calendar-collapsed" style="display:none;" pad="++++" indent="++++"></div><div id="Calendar-expanded"><a name="L180"></a><tt class="py-lineno"> 180</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L181"></a><tt class="py-lineno"> 181</tt>  <tt class="py-line"><tt class="py-docstring">    A collection of routines to input, parse and manipulate date and times.</tt> </tt>
<a name="L182"></a><tt class="py-lineno"> 182</tt>  <tt class="py-line"><tt class="py-docstring">    The text can either be 'normal' date values or it can be human readable.</tt> </tt>
<a name="L183"></a><tt class="py-lineno"> 183</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L184"></a><tt class="py-lineno"> 184</tt>  <tt class="py-line"> </tt>
<a name="Calendar.__init__"></a><div id="Calendar.__init__-def"><a name="L185"></a><tt class="py-lineno"> 185</tt> <a class="py-toggle" href="#" id="Calendar.__init__-toggle" onclick="return toggle('Calendar.__init__');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#__init__">__init__</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">constants</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.__init__-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.__init__-expanded"><a name="L186"></a><tt class="py-lineno"> 186</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L187"></a><tt class="py-lineno"> 187</tt>  <tt class="py-line"><tt class="py-docstring">        Default constructor for the L{Calendar} class.</tt> </tt>
<a name="L188"></a><tt class="py-lineno"> 188</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L189"></a><tt class="py-lineno"> 189</tt>  <tt class="py-line"><tt class="py-docstring">        @type  constants: object</tt> </tt>
<a name="L190"></a><tt class="py-lineno"> 190</tt>  <tt class="py-line"><tt class="py-docstring">        @param constants: Instance of the class L{parsedatetime_consts.Constants}</tt> </tt>
<a name="L191"></a><tt class="py-lineno"> 191</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L192"></a><tt class="py-lineno"> 192</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  object</tt> </tt>
<a name="L193"></a><tt class="py-lineno"> 193</tt>  <tt class="py-line"><tt class="py-docstring">        @return: L{Calendar} instance</tt> </tt>
<a name="L194"></a><tt class="py-lineno"> 194</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L195"></a><tt class="py-lineno"> 195</tt>  <tt class="py-line">          <tt class="py-comment"># if a constants reference is not included, use default</tt> </tt>
<a name="L196"></a><tt class="py-lineno"> 196</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">constants</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L197"></a><tt class="py-lineno"> 197</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt> <tt class="py-op">=</tt> <tt id="link-6" class="py-name"><a title="parsedatetime.parsedatetime_consts" class="py-name" href="#" onclick="return doclink('link-6', 'parsedatetime_consts', 'link-1');">parsedatetime_consts</a></tt><tt class="py-op">.</tt><tt id="link-7" class="py-name" targets="Class parsedatetime.parsedatetime_consts.Constants=parsedatetime.parsedatetime_consts.Constants-class.html"><a title="parsedatetime.parsedatetime_consts.Constants" class="py-name" href="#" onclick="return doclink('link-7', 'Constants', 'link-7');">Constants</a></tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L198"></a><tt class="py-lineno"> 198</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L199"></a><tt class="py-lineno"> 199</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt> <tt class="py-op">=</tt> <tt class="py-name">constants</tt> </tt>
<a name="L200"></a><tt class="py-lineno"> 200</tt>  <tt class="py-line"> </tt>
<a name="L201"></a><tt class="py-lineno"> 201</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">weekdyFlag</tt>    <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># monday/tuesday/...</tt> </tt>
<a name="L202"></a><tt class="py-lineno"> 202</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStdFlag</tt>   <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># 07/21/06</tt> </tt>
<a name="L203"></a><tt class="py-lineno"> 203</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStrFlag</tt>   <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># July 21st, 2006</tt> </tt>
<a name="L204"></a><tt class="py-lineno"> 204</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStdFlag</tt>   <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># 5:50 </tt> </tt>
<a name="L205"></a><tt class="py-lineno"> 205</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">meridianFlag</tt>  <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># am/pm</tt> </tt>
<a name="L206"></a><tt class="py-lineno"> 206</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dayStrFlag</tt>    <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># tomorrow/yesterday/today/..</tt> </tt>
<a name="L207"></a><tt class="py-lineno"> 207</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStrFlag</tt>   <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># lunch/noon/breakfast/...</tt> </tt>
<a name="L208"></a><tt class="py-lineno"> 208</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt>  <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># after/before/prev/next/..</tt> </tt>
<a name="L209"></a><tt class="py-lineno"> 209</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifier2Flag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># after/before/prev/next/..</tt> </tt>
<a name="L210"></a><tt class="py-lineno"> 210</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">unitsFlag</tt>     <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># hrs/weeks/yrs/min/..</tt> </tt>
<a name="L211"></a><tt class="py-lineno"> 211</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">qunitsFlag</tt>    <tt class="py-op">=</tt> <tt class="py-name">False</tt>  <tt class="py-comment"># h/m/t/d..</tt> </tt>
<a name="L212"></a><tt class="py-lineno"> 212</tt>  <tt class="py-line"> </tt>
<a name="L213"></a><tt class="py-lineno"> 213</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt>      <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L214"></a><tt class="py-lineno"> 214</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt>      <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
</div><a name="L215"></a><tt class="py-lineno"> 215</tt>  <tt class="py-line"> </tt>
<a name="L216"></a><tt class="py-lineno"> 216</tt>  <tt class="py-line"> </tt>
<a name="Calendar._convertUnitAsWords"></a><div id="Calendar._convertUnitAsWords-def"><a name="L217"></a><tt class="py-lineno"> 217</tt> <a class="py-toggle" href="#" id="Calendar._convertUnitAsWords-toggle" onclick="return toggle('Calendar._convertUnitAsWords');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_convertUnitAsWords">_convertUnitAsWords</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">unitText</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._convertUnitAsWords-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._convertUnitAsWords-expanded"><a name="L218"></a><tt class="py-lineno"> 218</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L219"></a><tt class="py-lineno"> 219</tt>  <tt class="py-line"><tt class="py-docstring">        Converts text units into their number value</tt> </tt>
<a name="L220"></a><tt class="py-lineno"> 220</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L221"></a><tt class="py-lineno"> 221</tt>  <tt class="py-line"><tt class="py-docstring">        Five = 5</tt> </tt>
<a name="L222"></a><tt class="py-lineno"> 222</tt>  <tt class="py-line"><tt class="py-docstring">        Twenty Five = 25</tt> </tt>
<a name="L223"></a><tt class="py-lineno"> 223</tt>  <tt class="py-line"><tt class="py-docstring">        Two hundred twenty five = 225</tt> </tt>
<a name="L224"></a><tt class="py-lineno"> 224</tt>  <tt class="py-line"><tt class="py-docstring">        Two thousand and twenty five = 2025</tt> </tt>
<a name="L225"></a><tt class="py-lineno"> 225</tt>  <tt class="py-line"><tt class="py-docstring">        Two thousand twenty five = 2025</tt> </tt>
<a name="L226"></a><tt class="py-lineno"> 226</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L227"></a><tt class="py-lineno"> 227</tt>  <tt class="py-line"><tt class="py-docstring">        @type  unitText: string</tt> </tt>
<a name="L228"></a><tt class="py-lineno"> 228</tt>  <tt class="py-line"><tt class="py-docstring">        @param unitText: number text to convert</tt> </tt>
<a name="L229"></a><tt class="py-lineno"> 229</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L230"></a><tt class="py-lineno"> 230</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  integer</tt> </tt>
<a name="L231"></a><tt class="py-lineno"> 231</tt>  <tt class="py-line"><tt class="py-docstring">        @return: numerical value of unitText</tt> </tt>
<a name="L232"></a><tt class="py-lineno"> 232</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L233"></a><tt class="py-lineno"> 233</tt>  <tt class="py-line">        <tt class="py-comment"># TODO: implement this</tt> </tt>
<a name="L234"></a><tt class="py-lineno"> 234</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">pass</tt> </tt>
</div><a name="L235"></a><tt class="py-lineno"> 235</tt>  <tt class="py-line"> </tt>
<a name="L236"></a><tt class="py-lineno"> 236</tt>  <tt class="py-line"> </tt>
<a name="Calendar._buildTime"></a><div id="Calendar._buildTime-def"><a name="L237"></a><tt class="py-lineno"> 237</tt> <a class="py-toggle" href="#" id="Calendar._buildTime-toggle" onclick="return toggle('Calendar._buildTime');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_buildTime">_buildTime</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">source</tt><tt class="py-op">,</tt> <tt class="py-param">quantity</tt><tt class="py-op">,</tt> <tt class="py-param">modifier</tt><tt class="py-op">,</tt> <tt class="py-param">units</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._buildTime-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._buildTime-expanded"><a name="L238"></a><tt class="py-lineno"> 238</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L239"></a><tt class="py-lineno"> 239</tt>  <tt class="py-line"><tt class="py-docstring">        Take C{quantity}, C{modifier} and C{unit} strings and convert them into values.</tt> </tt>
<a name="L240"></a><tt class="py-lineno"> 240</tt>  <tt class="py-line"><tt class="py-docstring">        After converting, calcuate the time and return the adjusted sourceTime.</tt> </tt>
<a name="L241"></a><tt class="py-lineno"> 241</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L242"></a><tt class="py-lineno"> 242</tt>  <tt class="py-line"><tt class="py-docstring">        @type  source:   time</tt> </tt>
<a name="L243"></a><tt class="py-lineno"> 243</tt>  <tt class="py-line"><tt class="py-docstring">        @param source:   time to use as the base (or source)</tt> </tt>
<a name="L244"></a><tt class="py-lineno"> 244</tt>  <tt class="py-line"><tt class="py-docstring">        @type  quantity: string</tt> </tt>
<a name="L245"></a><tt class="py-lineno"> 245</tt>  <tt class="py-line"><tt class="py-docstring">        @param quantity: quantity string</tt> </tt>
<a name="L246"></a><tt class="py-lineno"> 246</tt>  <tt class="py-line"><tt class="py-docstring">        @type  modifier: string</tt> </tt>
<a name="L247"></a><tt class="py-lineno"> 247</tt>  <tt class="py-line"><tt class="py-docstring">        @param modifier: how quantity and units modify the source time</tt> </tt>
<a name="L248"></a><tt class="py-lineno"> 248</tt>  <tt class="py-line"><tt class="py-docstring">        @type  units:    string</tt> </tt>
<a name="L249"></a><tt class="py-lineno"> 249</tt>  <tt class="py-line"><tt class="py-docstring">        @param units:    unit of the quantity (i.e. hours, days, months, etc)</tt> </tt>
<a name="L250"></a><tt class="py-lineno"> 250</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L251"></a><tt class="py-lineno"> 251</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  struct_time</tt> </tt>
<a name="L252"></a><tt class="py-lineno"> 252</tt>  <tt class="py-line"><tt class="py-docstring">        @return: C{struct_time} of the calculated time</tt> </tt>
<a name="L253"></a><tt class="py-lineno"> 253</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L254"></a><tt class="py-lineno"> 254</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-8" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-8', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L255"></a><tt class="py-lineno"> 255</tt>  <tt class="py-line">            <tt class="py-keyword">print</tt> <tt class="py-string">'_buildTime: [%s][%s][%s]'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">quantity</tt><tt class="py-op">,</tt> <tt class="py-name">modifier</tt><tt class="py-op">,</tt> <tt id="link-9" class="py-name" targets="Variable parsedatetime.parsedatetime_consts.pdtLocale_au.units=parsedatetime.parsedatetime_consts.pdtLocale_au-class.html#units,Variable parsedatetime.parsedatetime_consts.pdtLocale_de.units=parsedatetime.parsedatetime_consts.pdtLocale_de-class.html#units,Variable parsedatetime.parsedatetime_consts.pdtLocale_en.units=parsedatetime.parsedatetime_consts.pdtLocale_en-class.html#units,Variable parsedatetime.parsedatetime_consts.pdtLocale_es.units=parsedatetime.parsedatetime_consts.pdtLocale_es-class.html#units"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-9', 'units', 'link-9');">units</a></tt><tt class="py-op">)</tt> </tt>
<a name="L256"></a><tt class="py-lineno"> 256</tt>  <tt class="py-line"> </tt>
<a name="L257"></a><tt class="py-lineno"> 257</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">source</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L258"></a><tt class="py-lineno"> 258</tt>  <tt class="py-line">            <tt class="py-name">source</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L259"></a><tt class="py-lineno"> 259</tt>  <tt class="py-line"> </tt>
<a name="L260"></a><tt class="py-lineno"> 260</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">quantity</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L261"></a><tt class="py-lineno"> 261</tt>  <tt class="py-line">            <tt class="py-name">quantity</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L262"></a><tt class="py-lineno"> 262</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L263"></a><tt class="py-lineno"> 263</tt>  <tt class="py-line">            <tt class="py-name">quantity</tt> <tt class="py-op">=</tt> <tt class="py-name">quantity</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L264"></a><tt class="py-lineno"> 264</tt>  <tt class="py-line"> </tt>
<a name="L265"></a><tt class="py-lineno"> 265</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">quantity</tt><tt class="py-op">)</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L266"></a><tt class="py-lineno"> 266</tt>  <tt class="py-line">            <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L267"></a><tt class="py-lineno"> 267</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L268"></a><tt class="py-lineno"> 268</tt>  <tt class="py-line">            <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L269"></a><tt class="py-lineno"> 269</tt>  <tt class="py-line">                <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">quantity</tt><tt class="py-op">)</tt> </tt>
<a name="L270"></a><tt class="py-lineno"> 270</tt>  <tt class="py-line">            <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L271"></a><tt class="py-lineno"> 271</tt>  <tt class="py-line">                <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L272"></a><tt class="py-lineno"> 272</tt>  <tt class="py-line"> </tt>
<a name="L273"></a><tt class="py-lineno"> 273</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">modifier</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">Modifiers</tt><tt class="py-op">:</tt> </tt>
<a name="L274"></a><tt class="py-lineno"> 274</tt>  <tt class="py-line">            <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-name">qty</tt> <tt class="py-op">*</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">Modifiers</tt><tt class="py-op">[</tt><tt class="py-name">modifier</tt><tt class="py-op">]</tt> </tt>
<a name="L275"></a><tt class="py-lineno"> 275</tt>  <tt class="py-line"> </tt>
<a name="L276"></a><tt class="py-lineno"> 276</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt id="link-10" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-10', 'units', 'link-9');">units</a></tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt> <tt class="py-keyword">or</tt> <tt id="link-11" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-11', 'units', 'link-9');">units</a></tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L277"></a><tt class="py-lineno"> 277</tt>  <tt class="py-line">                <tt id="link-12" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-12', 'units', 'link-9');">units</a></tt> <tt class="py-op">=</tt> <tt class="py-string">'dy'</tt> </tt>
<a name="L278"></a><tt class="py-lineno"> 278</tt>  <tt class="py-line"> </tt>
<a name="L279"></a><tt class="py-lineno"> 279</tt>  <tt class="py-line">        <tt class="py-comment"># plurals are handled by regex's (could be a bug tho)</tt> </tt>
<a name="L280"></a><tt class="py-lineno"> 280</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L281"></a><tt class="py-lineno"> 281</tt>  <tt class="py-line">        <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">source</tt> </tt>
<a name="L282"></a><tt class="py-lineno"> 282</tt>  <tt class="py-line"> </tt>
<a name="L283"></a><tt class="py-lineno"> 283</tt>  <tt class="py-line">        <tt class="py-name">start</tt>  <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">)</tt> </tt>
<a name="L284"></a><tt class="py-lineno"> 284</tt>  <tt class="py-line">        <tt class="py-name">target</tt> <tt class="py-op">=</tt> <tt class="py-name">start</tt> </tt>
<a name="L285"></a><tt class="py-lineno"> 285</tt>  <tt class="py-line"> </tt>
<a name="L286"></a><tt class="py-lineno"> 286</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-13" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-13', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'y'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L287"></a><tt class="py-lineno"> 287</tt>  <tt class="py-line">            <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-14" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar.inc()=parsedatetime.parsedatetime.Calendar-class.html#inc"><a title="parsedatetime.parsedatetime.Calendar.inc" class="py-name" href="#" onclick="return doclink('link-14', 'inc', 'link-14');">inc</a></tt><tt class="py-op">(</tt><tt class="py-name">start</tt><tt class="py-op">,</tt> <tt class="py-name">year</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L288"></a><tt class="py-lineno"> 288</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L289"></a><tt class="py-lineno"> 289</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt id="link-15" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-15', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">endswith</tt><tt class="py-op">(</tt><tt class="py-string">'th'</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt id="link-16" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-16', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">endswith</tt><tt class="py-op">(</tt><tt class="py-string">'ths'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L290"></a><tt class="py-lineno"> 290</tt>  <tt class="py-line">            <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-17" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.inc" class="py-name" href="#" onclick="return doclink('link-17', 'inc', 'link-14');">inc</a></tt><tt class="py-op">(</tt><tt class="py-name">start</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L291"></a><tt class="py-lineno"> 291</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L292"></a><tt class="py-lineno"> 292</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L293"></a><tt class="py-lineno"> 293</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt id="link-18" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-18', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'d'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L294"></a><tt class="py-lineno"> 294</tt>  <tt class="py-line">                <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L295"></a><tt class="py-lineno"> 295</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L296"></a><tt class="py-lineno"> 296</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt id="link-19" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-19', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'h'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L297"></a><tt class="py-lineno"> 297</tt>  <tt class="py-line">                <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">hours</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L298"></a><tt class="py-lineno"> 298</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L299"></a><tt class="py-lineno"> 299</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt id="link-20" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-20', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'m'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L300"></a><tt class="py-lineno"> 300</tt>  <tt class="py-line">                <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">minutes</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L301"></a><tt class="py-lineno"> 301</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L302"></a><tt class="py-lineno"> 302</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt id="link-21" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-21', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'s'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L303"></a><tt class="py-lineno"> 303</tt>  <tt class="py-line">                <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">seconds</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L304"></a><tt class="py-lineno"> 304</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L305"></a><tt class="py-lineno"> 305</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt id="link-22" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-22', 'units', 'link-9');">units</a></tt><tt class="py-op">.</tt><tt class="py-name">startswith</tt><tt class="py-op">(</tt><tt class="py-string">'w'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L306"></a><tt class="py-lineno"> 306</tt>  <tt class="py-line">                <tt class="py-name">target</tt>        <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">weeks</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L307"></a><tt class="py-lineno"> 307</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L308"></a><tt class="py-lineno"> 308</tt>  <tt class="py-line"> </tt>
<a name="L309"></a><tt class="py-lineno"> 309</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
</div><a name="L310"></a><tt class="py-lineno"> 310</tt>  <tt class="py-line"> </tt>
<a name="L311"></a><tt class="py-lineno"> 311</tt>  <tt class="py-line"> </tt>
<a name="Calendar.parseDate"></a><div id="Calendar.parseDate-def"><a name="L312"></a><tt class="py-lineno"> 312</tt> <a class="py-toggle" href="#" id="Calendar.parseDate-toggle" onclick="return toggle('Calendar.parseDate');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#parseDate">parseDate</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">dateString</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.parseDate-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.parseDate-expanded"><a name="L313"></a><tt class="py-lineno"> 313</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L314"></a><tt class="py-lineno"> 314</tt>  <tt class="py-line"><tt class="py-docstring">        Parse short-form date strings::</tt> </tt>
<a name="L315"></a><tt class="py-lineno"> 315</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L316"></a><tt class="py-lineno"> 316</tt>  <tt class="py-line"><tt class="py-docstring">            '05/28/2006' or '04.21'</tt> </tt>
<a name="L317"></a><tt class="py-lineno"> 317</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L318"></a><tt class="py-lineno"> 318</tt>  <tt class="py-line"><tt class="py-docstring">        @type  dateString: string</tt> </tt>
<a name="L319"></a><tt class="py-lineno"> 319</tt>  <tt class="py-line"><tt class="py-docstring">        @param dateString: text to convert to a C{datetime}</tt> </tt>
<a name="L320"></a><tt class="py-lineno"> 320</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L321"></a><tt class="py-lineno"> 321</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  struct_time</tt> </tt>
<a name="L322"></a><tt class="py-lineno"> 322</tt>  <tt class="py-line"><tt class="py-docstring">        @return: calculated C{struct_time} value of dateString</tt> </tt>
<a name="L323"></a><tt class="py-lineno"> 323</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L324"></a><tt class="py-lineno"> 324</tt>  <tt class="py-line">        <tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L325"></a><tt class="py-lineno"> 325</tt>  <tt class="py-line"> </tt>
<a name="L326"></a><tt class="py-lineno"> 326</tt>  <tt class="py-line">        <tt class="py-comment"># values pulled from regex's will be stored here and later</tt> </tt>
<a name="L327"></a><tt class="py-lineno"> 327</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># assigned to mth, dy, yr based on information from the locale</tt> </tt>
<a name="L328"></a><tt class="py-lineno"> 328</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># -1 is used as the marker value because we want zero values</tt> </tt>
<a name="L329"></a><tt class="py-lineno"> 329</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># to be passed thru so they can be flagged as errors later</tt> </tt>
<a name="L330"></a><tt class="py-lineno"> 330</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-name">v1</tt> <tt class="py-op">=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L331"></a><tt class="py-lineno"> 331</tt>  <tt class="py-line">        <tt class="py-name">v2</tt> <tt class="py-op">=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L332"></a><tt class="py-lineno"> 332</tt>  <tt class="py-line">        <tt class="py-name">v3</tt> <tt class="py-op">=</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L333"></a><tt class="py-lineno"> 333</tt>  <tt class="py-line"> </tt>
<a name="L334"></a><tt class="py-lineno"> 334</tt>  <tt class="py-line">        <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">dateString</tt> </tt>
<a name="L335"></a><tt class="py-lineno"> 335</tt>  <tt class="py-line">        <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L336"></a><tt class="py-lineno"> 336</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L337"></a><tt class="py-lineno"> 337</tt>  <tt class="py-line">            <tt class="py-name">index</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L338"></a><tt class="py-lineno"> 338</tt>  <tt class="py-line">            <tt class="py-name">v1</tt>    <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">index</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L339"></a><tt class="py-lineno"> 339</tt>  <tt class="py-line">            <tt class="py-name">s</tt>     <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">index</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L340"></a><tt class="py-lineno"> 340</tt>  <tt class="py-line"> </tt>
<a name="L341"></a><tt class="py-lineno"> 341</tt>  <tt class="py-line">        <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L342"></a><tt class="py-lineno"> 342</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L343"></a><tt class="py-lineno"> 343</tt>  <tt class="py-line">            <tt class="py-name">index</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L344"></a><tt class="py-lineno"> 344</tt>  <tt class="py-line">            <tt class="py-name">v2</tt>    <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">index</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L345"></a><tt class="py-lineno"> 345</tt>  <tt class="py-line">            <tt class="py-name">v3</tt>    <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">index</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> </tt>
<a name="L346"></a><tt class="py-lineno"> 346</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L347"></a><tt class="py-lineno"> 347</tt>  <tt class="py-line">            <tt class="py-name">v2</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L348"></a><tt class="py-lineno"> 348</tt>  <tt class="py-line"> </tt>
<a name="L349"></a><tt class="py-lineno"> 349</tt>  <tt class="py-line">        <tt class="py-name">v</tt> <tt class="py-op">=</tt> <tt class="py-op">[</tt> <tt class="py-name">v1</tt><tt class="py-op">,</tt> <tt class="py-name">v2</tt><tt class="py-op">,</tt> <tt class="py-name">v3</tt> <tt class="py-op">]</tt> </tt>
<a name="L350"></a><tt class="py-lineno"> 350</tt>  <tt class="py-line">        <tt class="py-name">d</tt> <tt class="py-op">=</tt> <tt class="py-op">{</tt> <tt class="py-string">'m'</tt><tt class="py-op">:</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-string">'d'</tt><tt class="py-op">:</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-string">'y'</tt><tt class="py-op">:</tt> <tt class="py-name">yr</tt> <tt class="py-op">}</tt> </tt>
<a name="L351"></a><tt class="py-lineno"> 351</tt>  <tt class="py-line"> </tt>
<a name="L352"></a><tt class="py-lineno"> 352</tt>  <tt class="py-line">        <tt class="py-keyword">for</tt> <tt class="py-name">i</tt> <tt class="py-keyword">in</tt> <tt class="py-name">range</tt><tt class="py-op">(</tt><tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">3</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L353"></a><tt class="py-lineno"> 353</tt>  <tt class="py-line">            <tt class="py-name">n</tt> <tt class="py-op">=</tt> <tt class="py-name">v</tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> </tt>
<a name="L354"></a><tt class="py-lineno"> 354</tt>  <tt class="py-line">            <tt class="py-name">c</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-23" class="py-name" targets="Variable parsedatetime.parsedatetime_consts.pdtLocale_au.dp_order=parsedatetime.parsedatetime_consts.pdtLocale_au-class.html#dp_order,Variable parsedatetime.parsedatetime_consts.pdtLocale_de.dp_order=parsedatetime.parsedatetime_consts.pdtLocale_de-class.html#dp_order,Variable parsedatetime.parsedatetime_consts.pdtLocale_en.dp_order=parsedatetime.parsedatetime_consts.pdtLocale_en-class.html#dp_order,Variable parsedatetime.parsedatetime_consts.pdtLocale_es.dp_order=parsedatetime.parsedatetime_consts.pdtLocale_es-class.html#dp_order"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.dp_order
parsedatetime.parsedatetime_consts.pdtLocale_de.dp_order
parsedatetime.parsedatetime_consts.pdtLocale_en.dp_order
parsedatetime.parsedatetime_consts.pdtLocale_es.dp_order" class="py-name" href="#" onclick="return doclink('link-23', 'dp_order', 'link-23');">dp_order</a></tt><tt class="py-op">[</tt><tt class="py-name">i</tt><tt class="py-op">]</tt> </tt>
<a name="L355"></a><tt class="py-lineno"> 355</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">n</tt> <tt class="py-op">&gt;=</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L356"></a><tt class="py-lineno"> 356</tt>  <tt class="py-line">                <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-name">c</tt><tt class="py-op">]</tt> <tt class="py-op">=</tt> <tt class="py-name">n</tt> </tt>
<a name="L357"></a><tt class="py-lineno"> 357</tt>  <tt class="py-line"> </tt>
<a name="L358"></a><tt class="py-lineno"> 358</tt>  <tt class="py-line">        <tt class="py-comment"># if the year is not specified and the date has already</tt> </tt>
<a name="L359"></a><tt class="py-lineno"> 359</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># passed, increment the year</tt> </tt>
<a name="L360"></a><tt class="py-lineno"> 360</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">v3</tt> <tt class="py-op">==</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'m'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">==</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'m'</tt><tt class="py-op">]</tt> <tt class="py-keyword">and</tt> <tt class="py-name">dy</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'d'</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L361"></a><tt class="py-lineno"> 361</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">=</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'y'</tt><tt class="py-op">]</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L362"></a><tt class="py-lineno"> 362</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L363"></a><tt class="py-lineno"> 363</tt>  <tt class="py-line">            <tt class="py-name">yr</tt>  <tt class="py-op">=</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'y'</tt><tt class="py-op">]</tt> </tt>
<a name="L364"></a><tt class="py-lineno"> 364</tt>  <tt class="py-line"> </tt>
<a name="L365"></a><tt class="py-lineno"> 365</tt>  <tt class="py-line">        <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'m'</tt><tt class="py-op">]</tt> </tt>
<a name="L366"></a><tt class="py-lineno"> 366</tt>  <tt class="py-line">        <tt class="py-name">dy</tt>  <tt class="py-op">=</tt> <tt class="py-name">d</tt><tt class="py-op">[</tt><tt class="py-string">'d'</tt><tt class="py-op">]</tt> </tt>
<a name="L367"></a><tt class="py-lineno"> 367</tt>  <tt class="py-line"> </tt>
<a name="L368"></a><tt class="py-lineno"> 368</tt>  <tt class="py-line">        <tt class="py-comment"># birthday epoch constraint</tt> </tt>
<a name="L369"></a><tt class="py-lineno"> 369</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">yr</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">BirthdayEpoch</tt><tt class="py-op">:</tt> </tt>
<a name="L370"></a><tt class="py-lineno"> 370</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-number">2000</tt> </tt>
<a name="L371"></a><tt class="py-lineno"> 371</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">yr</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">100</tt><tt class="py-op">:</tt> </tt>
<a name="L372"></a><tt class="py-lineno"> 372</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-number">1900</tt> </tt>
<a name="L373"></a><tt class="py-lineno"> 373</tt>  <tt class="py-line"> </tt>
<a name="L374"></a><tt class="py-lineno"> 374</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-24" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-24', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L375"></a><tt class="py-lineno"> 375</tt>  <tt class="py-line">            <tt class="py-keyword">print</tt> <tt class="py-string">'parseDate: '</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-25" class="py-name" targets="Method parsedatetime.parsedatetime_consts.Constants.daysInMonth()=parsedatetime.parsedatetime_consts.Constants-class.html#daysInMonth"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-25', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt> </tt>
<a name="L376"></a><tt class="py-lineno"> 376</tt>  <tt class="py-line"> </tt>
<a name="L377"></a><tt class="py-lineno"> 377</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt> <tt class="py-keyword">and</tt> <tt class="py-name">mth</tt> <tt class="py-op">&lt;=</tt> <tt class="py-number">12</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> \ </tt>
<a name="L378"></a><tt class="py-lineno"> 378</tt>  <tt class="py-line">           <tt class="py-op">(</tt><tt class="py-name">dy</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt> <tt class="py-keyword">and</tt> <tt class="py-name">dy</tt> <tt class="py-op">&lt;=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-26" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-26', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L379"></a><tt class="py-lineno"> 379</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L380"></a><tt class="py-lineno"> 380</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L381"></a><tt class="py-lineno"> 381</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L382"></a><tt class="py-lineno"> 382</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L383"></a><tt class="py-lineno"> 383</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-comment"># return current time if date</tt> </tt>
<a name="L384"></a><tt class="py-lineno"> 384</tt>  <tt class="py-line">                                             <tt class="py-comment"># string is invalid</tt> </tt>
<a name="L385"></a><tt class="py-lineno"> 385</tt>  <tt class="py-line"><tt class="py-comment"></tt> </tt>
<a name="L386"></a><tt class="py-lineno"> 386</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">sourceTime</tt> </tt>
</div><a name="L387"></a><tt class="py-lineno"> 387</tt>  <tt class="py-line"> </tt>
<a name="L388"></a><tt class="py-lineno"> 388</tt>  <tt class="py-line"> </tt>
<a name="Calendar.parseDateText"></a><div id="Calendar.parseDateText-def"><a name="L389"></a><tt class="py-lineno"> 389</tt> <a class="py-toggle" href="#" id="Calendar.parseDateText-toggle" onclick="return toggle('Calendar.parseDateText');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#parseDateText">parseDateText</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">dateString</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.parseDateText-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.parseDateText-expanded"><a name="L390"></a><tt class="py-lineno"> 390</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L391"></a><tt class="py-lineno"> 391</tt>  <tt class="py-line"><tt class="py-docstring">        Parse long-form date strings::</tt> </tt>
<a name="L392"></a><tt class="py-lineno"> 392</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L393"></a><tt class="py-lineno"> 393</tt>  <tt class="py-line"><tt class="py-docstring">            'May 31st, 2006'</tt> </tt>
<a name="L394"></a><tt class="py-lineno"> 394</tt>  <tt class="py-line"><tt class="py-docstring">            'Jan 1st'</tt> </tt>
<a name="L395"></a><tt class="py-lineno"> 395</tt>  <tt class="py-line"><tt class="py-docstring">            'July 2006'</tt> </tt>
<a name="L396"></a><tt class="py-lineno"> 396</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L397"></a><tt class="py-lineno"> 397</tt>  <tt class="py-line"><tt class="py-docstring">        @type  dateString: string</tt> </tt>
<a name="L398"></a><tt class="py-lineno"> 398</tt>  <tt class="py-line"><tt class="py-docstring">        @param dateString: text to convert to a datetime</tt> </tt>
<a name="L399"></a><tt class="py-lineno"> 399</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L400"></a><tt class="py-lineno"> 400</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  struct_time</tt> </tt>
<a name="L401"></a><tt class="py-lineno"> 401</tt>  <tt class="py-line"><tt class="py-docstring">        @return: calculated C{struct_time} value of dateString</tt> </tt>
<a name="L402"></a><tt class="py-lineno"> 402</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L403"></a><tt class="py-lineno"> 403</tt>  <tt class="py-line">        <tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L404"></a><tt class="py-lineno"> 404</tt>  <tt class="py-line"> </tt>
<a name="L405"></a><tt class="py-lineno"> 405</tt>  <tt class="py-line">        <tt class="py-name">currentMth</tt> <tt class="py-op">=</tt> <tt class="py-name">mth</tt> </tt>
<a name="L406"></a><tt class="py-lineno"> 406</tt>  <tt class="py-line">        <tt class="py-name">currentDy</tt>  <tt class="py-op">=</tt> <tt class="py-name">dy</tt> </tt>
<a name="L407"></a><tt class="py-lineno"> 407</tt>  <tt class="py-line"> </tt>
<a name="L408"></a><tt class="py-lineno"> 408</tt>  <tt class="py-line">        <tt class="py-name">s</tt>   <tt class="py-op">=</tt> <tt class="py-name">dateString</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L409"></a><tt class="py-lineno"> 409</tt>  <tt class="py-line">        <tt class="py-name">m</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L410"></a><tt class="py-lineno"> 410</tt>  <tt class="py-line">        <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'mthname'</tt><tt class="py-op">)</tt> </tt>
<a name="L411"></a><tt class="py-lineno"> 411</tt>  <tt class="py-line">        <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">MonthOffsets</tt><tt class="py-op">[</tt><tt class="py-name">mth</tt><tt class="py-op">]</tt> </tt>
<a name="L412"></a><tt class="py-lineno"> 412</tt>  <tt class="py-line"> </tt>
<a name="L413"></a><tt class="py-lineno"> 413</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt>  <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L414"></a><tt class="py-lineno"> 414</tt>  <tt class="py-line">            <tt class="py-name">dy</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L415"></a><tt class="py-lineno"> 415</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L416"></a><tt class="py-lineno"> 416</tt>  <tt class="py-line">            <tt class="py-name">dy</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L417"></a><tt class="py-lineno"> 417</tt>  <tt class="py-line"> </tt>
<a name="L418"></a><tt class="py-lineno"> 418</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'year'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt>  <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L419"></a><tt class="py-lineno"> 419</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'year'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L420"></a><tt class="py-lineno"> 420</tt>  <tt class="py-line"> </tt>
<a name="L421"></a><tt class="py-lineno"> 421</tt>  <tt class="py-line">            <tt class="py-comment"># birthday epoch constraint</tt> </tt>
<a name="L422"></a><tt class="py-lineno"> 422</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">yr</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">BirthdayEpoch</tt><tt class="py-op">:</tt> </tt>
<a name="L423"></a><tt class="py-lineno"> 423</tt>  <tt class="py-line">                <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-number">2000</tt> </tt>
<a name="L424"></a><tt class="py-lineno"> 424</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">yr</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">100</tt><tt class="py-op">:</tt> </tt>
<a name="L425"></a><tt class="py-lineno"> 425</tt>  <tt class="py-line">                <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-number">1900</tt> </tt>
<a name="L426"></a><tt class="py-lineno"> 426</tt>  <tt class="py-line"> </tt>
<a name="L427"></a><tt class="py-lineno"> 427</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">currentMth</tt><tt class="py-op">)</tt> <tt class="py-keyword">or</tt> <tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">==</tt> <tt class="py-name">currentMth</tt> <tt class="py-keyword">and</tt> <tt class="py-name">dy</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">currentDy</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L428"></a><tt class="py-lineno"> 428</tt>  <tt class="py-line">            <tt class="py-comment"># if that day and month have already passed in this year,</tt> </tt>
<a name="L429"></a><tt class="py-lineno"> 429</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># then increment the year by 1</tt> </tt>
<a name="L430"></a><tt class="py-lineno"> 430</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-number">1</tt> </tt>
<a name="L431"></a><tt class="py-lineno"> 431</tt>  <tt class="py-line"> </tt>
<a name="L432"></a><tt class="py-lineno"> 432</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">dy</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt> <tt class="py-keyword">and</tt> <tt class="py-name">dy</tt> <tt class="py-op">&lt;=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-27" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-27', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L433"></a><tt class="py-lineno"> 433</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L434"></a><tt class="py-lineno"> 434</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L435"></a><tt class="py-lineno"> 435</tt>  <tt class="py-line">            <tt class="py-comment"># Return current time if date string is invalid</tt> </tt>
<a name="L436"></a><tt class="py-lineno"> 436</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L437"></a><tt class="py-lineno"> 437</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L438"></a><tt class="py-lineno"> 438</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L439"></a><tt class="py-lineno"> 439</tt>  <tt class="py-line"> </tt>
<a name="L440"></a><tt class="py-lineno"> 440</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">sourceTime</tt> </tt>
</div><a name="L441"></a><tt class="py-lineno"> 441</tt>  <tt class="py-line"> </tt>
<a name="L442"></a><tt class="py-lineno"> 442</tt>  <tt class="py-line"> </tt>
<a name="Calendar.evalRanges"></a><div id="Calendar.evalRanges-def"><a name="L443"></a><tt class="py-lineno"> 443</tt> <a class="py-toggle" href="#" id="Calendar.evalRanges-toggle" onclick="return toggle('Calendar.evalRanges');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#evalRanges">evalRanges</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">datetimeString</tt><tt class="py-op">,</tt> <tt class="py-param">sourceTime</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.evalRanges-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.evalRanges-expanded"><a name="L444"></a><tt class="py-lineno"> 444</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L445"></a><tt class="py-lineno"> 445</tt>  <tt class="py-line"><tt class="py-docstring">        Evaluate the C{datetimeString} text and determine if</tt> </tt>
<a name="L446"></a><tt class="py-lineno"> 446</tt>  <tt class="py-line"><tt class="py-docstring">        it represents a date or time range.</tt> </tt>
<a name="L447"></a><tt class="py-lineno"> 447</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L448"></a><tt class="py-lineno"> 448</tt>  <tt class="py-line"><tt class="py-docstring">        @type  datetimeString: string</tt> </tt>
<a name="L449"></a><tt class="py-lineno"> 449</tt>  <tt class="py-line"><tt class="py-docstring">        @param datetimeString: datetime text to evaluate</tt> </tt>
<a name="L450"></a><tt class="py-lineno"> 450</tt>  <tt class="py-line"><tt class="py-docstring">        @type  sourceTime:     struct_time</tt> </tt>
<a name="L451"></a><tt class="py-lineno"> 451</tt>  <tt class="py-line"><tt class="py-docstring">        @param sourceTime:     C{struct_time} value to use as the base</tt> </tt>
<a name="L452"></a><tt class="py-lineno"> 452</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L453"></a><tt class="py-lineno"> 453</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  tuple</tt> </tt>
<a name="L454"></a><tt class="py-lineno"> 454</tt>  <tt class="py-line"><tt class="py-docstring">        @return: tuple of: start datetime, end datetime and the invalid flag</tt> </tt>
<a name="L455"></a><tt class="py-lineno"> 455</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L456"></a><tt class="py-lineno"> 456</tt>  <tt class="py-line">        <tt class="py-name">startTime</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L457"></a><tt class="py-lineno"> 457</tt>  <tt class="py-line">        <tt class="py-name">endTime</tt>   <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L458"></a><tt class="py-lineno"> 458</tt>  <tt class="py-line">        <tt class="py-name">startDate</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L459"></a><tt class="py-lineno"> 459</tt>  <tt class="py-line">        <tt class="py-name">endDate</tt>   <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L460"></a><tt class="py-lineno"> 460</tt>  <tt class="py-line">        <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L461"></a><tt class="py-lineno"> 461</tt>  <tt class="py-line"> </tt>
<a name="L462"></a><tt class="py-lineno"> 462</tt>  <tt class="py-line">        <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">datetimeString</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L463"></a><tt class="py-lineno"> 463</tt>  <tt class="py-line"> </tt>
<a name="L464"></a><tt class="py-lineno"> 464</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt> <tt class="py-keyword">in</tt> <tt class="py-name">s</tt><tt class="py-op">:</tt> </tt>
<a name="L465"></a><tt class="py-lineno"> 465</tt>  <tt class="py-line">            <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">.</tt><tt class="py-name">replace</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-string">' %s '</tt> <tt class="py-op">%</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">)</tt> </tt>
<a name="L466"></a><tt class="py-lineno"> 466</tt>  <tt class="py-line">            <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">.</tt><tt class="py-name">replace</tt><tt class="py-op">(</tt><tt class="py-string">'  '</tt><tt class="py-op">,</tt> <tt class="py-string">' '</tt><tt class="py-op">)</tt> </tt>
<a name="L467"></a><tt class="py-lineno"> 467</tt>  <tt class="py-line"> </tt>
<a name="L468"></a><tt class="py-lineno"> 468</tt>  <tt class="py-line">        <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMERNG1</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L469"></a><tt class="py-lineno"> 469</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L470"></a><tt class="py-lineno"> 470</tt>  <tt class="py-line">            <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L471"></a><tt class="py-lineno"> 471</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L472"></a><tt class="py-lineno"> 472</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMERNG2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L473"></a><tt class="py-lineno"> 473</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L474"></a><tt class="py-lineno"> 474</tt>  <tt class="py-line">                <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L475"></a><tt class="py-lineno"> 475</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L476"></a><tt class="py-lineno"> 476</tt>  <tt class="py-line">                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMERNG4</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L477"></a><tt class="py-lineno"> 477</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L478"></a><tt class="py-lineno"> 478</tt>  <tt class="py-line">                    <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">7</tt> </tt>
<a name="L479"></a><tt class="py-lineno"> 479</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L480"></a><tt class="py-lineno"> 480</tt>  <tt class="py-line">                    <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMERNG3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L481"></a><tt class="py-lineno"> 481</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L482"></a><tt class="py-lineno"> 482</tt>  <tt class="py-line">                        <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">3</tt> </tt>
<a name="L483"></a><tt class="py-lineno"> 483</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L484"></a><tt class="py-lineno"> 484</tt>  <tt class="py-line">                        <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATERNG1</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L485"></a><tt class="py-lineno"> 485</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L486"></a><tt class="py-lineno"> 486</tt>  <tt class="py-line">                            <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">4</tt> </tt>
<a name="L487"></a><tt class="py-lineno"> 487</tt>  <tt class="py-line">                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L488"></a><tt class="py-lineno"> 488</tt>  <tt class="py-line">                            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATERNG2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L489"></a><tt class="py-lineno"> 489</tt>  <tt class="py-line">                            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L490"></a><tt class="py-lineno"> 490</tt>  <tt class="py-line">                                <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">5</tt> </tt>
<a name="L491"></a><tt class="py-lineno"> 491</tt>  <tt class="py-line">                            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L492"></a><tt class="py-lineno"> 492</tt>  <tt class="py-line">                                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATERNG3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L493"></a><tt class="py-lineno"> 493</tt>  <tt class="py-line">                                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L494"></a><tt class="py-lineno"> 494</tt>  <tt class="py-line">                                    <tt class="py-name">rangeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">6</tt> </tt>
<a name="L495"></a><tt class="py-lineno"> 495</tt>  <tt class="py-line"> </tt>
<a name="L496"></a><tt class="py-lineno"> 496</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-28" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-28', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L497"></a><tt class="py-lineno"> 497</tt>  <tt class="py-line">            <tt class="py-keyword">print</tt> <tt class="py-string">'evalRanges: rangeFlag ='</tt><tt class="py-op">,</tt> <tt class="py-name">rangeFlag</tt><tt class="py-op">,</tt> <tt class="py-string">'[%s]'</tt> <tt class="py-op">%</tt> <tt class="py-name">s</tt> </tt>
<a name="L498"></a><tt class="py-lineno"> 498</tt>  <tt class="py-line"> </tt>
<a name="L499"></a><tt class="py-lineno"> 499</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L500"></a><tt class="py-lineno"> 500</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L501"></a><tt class="py-lineno"> 501</tt>  <tt class="py-line">                <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L502"></a><tt class="py-lineno"> 502</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L503"></a><tt class="py-lineno"> 503</tt>  <tt class="py-line">                <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L504"></a><tt class="py-lineno"> 504</tt>  <tt class="py-line">                <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L505"></a><tt class="py-lineno"> 505</tt>  <tt class="py-line">                <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L506"></a><tt class="py-lineno"> 506</tt>  <tt class="py-line">                <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L507"></a><tt class="py-lineno"> 507</tt>  <tt class="py-line"> </tt>
<a name="L508"></a><tt class="py-lineno"> 508</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-29" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar.parse()=parsedatetime.parsedatetime.Calendar-class.html#parse"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-29', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L509"></a><tt class="py-lineno"> 509</tt>  <tt class="py-line"> </tt>
<a name="L510"></a><tt class="py-lineno"> 510</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">flag</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L511"></a><tt class="py-lineno"> 511</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">None</tt> </tt>
<a name="L512"></a><tt class="py-lineno"> 512</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L513"></a><tt class="py-lineno"> 513</tt>  <tt class="py-line">                <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L514"></a><tt class="py-lineno"> 514</tt>  <tt class="py-line"> </tt>
<a name="L515"></a><tt class="py-lineno"> 515</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L516"></a><tt class="py-lineno"> 516</tt>  <tt class="py-line">            <tt class="py-name">m</tt>                <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L517"></a><tt class="py-lineno"> 517</tt>  <tt class="py-line">            <tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-30" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-30', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt>       <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L518"></a><tt class="py-lineno"> 518</tt>  <tt class="py-line">            <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-31" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-31', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L519"></a><tt class="py-lineno"> 519</tt>  <tt class="py-line"> </tt>
<a name="L520"></a><tt class="py-lineno"> 520</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L521"></a><tt class="py-lineno"> 521</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-number">2</tt><tt class="py-op">)</tt> </tt>
<a name="L522"></a><tt class="py-lineno"> 522</tt>  <tt class="py-line"> </tt>
<a name="L523"></a><tt class="py-lineno"> 523</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L524"></a><tt class="py-lineno"> 524</tt>  <tt class="py-line">            <tt class="py-name">m</tt>                <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L525"></a><tt class="py-lineno"> 525</tt>  <tt class="py-line">            <tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-32" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-32', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt>       <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L526"></a><tt class="py-lineno"> 526</tt>  <tt class="py-line">            <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-33" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-33', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L527"></a><tt class="py-lineno"> 527</tt>  <tt class="py-line"> </tt>
<a name="L528"></a><tt class="py-lineno"> 528</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L529"></a><tt class="py-lineno"> 529</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-number">2</tt><tt class="py-op">)</tt> </tt>
<a name="L530"></a><tt class="py-lineno"> 530</tt>  <tt class="py-line"> </tt>
<a name="L531"></a><tt class="py-lineno"> 531</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">3</tt> <tt class="py-keyword">or</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">7</tt><tt class="py-op">:</tt> </tt>
<a name="L532"></a><tt class="py-lineno"> 532</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L533"></a><tt class="py-lineno"> 533</tt>  <tt class="py-line">            <tt class="py-comment"># capturing the meridian from the end time</tt> </tt>
<a name="L534"></a><tt class="py-lineno"> 534</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-34" class="py-name" targets="Variable parsedatetime.parsedatetime_consts.pdtLocale_au.usesMeridian=parsedatetime.parsedatetime_consts.pdtLocale_au-class.html#usesMeridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_de.usesMeridian=parsedatetime.parsedatetime_consts.pdtLocale_de-class.html#usesMeridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_en.usesMeridian=parsedatetime.parsedatetime_consts.pdtLocale_en-class.html#usesMeridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_es.usesMeridian=parsedatetime.parsedatetime_consts.pdtLocale_es-class.html#usesMeridian"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.usesMeridian
parsedatetime.parsedatetime_consts.pdtLocale_de.usesMeridian
parsedatetime.parsedatetime_consts.pdtLocale_en.usesMeridian
parsedatetime.parsedatetime_consts.pdtLocale_es.usesMeridian" class="py-name" href="#" onclick="return doclink('link-34', 'usesMeridian', 'link-34');">usesMeridian</a></tt><tt class="py-op">:</tt> </tt>
<a name="L535"></a><tt class="py-lineno"> 535</tt>  <tt class="py-line">                <tt class="py-name">ampm</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">am</tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L536"></a><tt class="py-lineno"> 536</tt>  <tt class="py-line"> </tt>
<a name="L537"></a><tt class="py-lineno"> 537</tt>  <tt class="py-line">                <tt class="py-comment"># appending the meridian to the start time</tt> </tt>
<a name="L538"></a><tt class="py-lineno"> 538</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-name">ampm</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L539"></a><tt class="py-lineno"> 539</tt>  <tt class="py-line">                    <tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-35" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-35', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-36" class="py-name" targets="Variable parsedatetime.parsedatetime_consts.pdtLocale_au.meridian=parsedatetime.parsedatetime_consts.pdtLocale_au-class.html#meridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_de.meridian=parsedatetime.parsedatetime_consts.pdtLocale_de-class.html#meridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_en.meridian=parsedatetime.parsedatetime_consts.pdtLocale_en-class.html#meridian,Variable parsedatetime.parsedatetime_consts.pdtLocale_es.meridian=parsedatetime.parsedatetime_consts.pdtLocale_es-class.html#meridian"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.meridian
parsedatetime.parsedatetime_consts.pdtLocale_de.meridian
parsedatetime.parsedatetime_consts.pdtLocale_en.meridian
parsedatetime.parsedatetime_consts.pdtLocale_es.meridian" class="py-name" href="#" onclick="return doclink('link-36', 'meridian', 'link-36');">meridian</a></tt><tt class="py-op">[</tt><tt class="py-number">0</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L540"></a><tt class="py-lineno"> 540</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L541"></a><tt class="py-lineno"> 541</tt>  <tt class="py-line">                    <tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-37" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-37', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-38" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.meridian
parsedatetime.parsedatetime_consts.pdtLocale_de.meridian
parsedatetime.parsedatetime_consts.pdtLocale_en.meridian
parsedatetime.parsedatetime_consts.pdtLocale_es.meridian" class="py-name" href="#" onclick="return doclink('link-38', 'meridian', 'link-36');">meridian</a></tt><tt class="py-op">[</tt><tt class="py-number">1</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L542"></a><tt class="py-lineno"> 542</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L543"></a><tt class="py-lineno"> 543</tt>  <tt class="py-line">                <tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-39" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-39', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L544"></a><tt class="py-lineno"> 544</tt>  <tt class="py-line"> </tt>
<a name="L545"></a><tt class="py-lineno"> 545</tt>  <tt class="py-line">            <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-40" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-40', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L546"></a><tt class="py-lineno"> 546</tt>  <tt class="py-line"> </tt>
<a name="L547"></a><tt class="py-lineno"> 547</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L548"></a><tt class="py-lineno"> 548</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startTime</tt><tt class="py-op">,</tt> <tt class="py-name">endTime</tt><tt class="py-op">,</tt> <tt class="py-number">2</tt><tt class="py-op">)</tt> </tt>
<a name="L549"></a><tt class="py-lineno"> 549</tt>  <tt class="py-line"> </tt>
<a name="L550"></a><tt class="py-lineno"> 550</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">4</tt><tt class="py-op">:</tt> </tt>
<a name="L551"></a><tt class="py-lineno"> 551</tt>  <tt class="py-line">            <tt class="py-name">m</tt>                <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L552"></a><tt class="py-lineno"> 552</tt>  <tt class="py-line">            <tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-41" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-41', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt>       <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L553"></a><tt class="py-lineno"> 553</tt>  <tt class="py-line">            <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-42" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-42', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L554"></a><tt class="py-lineno"> 554</tt>  <tt class="py-line"> </tt>
<a name="L555"></a><tt class="py-lineno"> 555</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L556"></a><tt class="py-lineno"> 556</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L557"></a><tt class="py-lineno"> 557</tt>  <tt class="py-line"> </tt>
<a name="L558"></a><tt class="py-lineno"> 558</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">5</tt><tt class="py-op">:</tt> </tt>
<a name="L559"></a><tt class="py-lineno"> 559</tt>  <tt class="py-line">            <tt class="py-name">m</tt>       <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L560"></a><tt class="py-lineno"> 560</tt>  <tt class="py-line">            <tt class="py-name">endDate</tt> <tt class="py-op">=</tt> <tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L561"></a><tt class="py-lineno"> 561</tt>  <tt class="py-line"> </tt>
<a name="L562"></a><tt class="py-lineno"> 562</tt>  <tt class="py-line">            <tt class="py-comment"># capturing the year from the end date</tt> </tt>
<a name="L563"></a><tt class="py-lineno"> 563</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">date</tt>    <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">endDate</tt><tt class="py-op">)</tt> </tt>
<a name="L564"></a><tt class="py-lineno"> 564</tt>  <tt class="py-line">            <tt class="py-name">endYear</tt> <tt class="py-op">=</tt> <tt class="py-name">date</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'year'</tt><tt class="py-op">)</tt> </tt>
<a name="L565"></a><tt class="py-lineno"> 565</tt>  <tt class="py-line"> </tt>
<a name="L566"></a><tt class="py-lineno"> 566</tt>  <tt class="py-line">            <tt class="py-comment"># appending the year to the start date if the start date</tt> </tt>
<a name="L567"></a><tt class="py-lineno"> 567</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># does not have year information and the end date does.</tt> </tt>
<a name="L568"></a><tt class="py-lineno"> 568</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># eg : "Aug 21 - Sep 4, 2007"</tt> </tt>
<a name="L569"></a><tt class="py-lineno"> 569</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">endYear</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L570"></a><tt class="py-lineno"> 570</tt>  <tt class="py-line">                <tt class="py-name">startDate</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L571"></a><tt class="py-lineno"> 571</tt>  <tt class="py-line">                <tt class="py-name">date</tt>      <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">)</tt> </tt>
<a name="L572"></a><tt class="py-lineno"> 572</tt>  <tt class="py-line">                <tt class="py-name">startYear</tt> <tt class="py-op">=</tt> <tt class="py-name">date</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'year'</tt><tt class="py-op">)</tt> </tt>
<a name="L573"></a><tt class="py-lineno"> 573</tt>  <tt class="py-line"> </tt>
<a name="L574"></a><tt class="py-lineno"> 574</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">startYear</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L575"></a><tt class="py-lineno"> 575</tt>  <tt class="py-line">                    <tt class="py-name">startDate</tt> <tt class="py-op">=</tt> <tt class="py-name">startDate</tt> <tt class="py-op">+</tt> <tt class="py-string">', '</tt> <tt class="py-op">+</tt> <tt class="py-name">endYear</tt> </tt>
<a name="L576"></a><tt class="py-lineno"> 576</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L577"></a><tt class="py-lineno"> 577</tt>  <tt class="py-line">                <tt class="py-name">startDate</tt> <tt class="py-op">=</tt> <tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L578"></a><tt class="py-lineno"> 578</tt>  <tt class="py-line"> </tt>
<a name="L579"></a><tt class="py-lineno"> 579</tt>  <tt class="py-line">            <tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-43" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-43', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L580"></a><tt class="py-lineno"> 580</tt>  <tt class="py-line">            <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-44" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-44', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L581"></a><tt class="py-lineno"> 581</tt>  <tt class="py-line"> </tt>
<a name="L582"></a><tt class="py-lineno"> 582</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L583"></a><tt class="py-lineno"> 583</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L584"></a><tt class="py-lineno"> 584</tt>  <tt class="py-line"> </tt>
<a name="L585"></a><tt class="py-lineno"> 585</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">rangeFlag</tt> <tt class="py-op">==</tt> <tt class="py-number">6</tt><tt class="py-op">:</tt> </tt>
<a name="L586"></a><tt class="py-lineno"> 586</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">rangeSep</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L587"></a><tt class="py-lineno"> 587</tt>  <tt class="py-line"> </tt>
<a name="L588"></a><tt class="py-lineno"> 588</tt>  <tt class="py-line">            <tt class="py-name">startDate</tt> <tt class="py-op">=</tt> <tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L589"></a><tt class="py-lineno"> 589</tt>  <tt class="py-line"> </tt>
<a name="L590"></a><tt class="py-lineno"> 590</tt>  <tt class="py-line">            <tt class="py-comment"># capturing the month from the start date</tt> </tt>
<a name="L591"></a><tt class="py-lineno"> 591</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">)</tt> </tt>
<a name="L592"></a><tt class="py-lineno"> 592</tt>  <tt class="py-line">            <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">mth</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'mthname'</tt><tt class="py-op">)</tt> </tt>
<a name="L593"></a><tt class="py-lineno"> 593</tt>  <tt class="py-line"> </tt>
<a name="L594"></a><tt class="py-lineno"> 594</tt>  <tt class="py-line">            <tt class="py-comment"># appending the month name to the end date</tt> </tt>
<a name="L595"></a><tt class="py-lineno"> 595</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">endDate</tt> <tt class="py-op">=</tt> <tt class="py-name">mth</tt> <tt class="py-op">+</tt> <tt class="py-name">parseStr</tt><tt class="py-op">[</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L596"></a><tt class="py-lineno"> 596</tt>  <tt class="py-line"> </tt>
<a name="L597"></a><tt class="py-lineno"> 597</tt>  <tt class="py-line">            <tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">sflag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-45" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-45', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L598"></a><tt class="py-lineno"> 598</tt>  <tt class="py-line">            <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-name">eflag</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-46" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-46', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L599"></a><tt class="py-lineno"> 599</tt>  <tt class="py-line"> </tt>
<a name="L600"></a><tt class="py-lineno"> 600</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">eflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt>  <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sflag</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L601"></a><tt class="py-lineno"> 601</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">startDate</tt><tt class="py-op">,</tt> <tt class="py-name">endDate</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L602"></a><tt class="py-lineno"> 602</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L603"></a><tt class="py-lineno"> 603</tt>  <tt class="py-line">            <tt class="py-comment"># if range is not found</tt> </tt>
<a name="L604"></a><tt class="py-lineno"> 604</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L605"></a><tt class="py-lineno"> 605</tt>  <tt class="py-line"> </tt>
<a name="L606"></a><tt class="py-lineno"> 606</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
</div><a name="L607"></a><tt class="py-lineno"> 607</tt>  <tt class="py-line"> </tt>
<a name="L608"></a><tt class="py-lineno"> 608</tt>  <tt class="py-line"> </tt>
<a name="Calendar._CalculateDOWDelta"></a><div id="Calendar._CalculateDOWDelta-def"><a name="L609"></a><tt class="py-lineno"> 609</tt> <a class="py-toggle" href="#" id="Calendar._CalculateDOWDelta-toggle" onclick="return toggle('Calendar._CalculateDOWDelta');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_CalculateDOWDelta">_CalculateDOWDelta</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">wd</tt><tt class="py-op">,</tt> <tt class="py-param">wkdy</tt><tt class="py-op">,</tt> <tt class="py-param">offset</tt><tt class="py-op">,</tt> <tt class="py-param">style</tt><tt class="py-op">,</tt> <tt class="py-param">currentDayStyle</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._CalculateDOWDelta-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._CalculateDOWDelta-expanded"><a name="L610"></a><tt class="py-lineno"> 610</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L611"></a><tt class="py-lineno"> 611</tt>  <tt class="py-line"><tt class="py-docstring">        Based on the C{style} and C{currentDayStyle} determine what</tt> </tt>
<a name="L612"></a><tt class="py-lineno"> 612</tt>  <tt class="py-line"><tt class="py-docstring">        day-of-week value is to be returned.</tt> </tt>
<a name="L613"></a><tt class="py-lineno"> 613</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L614"></a><tt class="py-lineno"> 614</tt>  <tt class="py-line"><tt class="py-docstring">        @type  wd:              integer</tt> </tt>
<a name="L615"></a><tt class="py-lineno"> 615</tt>  <tt class="py-line"><tt class="py-docstring">        @param wd:              day-of-week value for the current day</tt> </tt>
<a name="L616"></a><tt class="py-lineno"> 616</tt>  <tt class="py-line"><tt class="py-docstring">        @type  wkdy:            integer</tt> </tt>
<a name="L617"></a><tt class="py-lineno"> 617</tt>  <tt class="py-line"><tt class="py-docstring">        @param wkdy:            day-of-week value for the parsed day</tt> </tt>
<a name="L618"></a><tt class="py-lineno"> 618</tt>  <tt class="py-line"><tt class="py-docstring">        @type  offset:          integer</tt> </tt>
<a name="L619"></a><tt class="py-lineno"> 619</tt>  <tt class="py-line"><tt class="py-docstring">        @param offset:          offset direction for any modifiers (-1, 0, 1)</tt> </tt>
<a name="L620"></a><tt class="py-lineno"> 620</tt>  <tt class="py-line"><tt class="py-docstring">        @type  style:           integer</tt> </tt>
<a name="L621"></a><tt class="py-lineno"> 621</tt>  <tt class="py-line"><tt class="py-docstring">        @param style:           normally the value set in C{Constants.DOWParseStyle}</tt> </tt>
<a name="L622"></a><tt class="py-lineno"> 622</tt>  <tt class="py-line"><tt class="py-docstring">        @type  currentDayStyle: integer</tt> </tt>
<a name="L623"></a><tt class="py-lineno"> 623</tt>  <tt class="py-line"><tt class="py-docstring">        @param currentDayStyle: normally the value set in C{Constants.CurrentDOWParseStyle}</tt> </tt>
<a name="L624"></a><tt class="py-lineno"> 624</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L625"></a><tt class="py-lineno"> 625</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  integer</tt> </tt>
<a name="L626"></a><tt class="py-lineno"> 626</tt>  <tt class="py-line"><tt class="py-docstring">        @return: calculated day-of-week</tt> </tt>
<a name="L627"></a><tt class="py-lineno"> 627</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L628"></a><tt class="py-lineno"> 628</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L629"></a><tt class="py-lineno"> 629</tt>  <tt class="py-line">            <tt class="py-comment"># modifier is indicating future week eg: "next".</tt> </tt>
<a name="L630"></a><tt class="py-lineno"> 630</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># DOW is calculated as DOW of next week</tt> </tt>
<a name="L631"></a><tt class="py-lineno"> 631</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-number">7</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">+</tt> <tt class="py-name">wkdy</tt> </tt>
<a name="L632"></a><tt class="py-lineno"> 632</tt>  <tt class="py-line"> </tt>
<a name="L633"></a><tt class="py-lineno"> 633</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L634"></a><tt class="py-lineno"> 634</tt>  <tt class="py-line">            <tt class="py-comment"># modifier is indicating past week eg: "last","previous"</tt> </tt>
<a name="L635"></a><tt class="py-lineno"> 635</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># DOW is calculated as DOW of previous week</tt> </tt>
<a name="L636"></a><tt class="py-lineno"> 636</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">-</tt> <tt class="py-number">7</tt> </tt>
<a name="L637"></a><tt class="py-lineno"> 637</tt>  <tt class="py-line"> </tt>
<a name="L638"></a><tt class="py-lineno"> 638</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L639"></a><tt class="py-lineno"> 639</tt>  <tt class="py-line">            <tt class="py-comment"># modifier is indiacting current week eg: "this"</tt> </tt>
<a name="L640"></a><tt class="py-lineno"> 640</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># DOW is calculated as DOW of this week</tt> </tt>
<a name="L641"></a><tt class="py-lineno"> 641</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L642"></a><tt class="py-lineno"> 642</tt>  <tt class="py-line"> </tt>
<a name="L643"></a><tt class="py-lineno"> 643</tt>  <tt class="py-line">        <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L644"></a><tt class="py-lineno"> 644</tt>  <tt class="py-line">            <tt class="py-comment"># no modifier is present.</tt> </tt>
<a name="L645"></a><tt class="py-lineno"> 645</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># i.e. string to be parsed is just DOW</tt> </tt>
<a name="L646"></a><tt class="py-lineno"> 646</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">style</tt> <tt class="py-op">==</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L647"></a><tt class="py-lineno"> 647</tt>  <tt class="py-line">                <tt class="py-comment"># next occurance of the DOW is calculated</tt> </tt>
<a name="L648"></a><tt class="py-lineno"> 648</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-name">currentDayStyle</tt> <tt class="py-op">==</tt> <tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L649"></a><tt class="py-lineno"> 649</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">&gt;=</tt> <tt class="py-name">wd</tt><tt class="py-op">:</tt> </tt>
<a name="L650"></a><tt class="py-lineno"> 650</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L651"></a><tt class="py-lineno"> 651</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L652"></a><tt class="py-lineno"> 652</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-number">7</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">+</tt> <tt class="py-name">wkdy</tt> </tt>
<a name="L653"></a><tt class="py-lineno"> 653</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L654"></a><tt class="py-lineno"> 654</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">wd</tt><tt class="py-op">:</tt> </tt>
<a name="L655"></a><tt class="py-lineno"> 655</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L656"></a><tt class="py-lineno"> 656</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L657"></a><tt class="py-lineno"> 657</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-number">7</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">+</tt> <tt class="py-name">wkdy</tt> </tt>
<a name="L658"></a><tt class="py-lineno"> 658</tt>  <tt class="py-line"> </tt>
<a name="L659"></a><tt class="py-lineno"> 659</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">style</tt> <tt class="py-op">==</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">:</tt> </tt>
<a name="L660"></a><tt class="py-lineno"> 660</tt>  <tt class="py-line">                <tt class="py-comment"># last occurance of the DOW is calculated</tt> </tt>
<a name="L661"></a><tt class="py-lineno"> 661</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-name">currentDayStyle</tt> <tt class="py-op">==</tt> <tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L662"></a><tt class="py-lineno"> 662</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">&lt;=</tt> <tt class="py-name">wd</tt><tt class="py-op">:</tt> </tt>
<a name="L663"></a><tt class="py-lineno"> 663</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L664"></a><tt class="py-lineno"> 664</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L665"></a><tt class="py-lineno"> 665</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">-</tt> <tt class="py-number">7</tt> </tt>
<a name="L666"></a><tt class="py-lineno"> 666</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L667"></a><tt class="py-lineno"> 667</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">&lt;</tt> <tt class="py-name">wd</tt><tt class="py-op">:</tt> </tt>
<a name="L668"></a><tt class="py-lineno"> 668</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L669"></a><tt class="py-lineno"> 669</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L670"></a><tt class="py-lineno"> 670</tt>  <tt class="py-line">                        <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> <tt class="py-op">-</tt> <tt class="py-number">7</tt> </tt>
<a name="L671"></a><tt class="py-lineno"> 671</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L672"></a><tt class="py-lineno"> 672</tt>  <tt class="py-line">                <tt class="py-comment"># occurance of the DOW in the current week is calculated</tt> </tt>
<a name="L673"></a><tt class="py-lineno"> 673</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">diff</tt> <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt> </tt>
<a name="L674"></a><tt class="py-lineno"> 674</tt>  <tt class="py-line"> </tt>
<a name="L675"></a><tt class="py-lineno"> 675</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt id="link-47" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-47', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L676"></a><tt class="py-lineno"> 676</tt>  <tt class="py-line">            <tt class="py-keyword">print</tt> <tt class="py-string">"wd %s, wkdy %s, offset %d, style %d\n"</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">wkdy</tt><tt class="py-op">,</tt> <tt class="py-name">offset</tt><tt class="py-op">,</tt> <tt class="py-name">style</tt><tt class="py-op">)</tt> </tt>
<a name="L677"></a><tt class="py-lineno"> 677</tt>  <tt class="py-line"> </tt>
<a name="L678"></a><tt class="py-lineno"> 678</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">diff</tt> </tt>
</div><a name="L679"></a><tt class="py-lineno"> 679</tt>  <tt class="py-line"> </tt>
<a name="L680"></a><tt class="py-lineno"> 680</tt>  <tt class="py-line"> </tt>
<a name="Calendar._evalModifier"></a><div id="Calendar._evalModifier-def"><a name="L681"></a><tt class="py-lineno"> 681</tt> <a class="py-toggle" href="#" id="Calendar._evalModifier-toggle" onclick="return toggle('Calendar._evalModifier');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_evalModifier">_evalModifier</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">modifier</tt><tt class="py-op">,</tt> <tt class="py-param">chunk1</tt><tt class="py-op">,</tt> <tt class="py-param">chunk2</tt><tt class="py-op">,</tt> <tt class="py-param">sourceTime</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._evalModifier-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._evalModifier-expanded"><a name="L682"></a><tt class="py-lineno"> 682</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L683"></a><tt class="py-lineno"> 683</tt>  <tt class="py-line"><tt class="py-docstring">        Evaluate the C{modifier} string and following text (passed in</tt> </tt>
<a name="L684"></a><tt class="py-lineno"> 684</tt>  <tt class="py-line"><tt class="py-docstring">        as C{chunk1} and C{chunk2}) and if they match any known modifiers</tt> </tt>
<a name="L685"></a><tt class="py-lineno"> 685</tt>  <tt class="py-line"><tt class="py-docstring">        calculate the delta and apply it to C{sourceTime}.</tt> </tt>
<a name="L686"></a><tt class="py-lineno"> 686</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L687"></a><tt class="py-lineno"> 687</tt>  <tt class="py-line"><tt class="py-docstring">        @type  modifier:   string</tt> </tt>
<a name="L688"></a><tt class="py-lineno"> 688</tt>  <tt class="py-line"><tt class="py-docstring">        @param modifier:   modifier text to apply to sourceTime</tt> </tt>
<a name="L689"></a><tt class="py-lineno"> 689</tt>  <tt class="py-line"><tt class="py-docstring">        @type  chunk1:     string</tt> </tt>
<a name="L690"></a><tt class="py-lineno"> 690</tt>  <tt class="py-line"><tt class="py-docstring">        @param chunk1:     first text chunk that followed modifier (if any)</tt> </tt>
<a name="L691"></a><tt class="py-lineno"> 691</tt>  <tt class="py-line"><tt class="py-docstring">        @type  chunk2:     string</tt> </tt>
<a name="L692"></a><tt class="py-lineno"> 692</tt>  <tt class="py-line"><tt class="py-docstring">        @param chunk2:     second text chunk that followed modifier (if any)</tt> </tt>
<a name="L693"></a><tt class="py-lineno"> 693</tt>  <tt class="py-line"><tt class="py-docstring">        @type  sourceTime: struct_time</tt> </tt>
<a name="L694"></a><tt class="py-lineno"> 694</tt>  <tt class="py-line"><tt class="py-docstring">        @param sourceTime: C{struct_time} value to use as the base</tt> </tt>
<a name="L695"></a><tt class="py-lineno"> 695</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L696"></a><tt class="py-lineno"> 696</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  tuple</tt> </tt>
<a name="L697"></a><tt class="py-lineno"> 697</tt>  <tt class="py-line"><tt class="py-docstring">        @return: tuple of: remaining text and the modified sourceTime</tt> </tt>
<a name="L698"></a><tt class="py-lineno"> 698</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L699"></a><tt class="py-lineno"> 699</tt>  <tt class="py-line">        <tt class="py-name">offset</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">Modifiers</tt><tt class="py-op">[</tt><tt class="py-name">modifier</tt><tt class="py-op">]</tt> </tt>
<a name="L700"></a><tt class="py-lineno"> 700</tt>  <tt class="py-line"> </tt>
<a name="L701"></a><tt class="py-lineno"> 701</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L702"></a><tt class="py-lineno"> 702</tt>  <tt class="py-line">            <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L703"></a><tt class="py-lineno"> 703</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L704"></a><tt class="py-lineno"> 704</tt>  <tt class="py-line">            <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L705"></a><tt class="py-lineno"> 705</tt>  <tt class="py-line"> </tt>
<a name="L706"></a><tt class="py-lineno"> 706</tt>  <tt class="py-line">        <tt class="py-comment"># capture the units after the modifier and the remaining</tt> </tt>
<a name="L707"></a><tt class="py-lineno"> 707</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># string after the unit</tt> </tt>
<a name="L708"></a><tt class="py-lineno"> 708</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_REMAINING</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L709"></a><tt class="py-lineno"> 709</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L710"></a><tt class="py-lineno"> 710</tt>  <tt class="py-line">            <tt class="py-name">index</tt>  <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt> </tt>
<a name="L711"></a><tt class="py-lineno"> 711</tt>  <tt class="py-line">            <tt class="py-name">unit</tt>   <tt class="py-op">=</tt> <tt class="py-name">chunk2</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L712"></a><tt class="py-lineno"> 712</tt>  <tt class="py-line">            <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-name">chunk2</tt><tt class="py-op">[</tt><tt class="py-name">index</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L713"></a><tt class="py-lineno"> 713</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L714"></a><tt class="py-lineno"> 714</tt>  <tt class="py-line">            <tt class="py-name">unit</tt>   <tt class="py-op">=</tt> <tt class="py-name">chunk2</tt> </tt>
<a name="L715"></a><tt class="py-lineno"> 715</tt>  <tt class="py-line">            <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L716"></a><tt class="py-lineno"> 716</tt>  <tt class="py-line"> </tt>
<a name="L717"></a><tt class="py-lineno"> 717</tt>  <tt class="py-line">        <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L718"></a><tt class="py-lineno"> 718</tt>  <tt class="py-line"> </tt>
<a name="L719"></a><tt class="py-lineno"> 719</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'month'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L720"></a><tt class="py-lineno"> 720</tt>  <tt class="py-line">           <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'mth'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L721"></a><tt class="py-lineno"> 721</tt>  <tt class="py-line">           <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'m'</tt><tt class="py-op">:</tt> </tt>
<a name="L722"></a><tt class="py-lineno"> 722</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L723"></a><tt class="py-lineno"> 723</tt>  <tt class="py-line">                <tt class="py-name">dy</tt>         <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-48" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-48', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt> </tt>
<a name="L724"></a><tt class="py-lineno"> 724</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L725"></a><tt class="py-lineno"> 725</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L726"></a><tt class="py-lineno"> 726</tt>  <tt class="py-line">                <tt class="py-comment"># if day is the last day of the month, calculate the last day</tt> </tt>
<a name="L727"></a><tt class="py-lineno"> 727</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-comment"># of the next month</tt> </tt>
<a name="L728"></a><tt class="py-lineno"> 728</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-name">dy</tt> <tt class="py-op">==</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-49" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-49', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L729"></a><tt class="py-lineno"> 729</tt>  <tt class="py-line">                    <tt class="py-name">dy</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-50" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-50', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt> </tt>
<a name="L730"></a><tt class="py-lineno"> 730</tt>  <tt class="py-line"> </tt>
<a name="L731"></a><tt class="py-lineno"> 731</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L732"></a><tt class="py-lineno"> 732</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-51" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.inc" class="py-name" href="#" onclick="return doclink('link-51', 'inc', 'link-14');">inc</a></tt><tt class="py-op">(</tt><tt class="py-name">start</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">=</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L733"></a><tt class="py-lineno"> 733</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L734"></a><tt class="py-lineno"> 734</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L735"></a><tt class="py-lineno"> 735</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L736"></a><tt class="py-lineno"> 736</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-52" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.inc" class="py-name" href="#" onclick="return doclink('link-52', 'inc', 'link-14');">inc</a></tt><tt class="py-op">(</tt><tt class="py-name">start</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">=</tt><tt class="py-name">offset</tt><tt class="py-op">)</tt> </tt>
<a name="L737"></a><tt class="py-lineno"> 737</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L738"></a><tt class="py-lineno"> 738</tt>  <tt class="py-line"> </tt>
<a name="L739"></a><tt class="py-lineno"> 739</tt>  <tt class="py-line">            <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L740"></a><tt class="py-lineno"> 740</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L741"></a><tt class="py-lineno"> 741</tt>  <tt class="py-line"> </tt>
<a name="L742"></a><tt class="py-lineno"> 742</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'week'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L743"></a><tt class="py-lineno"> 743</tt>  <tt class="py-line">             <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'wk'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L744"></a><tt class="py-lineno"> 744</tt>  <tt class="py-line">             <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'w'</tt><tt class="py-op">:</tt> </tt>
<a name="L745"></a><tt class="py-lineno"> 745</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L746"></a><tt class="py-lineno"> 746</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">17</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L747"></a><tt class="py-lineno"> 747</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-op">(</tt><tt class="py-number">4</tt> <tt class="py-op">-</tt> <tt class="py-name">wd</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L748"></a><tt class="py-lineno"> 748</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L749"></a><tt class="py-lineno"> 749</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L750"></a><tt class="py-lineno"> 750</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L751"></a><tt class="py-lineno"> 751</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-number">7</tt><tt class="py-op">)</tt> </tt>
<a name="L752"></a><tt class="py-lineno"> 752</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L753"></a><tt class="py-lineno"> 753</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L754"></a><tt class="py-lineno"> 754</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-53" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar._evalModifier()=parsedatetime.parsedatetime.Calendar-class.html#_evalModifier"><a title="parsedatetime.parsedatetime.Calendar._evalModifier" class="py-name" href="#" onclick="return doclink('link-53', '_evalModifier', 'link-53');">_evalModifier</a></tt><tt class="py-op">(</tt><tt class="py-name">modifier</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-string">"monday "</tt> <tt class="py-op">+</tt> <tt class="py-name">chunk2</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L755"></a><tt class="py-lineno"> 755</tt>  <tt class="py-line"> </tt>
<a name="L756"></a><tt class="py-lineno"> 756</tt>  <tt class="py-line">            <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L757"></a><tt class="py-lineno"> 757</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L758"></a><tt class="py-lineno"> 758</tt>  <tt class="py-line"> </tt>
<a name="L759"></a><tt class="py-lineno"> 759</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'day'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L760"></a><tt class="py-lineno"> 760</tt>  <tt class="py-line">            <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'dy'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L761"></a><tt class="py-lineno"> 761</tt>  <tt class="py-line">            <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'d'</tt><tt class="py-op">:</tt> </tt>
<a name="L762"></a><tt class="py-lineno"> 762</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L763"></a><tt class="py-lineno"> 763</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">17</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L764"></a><tt class="py-lineno"> 764</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L765"></a><tt class="py-lineno"> 765</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L766"></a><tt class="py-lineno"> 766</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">)</tt> </tt>
<a name="L767"></a><tt class="py-lineno"> 767</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-number">1</tt><tt class="py-op">)</tt> </tt>
<a name="L768"></a><tt class="py-lineno"> 768</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L769"></a><tt class="py-lineno"> 769</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L770"></a><tt class="py-lineno"> 770</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L771"></a><tt class="py-lineno"> 771</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">offset</tt><tt class="py-op">)</tt> </tt>
<a name="L772"></a><tt class="py-lineno"> 772</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L773"></a><tt class="py-lineno"> 773</tt>  <tt class="py-line"> </tt>
<a name="L774"></a><tt class="py-lineno"> 774</tt>  <tt class="py-line">            <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L775"></a><tt class="py-lineno"> 775</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L776"></a><tt class="py-lineno"> 776</tt>  <tt class="py-line"> </tt>
<a name="L777"></a><tt class="py-lineno"> 777</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'hour'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L778"></a><tt class="py-lineno"> 778</tt>  <tt class="py-line">           <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'hr'</tt><tt class="py-op">:</tt> </tt>
<a name="L779"></a><tt class="py-lineno"> 779</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L780"></a><tt class="py-lineno"> 780</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L781"></a><tt class="py-lineno"> 781</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L782"></a><tt class="py-lineno"> 782</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L783"></a><tt class="py-lineno"> 783</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">hours</tt><tt class="py-op">=</tt><tt class="py-name">offset</tt><tt class="py-op">)</tt> </tt>
<a name="L784"></a><tt class="py-lineno"> 784</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L785"></a><tt class="py-lineno"> 785</tt>  <tt class="py-line"> </tt>
<a name="L786"></a><tt class="py-lineno"> 786</tt>  <tt class="py-line">            <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L787"></a><tt class="py-lineno"> 787</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L788"></a><tt class="py-lineno"> 788</tt>  <tt class="py-line"> </tt>
<a name="L789"></a><tt class="py-lineno"> 789</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'year'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L790"></a><tt class="py-lineno"> 790</tt>  <tt class="py-line">             <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'yr'</tt> <tt class="py-keyword">or</tt> \ </tt>
<a name="L791"></a><tt class="py-lineno"> 791</tt>  <tt class="py-line">             <tt class="py-name">unit</tt> <tt class="py-op">==</tt> <tt class="py-string">'y'</tt><tt class="py-op">:</tt> </tt>
<a name="L792"></a><tt class="py-lineno"> 792</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L793"></a><tt class="py-lineno"> 793</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-number">12</tt><tt class="py-op">,</tt> <tt class="py-number">31</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L794"></a><tt class="py-lineno"> 794</tt>  <tt class="py-line">            <tt class="py-keyword">elif</tt> <tt class="py-name">offset</tt> <tt class="py-op">==</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L795"></a><tt class="py-lineno"> 795</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt> <tt class="py-op">+</tt> <tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L796"></a><tt class="py-lineno"> 796</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L797"></a><tt class="py-lineno"> 797</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt> <tt class="py-op">+</tt> <tt class="py-name">offset</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-number">1</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L798"></a><tt class="py-lineno"> 798</tt>  <tt class="py-line"> </tt>
<a name="L799"></a><tt class="py-lineno"> 799</tt>  <tt class="py-line">            <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L800"></a><tt class="py-lineno"> 800</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L801"></a><tt class="py-lineno"> 801</tt>  <tt class="py-line"> </tt>
<a name="L802"></a><tt class="py-lineno"> 802</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">flag</tt> <tt class="py-op">==</tt> <tt class="py-name">False</tt><tt class="py-op">:</tt> </tt>
<a name="L803"></a><tt class="py-lineno"> 803</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_WEEKDAY</tt><tt class="py-op">.</tt><tt class="py-name">match</tt><tt class="py-op">(</tt><tt class="py-name">unit</tt><tt class="py-op">)</tt> </tt>
<a name="L804"></a><tt class="py-lineno"> 804</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L805"></a><tt class="py-lineno"> 805</tt>  <tt class="py-line">                <tt class="py-name">wkdy</tt>          <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L806"></a><tt class="py-lineno"> 806</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L807"></a><tt class="py-lineno"> 807</tt>  <tt class="py-line"> </tt>
<a name="L808"></a><tt class="py-lineno"> 808</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">modifier</tt> <tt class="py-op">==</tt> <tt class="py-string">'eod'</tt><tt class="py-op">:</tt> </tt>
<a name="L809"></a><tt class="py-lineno"> 809</tt>  <tt class="py-line">                    <tt class="py-comment"># Calculate the  upcoming weekday</tt> </tt>
<a name="L810"></a><tt class="py-lineno"> 810</tt>  <tt class="py-line"><tt class="py-comment"></tt>                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L811"></a><tt class="py-lineno"> 811</tt>  <tt class="py-line">                    <tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt><tt class="py-op">)</tt>   <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-54" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-54', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">wkdy</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L812"></a><tt class="py-lineno"> 812</tt>  <tt class="py-line">                    <tt class="py-name">sources</tt>           <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-55" class="py-name" targets="Method parsedatetime.parsedatetime_consts.Constants.buildSources()=parsedatetime.parsedatetime_consts.Constants-class.html#buildSources"><a title="parsedatetime.parsedatetime_consts.Constants.buildSources" class="py-name" href="#" onclick="return doclink('link-55', 'buildSources', 'link-55');">buildSources</a></tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L813"></a><tt class="py-lineno"> 813</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt>     <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L814"></a><tt class="py-lineno"> 814</tt>  <tt class="py-line"> </tt>
<a name="L815"></a><tt class="py-lineno"> 815</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">modifier</tt> <tt class="py-keyword">in</tt> <tt class="py-name">sources</tt><tt class="py-op">:</tt> </tt>
<a name="L816"></a><tt class="py-lineno"> 816</tt>  <tt class="py-line">                        <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">sources</tt><tt class="py-op">[</tt><tt class="py-name">modifier</tt><tt class="py-op">]</tt> </tt>
<a name="L817"></a><tt class="py-lineno"> 817</tt>  <tt class="py-line"> </tt>
<a name="L818"></a><tt class="py-lineno"> 818</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L819"></a><tt class="py-lineno"> 819</tt>  <tt class="py-line">                    <tt class="py-name">wkdy</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">WeekdayOffsets</tt><tt class="py-op">[</tt><tt class="py-name">wkdy</tt><tt class="py-op">]</tt> </tt>
<a name="L820"></a><tt class="py-lineno"> 820</tt>  <tt class="py-line">                    <tt class="py-name">diff</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-56" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar._CalculateDOWDelta()=parsedatetime.parsedatetime.Calendar-class.html#_CalculateDOWDelta"><a title="parsedatetime.parsedatetime.Calendar._CalculateDOWDelta" class="py-name" href="#" onclick="return doclink('link-56', '_CalculateDOWDelta', 'link-56');">_CalculateDOWDelta</a></tt><tt class="py-op">(</tt><tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">wkdy</tt><tt class="py-op">,</tt> <tt class="py-name">offset</tt><tt class="py-op">,</tt> </tt>
<a name="L821"></a><tt class="py-lineno"> 821</tt>  <tt class="py-line">                                                         <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">DOWParseStyle</tt><tt class="py-op">,</tt> </tt>
<a name="L822"></a><tt class="py-lineno"> 822</tt>  <tt class="py-line">                                                         <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CurrentDOWParseStyle</tt><tt class="py-op">)</tt> </tt>
<a name="L823"></a><tt class="py-lineno"> 823</tt>  <tt class="py-line">                    <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L824"></a><tt class="py-lineno"> 824</tt>  <tt class="py-line">                    <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">diff</tt><tt class="py-op">)</tt> </tt>
<a name="L825"></a><tt class="py-lineno"> 825</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L826"></a><tt class="py-lineno"> 826</tt>  <tt class="py-line"> </tt>
<a name="L827"></a><tt class="py-lineno"> 827</tt>  <tt class="py-line">                <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L828"></a><tt class="py-lineno"> 828</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L829"></a><tt class="py-lineno"> 829</tt>  <tt class="py-line"> </tt>
<a name="L830"></a><tt class="py-lineno"> 830</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">flag</tt><tt class="py-op">:</tt> </tt>
<a name="L831"></a><tt class="py-lineno"> 831</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIME</tt><tt class="py-op">.</tt><tt class="py-name">match</tt><tt class="py-op">(</tt><tt class="py-name">unit</tt><tt class="py-op">)</tt> </tt>
<a name="L832"></a><tt class="py-lineno"> 832</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L833"></a><tt class="py-lineno"> 833</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L834"></a><tt class="py-lineno"> 834</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-57" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-57', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">unit</tt><tt class="py-op">)</tt> </tt>
<a name="L835"></a><tt class="py-lineno"> 835</tt>  <tt class="py-line"> </tt>
<a name="L836"></a><tt class="py-lineno"> 836</tt>  <tt class="py-line">                <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">)</tt> </tt>
<a name="L837"></a><tt class="py-lineno"> 837</tt>  <tt class="py-line">                <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">offset</tt><tt class="py-op">)</tt> </tt>
<a name="L838"></a><tt class="py-lineno"> 838</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L839"></a><tt class="py-lineno"> 839</tt>  <tt class="py-line">                <tt class="py-name">flag</tt>       <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L840"></a><tt class="py-lineno"> 840</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L841"></a><tt class="py-lineno"> 841</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L842"></a><tt class="py-lineno"> 842</tt>  <tt class="py-line"> </tt>
<a name="L843"></a><tt class="py-lineno"> 843</tt>  <tt class="py-line">                <tt class="py-comment"># check if the remaining text is parsable and if so,</tt> </tt>
<a name="L844"></a><tt class="py-lineno"> 844</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-comment"># use it as the base time for the modifier source time</tt> </tt>
<a name="L845"></a><tt class="py-lineno"> 845</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">t</tt><tt class="py-op">,</tt> <tt class="py-name">flag2</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-58" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-58', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">unit</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L846"></a><tt class="py-lineno"> 846</tt>  <tt class="py-line"> </tt>
<a name="L847"></a><tt class="py-lineno"> 847</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">flag2</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L848"></a><tt class="py-lineno"> 848</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">t</tt> </tt>
<a name="L849"></a><tt class="py-lineno"> 849</tt>  <tt class="py-line"> </tt>
<a name="L850"></a><tt class="py-lineno"> 850</tt>  <tt class="py-line">                <tt class="py-name">sources</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-59" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.buildSources" class="py-name" href="#" onclick="return doclink('link-59', 'buildSources', 'link-55');">buildSources</a></tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L851"></a><tt class="py-lineno"> 851</tt>  <tt class="py-line"> </tt>
<a name="L852"></a><tt class="py-lineno"> 852</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">modifier</tt> <tt class="py-keyword">in</tt> <tt class="py-name">sources</tt><tt class="py-op">:</tt> </tt>
<a name="L853"></a><tt class="py-lineno"> 853</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">sources</tt><tt class="py-op">[</tt><tt class="py-name">modifier</tt><tt class="py-op">]</tt> </tt>
<a name="L854"></a><tt class="py-lineno"> 854</tt>  <tt class="py-line">                    <tt class="py-name">flag</tt>          <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L855"></a><tt class="py-lineno"> 855</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L856"></a><tt class="py-lineno"> 856</tt>  <tt class="py-line"> </tt>
<a name="L857"></a><tt class="py-lineno"> 857</tt>  <tt class="py-line">        <tt class="py-comment"># if the word after next is a number, the string is more than likely</tt> </tt>
<a name="L858"></a><tt class="py-lineno"> 858</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># to be "next 4 hrs" which we will have to combine the units with the</tt> </tt>
<a name="L859"></a><tt class="py-lineno"> 859</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># rest of the string</tt> </tt>
<a name="L860"></a><tt class="py-lineno"> 860</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">flag</tt><tt class="py-op">:</tt> </tt>
<a name="L861"></a><tt class="py-lineno"> 861</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L862"></a><tt class="py-lineno"> 862</tt>  <tt class="py-line">                <tt class="py-comment"># if offset is negative, the unit has to be made negative</tt> </tt>
<a name="L863"></a><tt class="py-lineno"> 863</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">unit</tt> <tt class="py-op">=</tt> <tt class="py-string">'-%s'</tt> <tt class="py-op">%</tt> <tt class="py-name">unit</tt> </tt>
<a name="L864"></a><tt class="py-lineno"> 864</tt>  <tt class="py-line"> </tt>
<a name="L865"></a><tt class="py-lineno"> 865</tt>  <tt class="py-line">            <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">unit</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L866"></a><tt class="py-lineno"> 866</tt>  <tt class="py-line"> </tt>
<a name="L867"></a><tt class="py-lineno"> 867</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L868"></a><tt class="py-lineno"> 868</tt>  <tt class="py-line"> </tt>
<a name="L869"></a><tt class="py-lineno"> 869</tt>  <tt class="py-line">        <tt class="py-comment">#return '%s %s' % (chunk1, chunk2), sourceTime</tt> </tt>
<a name="L870"></a><tt class="py-lineno"> 870</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">return</tt> <tt class="py-string">'%s'</tt> <tt class="py-op">%</tt> <tt class="py-name">chunk2</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt> </tt>
</div><a name="L871"></a><tt class="py-lineno"> 871</tt>  <tt class="py-line"> </tt>
<a name="Calendar._evalModifier2"></a><div id="Calendar._evalModifier2-def"><a name="L872"></a><tt class="py-lineno"> 872</tt> <a class="py-toggle" href="#" id="Calendar._evalModifier2-toggle" onclick="return toggle('Calendar._evalModifier2');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_evalModifier2">_evalModifier2</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">modifier</tt><tt class="py-op">,</tt> <tt class="py-param">chunk1</tt> <tt class="py-op">,</tt> <tt class="py-param">chunk2</tt><tt class="py-op">,</tt> <tt class="py-param">sourceTime</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._evalModifier2-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._evalModifier2-expanded"><a name="L873"></a><tt class="py-lineno"> 873</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L874"></a><tt class="py-lineno"> 874</tt>  <tt class="py-line"><tt class="py-docstring">        Evaluate the C{modifier} string and following text (passed in</tt> </tt>
<a name="L875"></a><tt class="py-lineno"> 875</tt>  <tt class="py-line"><tt class="py-docstring">        as C{chunk1} and C{chunk2}) and if they match any known modifiers</tt> </tt>
<a name="L876"></a><tt class="py-lineno"> 876</tt>  <tt class="py-line"><tt class="py-docstring">        calculate the delta and apply it to C{sourceTime}.</tt> </tt>
<a name="L877"></a><tt class="py-lineno"> 877</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L878"></a><tt class="py-lineno"> 878</tt>  <tt class="py-line"><tt class="py-docstring">        @type  modifier:   string</tt> </tt>
<a name="L879"></a><tt class="py-lineno"> 879</tt>  <tt class="py-line"><tt class="py-docstring">        @param modifier:   modifier text to apply to C{sourceTime}</tt> </tt>
<a name="L880"></a><tt class="py-lineno"> 880</tt>  <tt class="py-line"><tt class="py-docstring">        @type  chunk1:     string</tt> </tt>
<a name="L881"></a><tt class="py-lineno"> 881</tt>  <tt class="py-line"><tt class="py-docstring">        @param chunk1:     first text chunk that followed modifier (if any)</tt> </tt>
<a name="L882"></a><tt class="py-lineno"> 882</tt>  <tt class="py-line"><tt class="py-docstring">        @type  chunk2:     string</tt> </tt>
<a name="L883"></a><tt class="py-lineno"> 883</tt>  <tt class="py-line"><tt class="py-docstring">        @param chunk2:     second text chunk that followed modifier (if any)</tt> </tt>
<a name="L884"></a><tt class="py-lineno"> 884</tt>  <tt class="py-line"><tt class="py-docstring">        @type  sourceTime: struct_time</tt> </tt>
<a name="L885"></a><tt class="py-lineno"> 885</tt>  <tt class="py-line"><tt class="py-docstring">        @param sourceTime: C{struct_time} value to use as the base</tt> </tt>
<a name="L886"></a><tt class="py-lineno"> 886</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L887"></a><tt class="py-lineno"> 887</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  tuple</tt> </tt>
<a name="L888"></a><tt class="py-lineno"> 888</tt>  <tt class="py-line"><tt class="py-docstring">        @return: tuple of: remaining text and the modified sourceTime</tt> </tt>
<a name="L889"></a><tt class="py-lineno"> 889</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L890"></a><tt class="py-lineno"> 890</tt>  <tt class="py-line">        <tt class="py-name">offset</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">Modifiers</tt><tt class="py-op">[</tt><tt class="py-name">modifier</tt><tt class="py-op">]</tt> </tt>
<a name="L891"></a><tt class="py-lineno"> 891</tt>  <tt class="py-line">        <tt class="py-name">digit</tt>  <tt class="py-op">=</tt> <tt class="py-string">r'\d+'</tt> </tt>
<a name="L892"></a><tt class="py-lineno"> 892</tt>  <tt class="py-line"> </tt>
<a name="L893"></a><tt class="py-lineno"> 893</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifier2Flag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L894"></a><tt class="py-lineno"> 894</tt>  <tt class="py-line"> </tt>
<a name="L895"></a><tt class="py-lineno"> 895</tt>  <tt class="py-line">        <tt class="py-comment"># If the string after the negative modifier starts with digits,</tt> </tt>
<a name="L896"></a><tt class="py-lineno"> 896</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># then it is likely that the string is similar to ' before 3 days'</tt> </tt>
<a name="L897"></a><tt class="py-lineno"> 897</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># or 'evening prior to 3 days'.</tt> </tt>
<a name="L898"></a><tt class="py-lineno"> 898</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># In this case, the total time is calculated by subtracting '3 days'</tt> </tt>
<a name="L899"></a><tt class="py-lineno"> 899</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># from the current date.</tt> </tt>
<a name="L900"></a><tt class="py-lineno"> 900</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># So, we have to identify the quantity and negate it before parsing</tt> </tt>
<a name="L901"></a><tt class="py-lineno"> 901</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># the string.</tt> </tt>
<a name="L902"></a><tt class="py-lineno"> 902</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># This is not required for strings not starting with digits since the</tt> </tt>
<a name="L903"></a><tt class="py-lineno"> 903</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># string is enough to calculate the sourceTime</tt> </tt>
<a name="L904"></a><tt class="py-lineno"> 904</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">chunk2</tt> <tt class="py-op">!=</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L905"></a><tt class="py-lineno"> 905</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L906"></a><tt class="py-lineno"> 906</tt>  <tt class="py-line">                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">match</tt><tt class="py-op">(</tt><tt class="py-name">digit</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L907"></a><tt class="py-lineno"> 907</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L908"></a><tt class="py-lineno"> 908</tt>  <tt class="py-line">                    <tt class="py-name">qty</tt>    <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">*</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L909"></a><tt class="py-lineno"> 909</tt>  <tt class="py-line">                    <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-name">chunk2</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L910"></a><tt class="py-lineno"> 910</tt>  <tt class="py-line">                    <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-string">'%d%s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">qty</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L911"></a><tt class="py-lineno"> 911</tt>  <tt class="py-line"> </tt>
<a name="L912"></a><tt class="py-lineno"> 912</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">flag1</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-60" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-60', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">chunk2</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L913"></a><tt class="py-lineno"> 913</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">flag1</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L914"></a><tt class="py-lineno"> 914</tt>  <tt class="py-line">                <tt class="py-name">flag1</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L915"></a><tt class="py-lineno"> 915</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L916"></a><tt class="py-lineno"> 916</tt>  <tt class="py-line">                <tt class="py-name">flag1</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L917"></a><tt class="py-lineno"> 917</tt>  <tt class="py-line">            <tt class="py-name">flag2</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L918"></a><tt class="py-lineno"> 918</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L919"></a><tt class="py-lineno"> 919</tt>  <tt class="py-line">            <tt class="py-name">flag1</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L920"></a><tt class="py-lineno"> 920</tt>  <tt class="py-line"> </tt>
<a name="L921"></a><tt class="py-lineno"> 921</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">chunk1</tt> <tt class="py-op">!=</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L922"></a><tt class="py-lineno"> 922</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">offset</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L923"></a><tt class="py-lineno"> 923</tt>  <tt class="py-line">                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">re</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">digit</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L924"></a><tt class="py-lineno"> 924</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L925"></a><tt class="py-lineno"> 925</tt>  <tt class="py-line">                    <tt class="py-name">qty</tt>    <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> <tt class="py-op">*</tt> <tt class="py-op">-</tt><tt class="py-number">1</tt> </tt>
<a name="L926"></a><tt class="py-lineno"> 926</tt>  <tt class="py-line">                    <tt class="py-name">chunk1</tt> <tt class="py-op">=</tt> <tt class="py-name">chunk1</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L927"></a><tt class="py-lineno"> 927</tt>  <tt class="py-line">                    <tt class="py-name">chunk1</tt> <tt class="py-op">=</tt> <tt class="py-string">'%d%s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">qty</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">)</tt> </tt>
<a name="L928"></a><tt class="py-lineno"> 928</tt>  <tt class="py-line"> </tt>
<a name="L929"></a><tt class="py-lineno"> 929</tt>  <tt class="py-line">            <tt class="py-name">tempDateFlag</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> </tt>
<a name="L930"></a><tt class="py-lineno"> 930</tt>  <tt class="py-line">            <tt class="py-name">tempTimeFlag</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> </tt>
<a name="L931"></a><tt class="py-lineno"> 931</tt>  <tt class="py-line">            <tt class="py-name">sourceTime2</tt><tt class="py-op">,</tt> <tt class="py-name">flag2</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-61" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-61', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L932"></a><tt class="py-lineno"> 932</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L933"></a><tt class="py-lineno"> 933</tt>  <tt class="py-line">            <tt class="py-keyword">return</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-name">flag1</tt> <tt class="py-keyword">and</tt> <tt class="py-name">flag2</tt><tt class="py-op">)</tt> </tt>
<a name="L934"></a><tt class="py-lineno"> 934</tt>  <tt class="py-line"> </tt>
<a name="L935"></a><tt class="py-lineno"> 935</tt>  <tt class="py-line">        <tt class="py-comment"># if chunk1 is not a datetime and chunk2 is then do not use datetime</tt> </tt>
<a name="L936"></a><tt class="py-lineno"> 936</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># value returned by parsing chunk1</tt> </tt>
<a name="L937"></a><tt class="py-lineno"> 937</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-op">(</tt><tt class="py-name">flag1</tt> <tt class="py-op">==</tt> <tt class="py-name">False</tt> <tt class="py-keyword">and</tt> <tt class="py-name">flag2</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L938"></a><tt class="py-lineno"> 938</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime2</tt> </tt>
<a name="L939"></a><tt class="py-lineno"> 939</tt>  <tt class="py-line">        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L940"></a><tt class="py-lineno"> 940</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">tempTimeFlag</tt> </tt>
<a name="L941"></a><tt class="py-lineno"> 941</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">tempDateFlag</tt> </tt>
<a name="L942"></a><tt class="py-lineno"> 942</tt>  <tt class="py-line"> </tt>
<a name="L943"></a><tt class="py-lineno"> 943</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-op">(</tt><tt class="py-name">flag1</tt> <tt class="py-keyword">and</tt> <tt class="py-name">flag2</tt><tt class="py-op">)</tt> </tt>
</div><a name="L944"></a><tt class="py-lineno"> 944</tt>  <tt class="py-line"> </tt>
<a name="L945"></a><tt class="py-lineno"> 945</tt>  <tt class="py-line"> </tt>
<a name="Calendar._evalString"></a><div id="Calendar._evalString-def"><a name="L946"></a><tt class="py-lineno"> 946</tt> <a class="py-toggle" href="#" id="Calendar._evalString-toggle" onclick="return toggle('Calendar._evalString');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#_evalString">_evalString</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">datetimeString</tt><tt class="py-op">,</tt> <tt class="py-param">sourceTime</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar._evalString-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar._evalString-expanded"><a name="L947"></a><tt class="py-lineno"> 947</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L948"></a><tt class="py-lineno"> 948</tt>  <tt class="py-line"><tt class="py-docstring">        Calculate the datetime based on flags set by the L{parse()} routine</tt> </tt>
<a name="L949"></a><tt class="py-lineno"> 949</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L950"></a><tt class="py-lineno"> 950</tt>  <tt class="py-line"><tt class="py-docstring">        Examples handled::</tt> </tt>
<a name="L951"></a><tt class="py-lineno"> 951</tt>  <tt class="py-line"><tt class="py-docstring">            RFC822, W3CDTF formatted dates</tt> </tt>
<a name="L952"></a><tt class="py-lineno"> 952</tt>  <tt class="py-line"><tt class="py-docstring">            HH:MM[:SS][ am/pm]</tt> </tt>
<a name="L953"></a><tt class="py-lineno"> 953</tt>  <tt class="py-line"><tt class="py-docstring">            MM/DD/YYYY</tt> </tt>
<a name="L954"></a><tt class="py-lineno"> 954</tt>  <tt class="py-line"><tt class="py-docstring">            DD MMMM YYYY</tt> </tt>
<a name="L955"></a><tt class="py-lineno"> 955</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L956"></a><tt class="py-lineno"> 956</tt>  <tt class="py-line"><tt class="py-docstring">        @type  datetimeString: string</tt> </tt>
<a name="L957"></a><tt class="py-lineno"> 957</tt>  <tt class="py-line"><tt class="py-docstring">        @param datetimeString: text to try and parse as more "traditional"</tt> </tt>
<a name="L958"></a><tt class="py-lineno"> 958</tt>  <tt class="py-line"><tt class="py-docstring">                               date/time text</tt> </tt>
<a name="L959"></a><tt class="py-lineno"> 959</tt>  <tt class="py-line"><tt class="py-docstring">        @type  sourceTime:     struct_time</tt> </tt>
<a name="L960"></a><tt class="py-lineno"> 960</tt>  <tt class="py-line"><tt class="py-docstring">        @param sourceTime:     C{struct_time} value to use as the base</tt> </tt>
<a name="L961"></a><tt class="py-lineno"> 961</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L962"></a><tt class="py-lineno"> 962</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  datetime</tt> </tt>
<a name="L963"></a><tt class="py-lineno"> 963</tt>  <tt class="py-line"><tt class="py-docstring">        @return: calculated C{struct_time} value or current C{struct_time}</tt> </tt>
<a name="L964"></a><tt class="py-lineno"> 964</tt>  <tt class="py-line"><tt class="py-docstring">                 if not parsed</tt> </tt>
<a name="L965"></a><tt class="py-lineno"> 965</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L966"></a><tt class="py-lineno"> 966</tt>  <tt class="py-line">        <tt class="py-name">s</tt>   <tt class="py-op">=</tt> <tt class="py-name">datetimeString</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L967"></a><tt class="py-lineno"> 967</tt>  <tt class="py-line">        <tt class="py-name">now</tt> <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L968"></a><tt class="py-lineno"> 968</tt>  <tt class="py-line"> </tt>
<a name="L969"></a><tt class="py-lineno"> 969</tt>  <tt class="py-line">        <tt class="py-comment"># Given string date is a RFC822 date</tt> </tt>
<a name="L970"></a><tt class="py-lineno"> 970</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L971"></a><tt class="py-lineno"> 971</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt id="link-62" class="py-name" targets="Function parsedatetime.parsedatetime._parse_date_rfc822()=parsedatetime.parsedatetime-module.html#_parse_date_rfc822"><a title="parsedatetime.parsedatetime._parse_date_rfc822" class="py-name" href="#" onclick="return doclink('link-62', '_parse_date_rfc822', 'link-62');">_parse_date_rfc822</a></tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L972"></a><tt class="py-lineno"> 972</tt>  <tt class="py-line"> </tt>
<a name="L973"></a><tt class="py-lineno"> 973</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L974"></a><tt class="py-lineno"> 974</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">,</tt> <tt class="py-name">_</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L975"></a><tt class="py-lineno"> 975</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L976"></a><tt class="py-lineno"> 976</tt>  <tt class="py-line"> </tt>
<a name="L977"></a><tt class="py-lineno"> 977</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">hr</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">mn</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">sec</tt> <tt class="py-op">!=</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L978"></a><tt class="py-lineno"> 978</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L979"></a><tt class="py-lineno"> 979</tt>  <tt class="py-line"> </tt>
<a name="L980"></a><tt class="py-lineno"> 980</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L981"></a><tt class="py-lineno"> 981</tt>  <tt class="py-line"> </tt>
<a name="L982"></a><tt class="py-lineno"> 982</tt>  <tt class="py-line">        <tt class="py-comment"># Given string date is a W3CDTF date</tt> </tt>
<a name="L983"></a><tt class="py-lineno"> 983</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L984"></a><tt class="py-lineno"> 984</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt id="link-63" class="py-name" targets="Function parsedatetime.parsedatetime._parse_date_w3dtf()=parsedatetime.parsedatetime-module.html#_parse_date_w3dtf"><a title="parsedatetime.parsedatetime._parse_date_w3dtf" class="py-name" href="#" onclick="return doclink('link-63', '_parse_date_w3dtf', 'link-63');">_parse_date_w3dtf</a></tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L985"></a><tt class="py-lineno"> 985</tt>  <tt class="py-line"> </tt>
<a name="L986"></a><tt class="py-lineno"> 986</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L987"></a><tt class="py-lineno"> 987</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L988"></a><tt class="py-lineno"> 988</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L989"></a><tt class="py-lineno"> 989</tt>  <tt class="py-line"> </tt>
<a name="L990"></a><tt class="py-lineno"> 990</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L991"></a><tt class="py-lineno"> 991</tt>  <tt class="py-line">            <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L992"></a><tt class="py-lineno"> 992</tt>  <tt class="py-line"> </tt>
<a name="L993"></a><tt class="py-lineno"> 993</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is in the format HH:MM(:SS)(am/pm)</tt> </tt>
<a name="L994"></a><tt class="py-lineno"> 994</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">meridianFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L995"></a><tt class="py-lineno"> 995</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L996"></a><tt class="py-lineno"> 996</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L997"></a><tt class="py-lineno"> 997</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L998"></a><tt class="py-lineno"> 998</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L999"></a><tt class="py-lineno"> 999</tt>  <tt class="py-line"> </tt>
<a name="L1000"></a><tt class="py-lineno">1000</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMEHMS2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1001"></a><tt class="py-lineno">1001</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1002"></a><tt class="py-lineno">1002</tt>  <tt class="py-line">                <tt class="py-name">dt</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1003"></a><tt class="py-lineno">1003</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">dt</tt><tt class="py-op">)</tt> <tt class="py-op">&lt;=</tt> <tt class="py-number">2</tt><tt class="py-op">:</tt> </tt>
<a name="L1004"></a><tt class="py-lineno">1004</tt>  <tt class="py-line">                    <tt class="py-name">hr</tt>  <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">dt</tt><tt class="py-op">)</tt> </tt>
<a name="L1005"></a><tt class="py-lineno">1005</tt>  <tt class="py-line">                    <tt class="py-name">mn</tt>  <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1006"></a><tt class="py-lineno">1006</tt>  <tt class="py-line">                    <tt class="py-name">sec</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1007"></a><tt class="py-lineno">1007</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1008"></a><tt class="py-lineno">1008</tt>  <tt class="py-line">                    <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt> <tt class="py-op">=</tt> <tt id="link-64" class="py-name"><a title="parsedatetime.parsedatetime._extract_time" class="py-name" href="#" onclick="return doclink('link-64', '_extract_time', 'link-3');">_extract_time</a></tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">)</tt> </tt>
<a name="L1009"></a><tt class="py-lineno">1009</tt>  <tt class="py-line"> </tt>
<a name="L1010"></a><tt class="py-lineno">1010</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">hr</tt> <tt class="py-op">==</tt> <tt class="py-number">24</tt><tt class="py-op">:</tt> </tt>
<a name="L1011"></a><tt class="py-lineno">1011</tt>  <tt class="py-line">                    <tt class="py-name">hr</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1012"></a><tt class="py-lineno">1012</tt>  <tt class="py-line"> </tt>
<a name="L1013"></a><tt class="py-lineno">1013</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L1014"></a><tt class="py-lineno">1014</tt>  <tt class="py-line">                <tt id="link-65" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.meridian
parsedatetime.parsedatetime_consts.pdtLocale_de.meridian
parsedatetime.parsedatetime_consts.pdtLocale_en.meridian
parsedatetime.parsedatetime_consts.pdtLocale_es.meridian" class="py-name" href="#" onclick="return doclink('link-65', 'meridian', 'link-36');">meridian</a></tt>   <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1015"></a><tt class="py-lineno">1015</tt>  <tt class="py-line"> </tt>
<a name="L1016"></a><tt class="py-lineno">1016</tt>  <tt class="py-line">                  <tt class="py-comment"># if 'am' found and hour is 12 - force hour to 0 (midnight)</tt> </tt>
<a name="L1017"></a><tt class="py-lineno">1017</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt id="link-66" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.meridian
parsedatetime.parsedatetime_consts.pdtLocale_de.meridian
parsedatetime.parsedatetime_consts.pdtLocale_en.meridian
parsedatetime.parsedatetime_consts.pdtLocale_es.meridian" class="py-name" href="#" onclick="return doclink('link-66', 'meridian', 'link-36');">meridian</a></tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">am</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-name">hr</tt> <tt class="py-op">==</tt> <tt class="py-number">12</tt><tt class="py-op">:</tt> </tt>
<a name="L1018"></a><tt class="py-lineno">1018</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L1019"></a><tt class="py-lineno">1019</tt>  <tt class="py-line"> </tt>
<a name="L1020"></a><tt class="py-lineno">1020</tt>  <tt class="py-line">                  <tt class="py-comment"># if 'pm' found and hour &lt; 12, add 12 to shift to evening</tt> </tt>
<a name="L1021"></a><tt class="py-lineno">1021</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt id="link-67" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.meridian
parsedatetime.parsedatetime_consts.pdtLocale_de.meridian
parsedatetime.parsedatetime_consts.pdtLocale_en.meridian
parsedatetime.parsedatetime_consts.pdtLocale_es.meridian" class="py-name" href="#" onclick="return doclink('link-67', 'meridian', 'link-36');">meridian</a></tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">pm</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-name">hr</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">12</tt><tt class="py-op">:</tt> </tt>
<a name="L1022"></a><tt class="py-lineno">1022</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt> <tt class="py-op">+</tt> <tt class="py-number">12</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L1023"></a><tt class="py-lineno">1023</tt>  <tt class="py-line"> </tt>
<a name="L1024"></a><tt class="py-lineno">1024</tt>  <tt class="py-line">              <tt class="py-comment"># invalid time</tt> </tt>
<a name="L1025"></a><tt class="py-lineno">1025</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">hr</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">24</tt> <tt class="py-keyword">or</tt> <tt class="py-name">mn</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">59</tt> <tt class="py-keyword">or</tt> <tt class="py-name">sec</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">59</tt><tt class="py-op">:</tt> </tt>
<a name="L1026"></a><tt class="py-lineno">1026</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1027"></a><tt class="py-lineno">1027</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1028"></a><tt class="py-lineno">1028</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1029"></a><tt class="py-lineno">1029</tt>  <tt class="py-line"> </tt>
<a name="L1030"></a><tt class="py-lineno">1030</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">meridianFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1031"></a><tt class="py-lineno">1031</tt>  <tt class="py-line"> </tt>
<a name="L1032"></a><tt class="py-lineno">1032</tt>  <tt class="py-line">          <tt class="py-comment"># Given string is in the format HH:MM(:SS)</tt> </tt>
<a name="L1033"></a><tt class="py-lineno">1033</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStdFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1034"></a><tt class="py-lineno">1034</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1035"></a><tt class="py-lineno">1035</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1036"></a><tt class="py-lineno">1036</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1037"></a><tt class="py-lineno">1037</tt>  <tt class="py-line">                <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L1038"></a><tt class="py-lineno">1038</tt>  <tt class="py-line"> </tt>
<a name="L1039"></a><tt class="py-lineno">1039</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMEHMS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1040"></a><tt class="py-lineno">1040</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1041"></a><tt class="py-lineno">1041</tt>  <tt class="py-line">                <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt> <tt class="py-op">=</tt> <tt id="link-68" class="py-name"><a title="parsedatetime.parsedatetime._extract_time" class="py-name" href="#" onclick="return doclink('link-68', '_extract_time', 'link-3');">_extract_time</a></tt><tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">)</tt> </tt>
<a name="L1042"></a><tt class="py-lineno">1042</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">hr</tt> <tt class="py-op">==</tt> <tt class="py-number">24</tt><tt class="py-op">:</tt> </tt>
<a name="L1043"></a><tt class="py-lineno">1043</tt>  <tt class="py-line">                <tt class="py-name">hr</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1044"></a><tt class="py-lineno">1044</tt>  <tt class="py-line"> </tt>
<a name="L1045"></a><tt class="py-lineno">1045</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">hr</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">24</tt> <tt class="py-keyword">or</tt> <tt class="py-name">mn</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">59</tt> <tt class="py-keyword">or</tt> <tt class="py-name">sec</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">59</tt><tt class="py-op">:</tt> </tt>
<a name="L1046"></a><tt class="py-lineno">1046</tt>  <tt class="py-line">                <tt class="py-comment"># invalid time</tt> </tt>
<a name="L1047"></a><tt class="py-lineno">1047</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1048"></a><tt class="py-lineno">1048</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1049"></a><tt class="py-lineno">1049</tt>  <tt class="py-line">                <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1050"></a><tt class="py-lineno">1050</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1051"></a><tt class="py-lineno">1051</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> </tt>
<a name="L1052"></a><tt class="py-lineno">1052</tt>  <tt class="py-line"> </tt>
<a name="L1053"></a><tt class="py-lineno">1053</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStdFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1054"></a><tt class="py-lineno">1054</tt>  <tt class="py-line"> </tt>
<a name="L1055"></a><tt class="py-lineno">1055</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is in the format 07/21/2006</tt> </tt>
<a name="L1056"></a><tt class="py-lineno">1056</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStdFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1057"></a><tt class="py-lineno">1057</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-69" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar.parseDate()=parsedatetime.parsedatetime.Calendar-class.html#parseDate"><a title="parsedatetime.parsedatetime.Calendar.parseDate" class="py-name" href="#" onclick="return doclink('link-69', 'parseDate', 'link-69');">parseDate</a></tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1058"></a><tt class="py-lineno">1058</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStdFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1059"></a><tt class="py-lineno">1059</tt>  <tt class="py-line"> </tt>
<a name="L1060"></a><tt class="py-lineno">1060</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is in the format  "May 23rd, 2005"</tt> </tt>
<a name="L1061"></a><tt class="py-lineno">1061</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStrFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1062"></a><tt class="py-lineno">1062</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-70" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar.parseDateText()=parsedatetime.parsedatetime.Calendar-class.html#parseDateText"><a title="parsedatetime.parsedatetime.Calendar.parseDateText" class="py-name" href="#" onclick="return doclink('link-70', 'parseDateText', 'link-70');">parseDateText</a></tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1063"></a><tt class="py-lineno">1063</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1064"></a><tt class="py-lineno">1064</tt>  <tt class="py-line"> </tt>
<a name="L1065"></a><tt class="py-lineno">1065</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is a weekday</tt> </tt>
<a name="L1066"></a><tt class="py-lineno">1066</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">weekdyFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1067"></a><tt class="py-lineno">1067</tt>  <tt class="py-line">            <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1068"></a><tt class="py-lineno">1068</tt>  <tt class="py-line"> </tt>
<a name="L1069"></a><tt class="py-lineno">1069</tt>  <tt class="py-line">            <tt class="py-name">start</tt> <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">)</tt> </tt>
<a name="L1070"></a><tt class="py-lineno">1070</tt>  <tt class="py-line">            <tt class="py-name">wkdy</tt>  <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">WeekdayOffsets</tt><tt class="py-op">[</tt><tt class="py-name">s</tt><tt class="py-op">]</tt> </tt>
<a name="L1071"></a><tt class="py-lineno">1071</tt>  <tt class="py-line"> </tt>
<a name="L1072"></a><tt class="py-lineno">1072</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">wkdy</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">wd</tt><tt class="py-op">:</tt> </tt>
<a name="L1073"></a><tt class="py-lineno">1073</tt>  <tt class="py-line">                <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-71" class="py-name"><a title="parsedatetime.parsedatetime.Calendar._CalculateDOWDelta" class="py-name" href="#" onclick="return doclink('link-71', '_CalculateDOWDelta', 'link-56');">_CalculateDOWDelta</a></tt><tt class="py-op">(</tt><tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">wkdy</tt><tt class="py-op">,</tt> <tt class="py-number">2</tt><tt class="py-op">,</tt> </tt>
<a name="L1074"></a><tt class="py-lineno">1074</tt>  <tt class="py-line">                                              <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">DOWParseStyle</tt><tt class="py-op">,</tt> </tt>
<a name="L1075"></a><tt class="py-lineno">1075</tt>  <tt class="py-line">                                              <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CurrentDOWParseStyle</tt><tt class="py-op">)</tt> </tt>
<a name="L1076"></a><tt class="py-lineno">1076</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1077"></a><tt class="py-lineno">1077</tt>  <tt class="py-line">                <tt class="py-name">qty</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-72" class="py-name"><a title="parsedatetime.parsedatetime.Calendar._CalculateDOWDelta" class="py-name" href="#" onclick="return doclink('link-72', '_CalculateDOWDelta', 'link-56');">_CalculateDOWDelta</a></tt><tt class="py-op">(</tt><tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">wkdy</tt><tt class="py-op">,</tt> <tt class="py-number">2</tt><tt class="py-op">,</tt> </tt>
<a name="L1078"></a><tt class="py-lineno">1078</tt>  <tt class="py-line">                                              <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">DOWParseStyle</tt><tt class="py-op">,</tt> </tt>
<a name="L1079"></a><tt class="py-lineno">1079</tt>  <tt class="py-line">                                              <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CurrentDOWParseStyle</tt><tt class="py-op">)</tt> </tt>
<a name="L1080"></a><tt class="py-lineno">1080</tt>  <tt class="py-line"> </tt>
<a name="L1081"></a><tt class="py-lineno">1081</tt>  <tt class="py-line">            <tt class="py-name">target</tt> <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">qty</tt><tt class="py-op">)</tt> </tt>
<a name="L1082"></a><tt class="py-lineno">1082</tt>  <tt class="py-line">            <tt class="py-name">wd</tt>     <tt class="py-op">=</tt> <tt class="py-name">wkdy</tt> </tt>
<a name="L1083"></a><tt class="py-lineno">1083</tt>  <tt class="py-line"> </tt>
<a name="L1084"></a><tt class="py-lineno">1084</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>      <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1085"></a><tt class="py-lineno">1085</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">weekdyFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1086"></a><tt class="py-lineno">1086</tt>  <tt class="py-line"> </tt>
<a name="L1087"></a><tt class="py-lineno">1087</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is a natural language time string like</tt> </tt>
<a name="L1088"></a><tt class="py-lineno">1088</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-comment"># lunch, midnight, etc</tt> </tt>
<a name="L1089"></a><tt class="py-lineno">1089</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStrFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1090"></a><tt class="py-lineno">1090</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">s</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">re_values</tt><tt class="py-op">[</tt><tt class="py-string">'now'</tt><tt class="py-op">]</tt><tt class="py-op">:</tt> </tt>
<a name="L1091"></a><tt class="py-lineno">1091</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1092"></a><tt class="py-lineno">1092</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1093"></a><tt class="py-lineno">1093</tt>  <tt class="py-line">                <tt class="py-name">sources</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-73" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.buildSources" class="py-name" href="#" onclick="return doclink('link-73', 'buildSources', 'link-55');">buildSources</a></tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">)</tt> </tt>
<a name="L1094"></a><tt class="py-lineno">1094</tt>  <tt class="py-line"> </tt>
<a name="L1095"></a><tt class="py-lineno">1095</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">s</tt> <tt class="py-keyword">in</tt> <tt class="py-name">sources</tt><tt class="py-op">:</tt> </tt>
<a name="L1096"></a><tt class="py-lineno">1096</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">sources</tt><tt class="py-op">[</tt><tt class="py-name">s</tt><tt class="py-op">]</tt> </tt>
<a name="L1097"></a><tt class="py-lineno">1097</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1098"></a><tt class="py-lineno">1098</tt>  <tt class="py-line">                    <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1099"></a><tt class="py-lineno">1099</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1100"></a><tt class="py-lineno">1100</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1101"></a><tt class="py-lineno">1101</tt>  <tt class="py-line"> </tt>
<a name="L1102"></a><tt class="py-lineno">1102</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1103"></a><tt class="py-lineno">1103</tt>  <tt class="py-line"> </tt>
<a name="L1104"></a><tt class="py-lineno">1104</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is a natural language date string like today, tomorrow..</tt> </tt>
<a name="L1105"></a><tt class="py-lineno">1105</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dayStrFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1106"></a><tt class="py-lineno">1106</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1107"></a><tt class="py-lineno">1107</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1108"></a><tt class="py-lineno">1108</tt>  <tt class="py-line"> </tt>
<a name="L1109"></a><tt class="py-lineno">1109</tt>  <tt class="py-line">            <tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-name">hr</tt><tt class="py-op">,</tt> <tt class="py-name">mn</tt><tt class="py-op">,</tt> <tt class="py-name">sec</tt><tt class="py-op">,</tt> <tt class="py-name">wd</tt><tt class="py-op">,</tt> <tt class="py-name">yd</tt><tt class="py-op">,</tt> <tt class="py-name">isdst</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L1110"></a><tt class="py-lineno">1110</tt>  <tt class="py-line"> </tt>
<a name="L1111"></a><tt class="py-lineno">1111</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">s</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">dayOffsets</tt><tt class="py-op">:</tt> </tt>
<a name="L1112"></a><tt class="py-lineno">1112</tt>  <tt class="py-line">                <tt class="py-name">offset</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">dayOffsets</tt><tt class="py-op">[</tt><tt class="py-name">s</tt><tt class="py-op">]</tt> </tt>
<a name="L1113"></a><tt class="py-lineno">1113</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1114"></a><tt class="py-lineno">1114</tt>  <tt class="py-line">                <tt class="py-name">offset</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1115"></a><tt class="py-lineno">1115</tt>  <tt class="py-line"> </tt>
<a name="L1116"></a><tt class="py-lineno">1116</tt>  <tt class="py-line">            <tt class="py-name">start</tt>      <tt class="py-op">=</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">(</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">dy</tt><tt class="py-op">,</tt> <tt class="py-number">9</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L1117"></a><tt class="py-lineno">1117</tt>  <tt class="py-line">            <tt class="py-name">target</tt>     <tt class="py-op">=</tt> <tt class="py-name">start</tt> <tt class="py-op">+</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">timedelta</tt><tt class="py-op">(</tt><tt class="py-name">days</tt><tt class="py-op">=</tt><tt class="py-name">offset</tt><tt class="py-op">)</tt> </tt>
<a name="L1118"></a><tt class="py-lineno">1118</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">target</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1119"></a><tt class="py-lineno">1119</tt>  <tt class="py-line"> </tt>
<a name="L1120"></a><tt class="py-lineno">1120</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dayStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1121"></a><tt class="py-lineno">1121</tt>  <tt class="py-line"> </tt>
<a name="L1122"></a><tt class="py-lineno">1122</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is a time string with units like "5 hrs 30 min"</tt> </tt>
<a name="L1123"></a><tt class="py-lineno">1123</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">unitsFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1124"></a><tt class="py-lineno">1124</tt>  <tt class="py-line">            <tt class="py-name">modifier</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt>  <tt class="py-comment"># TODO</tt> </tt>
<a name="L1125"></a><tt class="py-lineno">1125</tt>  <tt class="py-line"> </tt>
<a name="L1126"></a><tt class="py-lineno">1126</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1127"></a><tt class="py-lineno">1127</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1128"></a><tt class="py-lineno">1128</tt>  <tt class="py-line"> </tt>
<a name="L1129"></a><tt class="py-lineno">1129</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_UNITS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1130"></a><tt class="py-lineno">1130</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1131"></a><tt class="py-lineno">1131</tt>  <tt class="py-line">                <tt id="link-74" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-74', 'units', 'link-9');">units</a></tt>    <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'units'</tt><tt class="py-op">)</tt> </tt>
<a name="L1132"></a><tt class="py-lineno">1132</tt>  <tt class="py-line">                <tt class="py-name">quantity</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'units'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1133"></a><tt class="py-lineno">1133</tt>  <tt class="py-line"> </tt>
<a name="L1134"></a><tt class="py-lineno">1134</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>     <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-75" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar._buildTime()=parsedatetime.parsedatetime.Calendar-class.html#_buildTime"><a title="parsedatetime.parsedatetime.Calendar._buildTime" class="py-name" href="#" onclick="return doclink('link-75', '_buildTime', 'link-75');">_buildTime</a></tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">quantity</tt><tt class="py-op">,</tt> <tt class="py-name">modifier</tt><tt class="py-op">,</tt> <tt id="link-76" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-76', 'units', 'link-9');">units</a></tt><tt class="py-op">)</tt> </tt>
<a name="L1135"></a><tt class="py-lineno">1135</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">unitsFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1136"></a><tt class="py-lineno">1136</tt>  <tt class="py-line"> </tt>
<a name="L1137"></a><tt class="py-lineno">1137</tt>  <tt class="py-line">        <tt class="py-comment"># Given string is a time string with single char units like "5 h 30 m"</tt> </tt>
<a name="L1138"></a><tt class="py-lineno">1138</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">qunitsFlag</tt><tt class="py-op">:</tt> </tt>
<a name="L1139"></a><tt class="py-lineno">1139</tt>  <tt class="py-line">            <tt class="py-name">modifier</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt>  <tt class="py-comment"># TODO</tt> </tt>
<a name="L1140"></a><tt class="py-lineno">1140</tt>  <tt class="py-line"> </tt>
<a name="L1141"></a><tt class="py-lineno">1141</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1142"></a><tt class="py-lineno">1142</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1143"></a><tt class="py-lineno">1143</tt>  <tt class="py-line"> </tt>
<a name="L1144"></a><tt class="py-lineno">1144</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_QUNITS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1145"></a><tt class="py-lineno">1145</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1146"></a><tt class="py-lineno">1146</tt>  <tt class="py-line">                <tt id="link-77" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-77', 'units', 'link-9');">units</a></tt>    <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'qunits'</tt><tt class="py-op">)</tt> </tt>
<a name="L1147"></a><tt class="py-lineno">1147</tt>  <tt class="py-line">                <tt class="py-name">quantity</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'qunits'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1148"></a><tt class="py-lineno">1148</tt>  <tt class="py-line"> </tt>
<a name="L1149"></a><tt class="py-lineno">1149</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>      <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-78" class="py-name"><a title="parsedatetime.parsedatetime.Calendar._buildTime" class="py-name" href="#" onclick="return doclink('link-78', '_buildTime', 'link-75');">_buildTime</a></tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">quantity</tt><tt class="py-op">,</tt> <tt class="py-name">modifier</tt><tt class="py-op">,</tt> <tt id="link-79" class="py-name"><a title="parsedatetime.parsedatetime_consts.pdtLocale_au.units
parsedatetime.parsedatetime_consts.pdtLocale_de.units
parsedatetime.parsedatetime_consts.pdtLocale_en.units
parsedatetime.parsedatetime_consts.pdtLocale_es.units" class="py-name" href="#" onclick="return doclink('link-79', 'units', 'link-9');">units</a></tt><tt class="py-op">)</tt> </tt>
<a name="L1150"></a><tt class="py-lineno">1150</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">qunitsFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1151"></a><tt class="py-lineno">1151</tt>  <tt class="py-line"> </tt>
<a name="L1152"></a><tt class="py-lineno">1152</tt>  <tt class="py-line">          <tt class="py-comment"># Given string does not match anything</tt> </tt>
<a name="L1153"></a><tt class="py-lineno">1153</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1154"></a><tt class="py-lineno">1154</tt>  <tt class="py-line">            <tt class="py-name">sourceTime</tt>    <tt class="py-op">=</tt> <tt class="py-name">now</tt> </tt>
<a name="L1155"></a><tt class="py-lineno">1155</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1156"></a><tt class="py-lineno">1156</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1157"></a><tt class="py-lineno">1157</tt>  <tt class="py-line"> </tt>
<a name="L1158"></a><tt class="py-lineno">1158</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">sourceTime</tt> </tt>
</div><a name="L1159"></a><tt class="py-lineno">1159</tt>  <tt class="py-line"> </tt>
<a name="L1160"></a><tt class="py-lineno">1160</tt>  <tt class="py-line"> </tt>
<a name="Calendar.parse"></a><div id="Calendar.parse-def"><a name="L1161"></a><tt class="py-lineno">1161</tt> <a class="py-toggle" href="#" id="Calendar.parse-toggle" onclick="return toggle('Calendar.parse');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#parse">parse</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">datetimeString</tt><tt class="py-op">,</tt> <tt class="py-param">sourceTime</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.parse-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.parse-expanded"><a name="L1162"></a><tt class="py-lineno">1162</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L1163"></a><tt class="py-lineno">1163</tt>  <tt class="py-line"><tt class="py-docstring">        Splits the given C{datetimeString} into tokens, finds the regex</tt> </tt>
<a name="L1164"></a><tt class="py-lineno">1164</tt>  <tt class="py-line"><tt class="py-docstring">        patterns that match and then calculates a C{struct_time} value from</tt> </tt>
<a name="L1165"></a><tt class="py-lineno">1165</tt>  <tt class="py-line"><tt class="py-docstring">        the chunks.</tt> </tt>
<a name="L1166"></a><tt class="py-lineno">1166</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1167"></a><tt class="py-lineno">1167</tt>  <tt class="py-line"><tt class="py-docstring">        If C{sourceTime} is given then the C{struct_time} value will be</tt> </tt>
<a name="L1168"></a><tt class="py-lineno">1168</tt>  <tt class="py-line"><tt class="py-docstring">        calculated from that value, otherwise from the current date/time.</tt> </tt>
<a name="L1169"></a><tt class="py-lineno">1169</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1170"></a><tt class="py-lineno">1170</tt>  <tt class="py-line"><tt class="py-docstring">        If the C{datetimeString} is parsed and date/time value found then</tt> </tt>
<a name="L1171"></a><tt class="py-lineno">1171</tt>  <tt class="py-line"><tt class="py-docstring">        the second item of the returned tuple will be a flag to let you know</tt> </tt>
<a name="L1172"></a><tt class="py-lineno">1172</tt>  <tt class="py-line"><tt class="py-docstring">        what kind of C{struct_time} value is being returned::</tt> </tt>
<a name="L1173"></a><tt class="py-lineno">1173</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1174"></a><tt class="py-lineno">1174</tt>  <tt class="py-line"><tt class="py-docstring">            0 = not parsed at all</tt> </tt>
<a name="L1175"></a><tt class="py-lineno">1175</tt>  <tt class="py-line"><tt class="py-docstring">            1 = parsed as a C{date}</tt> </tt>
<a name="L1176"></a><tt class="py-lineno">1176</tt>  <tt class="py-line"><tt class="py-docstring">            2 = parsed as a C{time}</tt> </tt>
<a name="L1177"></a><tt class="py-lineno">1177</tt>  <tt class="py-line"><tt class="py-docstring">            3 = parsed as a C{datetime}</tt> </tt>
<a name="L1178"></a><tt class="py-lineno">1178</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1179"></a><tt class="py-lineno">1179</tt>  <tt class="py-line"><tt class="py-docstring">        @type  datetimeString: string</tt> </tt>
<a name="L1180"></a><tt class="py-lineno">1180</tt>  <tt class="py-line"><tt class="py-docstring">        @param datetimeString: date/time text to evaluate</tt> </tt>
<a name="L1181"></a><tt class="py-lineno">1181</tt>  <tt class="py-line"><tt class="py-docstring">        @type  sourceTime:     struct_time</tt> </tt>
<a name="L1182"></a><tt class="py-lineno">1182</tt>  <tt class="py-line"><tt class="py-docstring">        @param sourceTime:     C{struct_time} value to use as the base</tt> </tt>
<a name="L1183"></a><tt class="py-lineno">1183</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1184"></a><tt class="py-lineno">1184</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  tuple</tt> </tt>
<a name="L1185"></a><tt class="py-lineno">1185</tt>  <tt class="py-line"><tt class="py-docstring">        @return: tuple of: modified C{sourceTime} and the result flag</tt> </tt>
<a name="L1186"></a><tt class="py-lineno">1186</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L1187"></a><tt class="py-lineno">1187</tt>  <tt class="py-line"> </tt>
<a name="L1188"></a><tt class="py-lineno">1188</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">:</tt> </tt>
<a name="L1189"></a><tt class="py-lineno">1189</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">isinstance</tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">datetime</tt><tt class="py-op">.</tt><tt class="py-name">datetime</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1190"></a><tt class="py-lineno">1190</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt id="link-80" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-80', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L1191"></a><tt class="py-lineno">1191</tt>  <tt class="py-line">                    <tt class="py-keyword">print</tt> <tt class="py-string">'coercing datetime to timetuple'</tt> </tt>
<a name="L1192"></a><tt class="py-lineno">1192</tt>  <tt class="py-line">                <tt class="py-name">sourceTime</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">.</tt><tt class="py-name">timetuple</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1193"></a><tt class="py-lineno">1193</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1194"></a><tt class="py-lineno">1194</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">isinstance</tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">struct_time</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> \ </tt>
<a name="L1195"></a><tt class="py-lineno">1195</tt>  <tt class="py-line">                   <tt class="py-keyword">not</tt> <tt class="py-name">isinstance</tt><tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">tuple</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1196"></a><tt class="py-lineno">1196</tt>  <tt class="py-line">                    <tt class="py-keyword">raise</tt> <tt class="py-name">Exception</tt><tt class="py-op">(</tt><tt class="py-string">'sourceTime is not a struct_time'</tt><tt class="py-op">)</tt> </tt>
<a name="L1197"></a><tt class="py-lineno">1197</tt>  <tt class="py-line"> </tt>
<a name="L1198"></a><tt class="py-lineno">1198</tt>  <tt class="py-line">        <tt class="py-name">s</tt>         <tt class="py-op">=</tt> <tt class="py-name">datetimeString</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">.</tt><tt class="py-name">lower</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1199"></a><tt class="py-lineno">1199</tt>  <tt class="py-line">        <tt class="py-name">parseStr</tt>  <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L1200"></a><tt class="py-lineno">1200</tt>  <tt class="py-line">        <tt class="py-name">totalTime</tt> <tt class="py-op">=</tt> <tt class="py-name">sourceTime</tt> </tt>
<a name="L1201"></a><tt class="py-lineno">1201</tt>  <tt class="py-line"> </tt>
<a name="L1202"></a><tt class="py-lineno">1202</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">s</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt> <tt class="py-op">:</tt> </tt>
<a name="L1203"></a><tt class="py-lineno">1203</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">sourceTime</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1204"></a><tt class="py-lineno">1204</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">sourceTime</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt><tt class="py-op">)</tt> </tt>
<a name="L1205"></a><tt class="py-lineno">1205</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1206"></a><tt class="py-lineno">1206</tt>  <tt class="py-line">                <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> <tt class="py-number">0</tt><tt class="py-op">)</tt> </tt>
<a name="L1207"></a><tt class="py-lineno">1207</tt>  <tt class="py-line"> </tt>
<a name="L1208"></a><tt class="py-lineno">1208</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1209"></a><tt class="py-lineno">1209</tt>  <tt class="py-line">        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1210"></a><tt class="py-lineno">1210</tt>  <tt class="py-line"> </tt>
<a name="L1211"></a><tt class="py-lineno">1211</tt>  <tt class="py-line">        <tt class="py-keyword">while</tt> <tt class="py-name">len</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L1212"></a><tt class="py-lineno">1212</tt>  <tt class="py-line">            <tt class="py-name">flag</tt>   <tt class="py-op">=</tt> <tt class="py-name">False</tt> </tt>
<a name="L1213"></a><tt class="py-lineno">1213</tt>  <tt class="py-line">            <tt class="py-name">chunk1</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L1214"></a><tt class="py-lineno">1214</tt>  <tt class="py-line">            <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L1215"></a><tt class="py-lineno">1215</tt>  <tt class="py-line"> </tt>
<a name="L1216"></a><tt class="py-lineno">1216</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt id="link-81" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-81', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L1217"></a><tt class="py-lineno">1217</tt>  <tt class="py-line">                <tt class="py-keyword">print</tt> <tt class="py-string">'parse (top of loop): [%s][%s]'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">)</tt> </tt>
<a name="L1218"></a><tt class="py-lineno">1218</tt>  <tt class="py-line"> </tt>
<a name="L1219"></a><tt class="py-lineno">1219</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1220"></a><tt class="py-lineno">1220</tt>  <tt class="py-line">                <tt class="py-comment"># Modifier like next\prev..</tt> </tt>
<a name="L1221"></a><tt class="py-lineno">1221</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_MODIFIER</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1222"></a><tt class="py-lineno">1222</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1223"></a><tt class="py-lineno">1223</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1224"></a><tt class="py-lineno">1224</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1225"></a><tt class="py-lineno">1225</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1226"></a><tt class="py-lineno">1226</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt> </tt>
<a name="L1227"></a><tt class="py-lineno">1227</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1228"></a><tt class="py-lineno">1228</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1229"></a><tt class="py-lineno">1229</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1230"></a><tt class="py-lineno">1230</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1231"></a><tt class="py-lineno">1231</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1232"></a><tt class="py-lineno">1232</tt>  <tt class="py-line"> </tt>
<a name="L1233"></a><tt class="py-lineno">1233</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1234"></a><tt class="py-lineno">1234</tt>  <tt class="py-line">                <tt class="py-comment"># Modifier like from\after\prior..</tt> </tt>
<a name="L1235"></a><tt class="py-lineno">1235</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_MODIFIER2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1236"></a><tt class="py-lineno">1236</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1237"></a><tt class="py-lineno">1237</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifier2Flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1238"></a><tt class="py-lineno">1238</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1239"></a><tt class="py-lineno">1239</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1240"></a><tt class="py-lineno">1240</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt> </tt>
<a name="L1241"></a><tt class="py-lineno">1241</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1242"></a><tt class="py-lineno">1242</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'modifier'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1243"></a><tt class="py-lineno">1243</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1244"></a><tt class="py-lineno">1244</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1245"></a><tt class="py-lineno">1245</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1246"></a><tt class="py-lineno">1246</tt>  <tt class="py-line"> </tt>
<a name="L1247"></a><tt class="py-lineno">1247</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1248"></a><tt class="py-lineno">1248</tt>  <tt class="py-line">                <tt class="py-comment"># String date format</tt> </tt>
<a name="L1249"></a><tt class="py-lineno">1249</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE3</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1250"></a><tt class="py-lineno">1250</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1251"></a><tt class="py-lineno">1251</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1252"></a><tt class="py-lineno">1252</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt>    <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L1253"></a><tt class="py-lineno">1253</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1254"></a><tt class="py-lineno">1254</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1255"></a><tt class="py-lineno">1255</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt> </tt>
<a name="L1256"></a><tt class="py-lineno">1256</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1257"></a><tt class="py-lineno">1257</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1258"></a><tt class="py-lineno">1258</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1259"></a><tt class="py-lineno">1259</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1260"></a><tt class="py-lineno">1260</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1261"></a><tt class="py-lineno">1261</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1262"></a><tt class="py-lineno">1262</tt>  <tt class="py-line"> </tt>
<a name="L1263"></a><tt class="py-lineno">1263</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1264"></a><tt class="py-lineno">1264</tt>  <tt class="py-line">                <tt class="py-comment"># Standard date format</tt> </tt>
<a name="L1265"></a><tt class="py-lineno">1265</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DATE</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1266"></a><tt class="py-lineno">1266</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1267"></a><tt class="py-lineno">1267</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStdFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1268"></a><tt class="py-lineno">1268</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt>    <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L1269"></a><tt class="py-lineno">1269</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1270"></a><tt class="py-lineno">1270</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1271"></a><tt class="py-lineno">1271</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt> </tt>
<a name="L1272"></a><tt class="py-lineno">1272</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1273"></a><tt class="py-lineno">1273</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'date'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1274"></a><tt class="py-lineno">1274</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1275"></a><tt class="py-lineno">1275</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1276"></a><tt class="py-lineno">1276</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1277"></a><tt class="py-lineno">1277</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1278"></a><tt class="py-lineno">1278</tt>  <tt class="py-line"> </tt>
<a name="L1279"></a><tt class="py-lineno">1279</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1280"></a><tt class="py-lineno">1280</tt>  <tt class="py-line">                <tt class="py-comment"># Natural language day strings</tt> </tt>
<a name="L1281"></a><tt class="py-lineno">1281</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_DAY</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1282"></a><tt class="py-lineno">1282</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1283"></a><tt class="py-lineno">1283</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dayStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1284"></a><tt class="py-lineno">1284</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt>   <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L1285"></a><tt class="py-lineno">1285</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1286"></a><tt class="py-lineno">1286</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1287"></a><tt class="py-lineno">1287</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt> </tt>
<a name="L1288"></a><tt class="py-lineno">1288</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1289"></a><tt class="py-lineno">1289</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'day'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1290"></a><tt class="py-lineno">1290</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1291"></a><tt class="py-lineno">1291</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1292"></a><tt class="py-lineno">1292</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1293"></a><tt class="py-lineno">1293</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1294"></a><tt class="py-lineno">1294</tt>  <tt class="py-line"> </tt>
<a name="L1295"></a><tt class="py-lineno">1295</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1296"></a><tt class="py-lineno">1296</tt>  <tt class="py-line">                <tt class="py-comment"># Quantity + Units</tt> </tt>
<a name="L1297"></a><tt class="py-lineno">1297</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_UNITS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1298"></a><tt class="py-lineno">1298</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1299"></a><tt class="py-lineno">1299</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">unitsFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1300"></a><tt class="py-lineno">1300</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1301"></a><tt class="py-lineno">1301</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1302"></a><tt class="py-lineno">1302</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt> </tt>
<a name="L1303"></a><tt class="py-lineno">1303</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1304"></a><tt class="py-lineno">1304</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1305"></a><tt class="py-lineno">1305</tt>  <tt class="py-line"> </tt>
<a name="L1306"></a><tt class="py-lineno">1306</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">chunk1</tt><tt class="py-op">[</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> <tt class="py-op">==</tt> <tt class="py-string">'-'</tt><tt class="py-op">:</tt> </tt>
<a name="L1307"></a><tt class="py-lineno">1307</tt>  <tt class="py-line">                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'-%s'</tt> <tt class="py-op">%</tt> <tt class="py-name">parseStr</tt> </tt>
<a name="L1308"></a><tt class="py-lineno">1308</tt>  <tt class="py-line">                            <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">chunk1</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> </tt>
<a name="L1309"></a><tt class="py-lineno">1309</tt>  <tt class="py-line"> </tt>
<a name="L1310"></a><tt class="py-lineno">1310</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>    <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1311"></a><tt class="py-lineno">1311</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1312"></a><tt class="py-lineno">1312</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1313"></a><tt class="py-lineno">1313</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1314"></a><tt class="py-lineno">1314</tt>  <tt class="py-line"> </tt>
<a name="L1315"></a><tt class="py-lineno">1315</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1316"></a><tt class="py-lineno">1316</tt>  <tt class="py-line">                <tt class="py-comment"># Quantity + Units</tt> </tt>
<a name="L1317"></a><tt class="py-lineno">1317</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_QUNITS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1318"></a><tt class="py-lineno">1318</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1319"></a><tt class="py-lineno">1319</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">qunitsFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1320"></a><tt class="py-lineno">1320</tt>  <tt class="py-line"> </tt>
<a name="L1321"></a><tt class="py-lineno">1321</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1322"></a><tt class="py-lineno">1322</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1323"></a><tt class="py-lineno">1323</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt> </tt>
<a name="L1324"></a><tt class="py-lineno">1324</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1325"></a><tt class="py-lineno">1325</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'qty'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt><tt class="py-op">.</tt><tt class="py-name">strip</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1326"></a><tt class="py-lineno">1326</tt>  <tt class="py-line"> </tt>
<a name="L1327"></a><tt class="py-lineno">1327</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">chunk1</tt><tt class="py-op">[</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> <tt class="py-op">==</tt> <tt class="py-string">'-'</tt><tt class="py-op">:</tt> </tt>
<a name="L1328"></a><tt class="py-lineno">1328</tt>  <tt class="py-line">                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'-%s'</tt> <tt class="py-op">%</tt> <tt class="py-name">parseStr</tt> </tt>
<a name="L1329"></a><tt class="py-lineno">1329</tt>  <tt class="py-line">                            <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">chunk1</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-op">-</tt><tt class="py-number">1</tt><tt class="py-op">]</tt> </tt>
<a name="L1330"></a><tt class="py-lineno">1330</tt>  <tt class="py-line"> </tt>
<a name="L1331"></a><tt class="py-lineno">1331</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>    <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1332"></a><tt class="py-lineno">1332</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1333"></a><tt class="py-lineno">1333</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1334"></a><tt class="py-lineno">1334</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt>  </tt>
<a name="L1335"></a><tt class="py-lineno">1335</tt>  <tt class="py-line"> </tt>
<a name="L1336"></a><tt class="py-lineno">1336</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1337"></a><tt class="py-lineno">1337</tt>  <tt class="py-line">                <tt class="py-comment"># Weekday</tt> </tt>
<a name="L1338"></a><tt class="py-lineno">1338</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_WEEKDAY</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1339"></a><tt class="py-lineno">1339</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1340"></a><tt class="py-lineno">1340</tt>  <tt class="py-line">                    <tt class="py-name">gv</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'weekday'</tt><tt class="py-op">)</tt> </tt>
<a name="L1341"></a><tt class="py-lineno">1341</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">s</tt> <tt class="py-keyword">not</tt> <tt class="py-keyword">in</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">dayOffsets</tt><tt class="py-op">:</tt> </tt>
<a name="L1342"></a><tt class="py-lineno">1342</tt>  <tt class="py-line">                        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">weekdyFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1343"></a><tt class="py-lineno">1343</tt>  <tt class="py-line">                        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt>   <tt class="py-op">=</tt> <tt class="py-number">1</tt> </tt>
<a name="L1344"></a><tt class="py-lineno">1344</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">gv</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1345"></a><tt class="py-lineno">1345</tt>  <tt class="py-line">                            <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1346"></a><tt class="py-lineno">1346</tt>  <tt class="py-line"><tt class="py-comment"></tt>                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">gv</tt> </tt>
<a name="L1347"></a><tt class="py-lineno">1347</tt>  <tt class="py-line">                            <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'weekday'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1348"></a><tt class="py-lineno">1348</tt>  <tt class="py-line">                            <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'weekday'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1349"></a><tt class="py-lineno">1349</tt>  <tt class="py-line">                            <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1350"></a><tt class="py-lineno">1350</tt>  <tt class="py-line">                            <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1351"></a><tt class="py-lineno">1351</tt>  <tt class="py-line">                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1352"></a><tt class="py-lineno">1352</tt>  <tt class="py-line">                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1353"></a><tt class="py-lineno">1353</tt>  <tt class="py-line"> </tt>
<a name="L1354"></a><tt class="py-lineno">1354</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1355"></a><tt class="py-lineno">1355</tt>  <tt class="py-line">                <tt class="py-comment"># Natural language time strings</tt> </tt>
<a name="L1356"></a><tt class="py-lineno">1356</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIME</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1357"></a><tt class="py-lineno">1357</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1358"></a><tt class="py-lineno">1358</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStrFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1359"></a><tt class="py-lineno">1359</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt>    <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L1360"></a><tt class="py-lineno">1360</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'time'</tt><tt class="py-op">)</tt> <tt class="py-op">!=</tt> <tt class="py-name">s</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1361"></a><tt class="py-lineno">1361</tt>  <tt class="py-line">                        <tt class="py-comment"># capture remaining string</tt> </tt>
<a name="L1362"></a><tt class="py-lineno">1362</tt>  <tt class="py-line"><tt class="py-comment"></tt>                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'time'</tt><tt class="py-op">)</tt> </tt>
<a name="L1363"></a><tt class="py-lineno">1363</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'time'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1364"></a><tt class="py-lineno">1364</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'time'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1365"></a><tt class="py-lineno">1365</tt>  <tt class="py-line">                        <tt class="py-name">s</tt>        <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1366"></a><tt class="py-lineno">1366</tt>  <tt class="py-line">                        <tt class="py-name">flag</tt>     <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1367"></a><tt class="py-lineno">1367</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1368"></a><tt class="py-lineno">1368</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt> </tt>
<a name="L1369"></a><tt class="py-lineno">1369</tt>  <tt class="py-line"> </tt>
<a name="L1370"></a><tt class="py-lineno">1370</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1371"></a><tt class="py-lineno">1371</tt>  <tt class="py-line">                <tt class="py-comment"># HH:MM(:SS) am/pm time strings</tt> </tt>
<a name="L1372"></a><tt class="py-lineno">1372</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMEHMS2</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1373"></a><tt class="py-lineno">1373</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1374"></a><tt class="py-lineno">1374</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">meridianFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1375"></a><tt class="py-lineno">1375</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt>     <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L1376"></a><tt class="py-lineno">1376</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1377"></a><tt class="py-lineno">1377</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1378"></a><tt class="py-lineno">1378</tt>  <tt class="py-line">                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s:%s:%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1379"></a><tt class="py-lineno">1379</tt>  <tt class="py-line">                                                        <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1380"></a><tt class="py-lineno">1380</tt>  <tt class="py-line">                                                        <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1381"></a><tt class="py-lineno">1381</tt>  <tt class="py-line">                                                        <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L1382"></a><tt class="py-lineno">1382</tt>  <tt class="py-line">                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1383"></a><tt class="py-lineno">1383</tt>  <tt class="py-line">                            <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s:%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1384"></a><tt class="py-lineno">1384</tt>  <tt class="py-line">                                                     <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1385"></a><tt class="py-lineno">1385</tt>  <tt class="py-line">                                                     <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L1386"></a><tt class="py-lineno">1386</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1387"></a><tt class="py-lineno">1387</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1388"></a><tt class="py-lineno">1388</tt>  <tt class="py-line">                                              <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L1389"></a><tt class="py-lineno">1389</tt>  <tt class="py-line"> </tt>
<a name="L1390"></a><tt class="py-lineno">1390</tt>  <tt class="py-line">                    <tt class="py-name">chunk1</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1391"></a><tt class="py-lineno">1391</tt>  <tt class="py-line">                    <tt class="py-name">chunk2</tt> <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'meridian'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1392"></a><tt class="py-lineno">1392</tt>  <tt class="py-line"> </tt>
<a name="L1393"></a><tt class="py-lineno">1393</tt>  <tt class="py-line">                    <tt class="py-name">s</tt>    <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1394"></a><tt class="py-lineno">1394</tt>  <tt class="py-line">                    <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1395"></a><tt class="py-lineno">1395</tt>  <tt class="py-line"> </tt>
<a name="L1396"></a><tt class="py-lineno">1396</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">==</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1397"></a><tt class="py-lineno">1397</tt>  <tt class="py-line">                <tt class="py-comment"># HH:MM(:SS) time strings</tt> </tt>
<a name="L1398"></a><tt class="py-lineno">1398</tt>  <tt class="py-line"><tt class="py-comment"></tt>                <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt class="py-name">CRE_TIMEHMS</tt><tt class="py-op">.</tt><tt class="py-name">search</tt><tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">)</tt> </tt>
<a name="L1399"></a><tt class="py-lineno">1399</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">m</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1400"></a><tt class="py-lineno">1400</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStdFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1401"></a><tt class="py-lineno">1401</tt>  <tt class="py-line">                    <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt>    <tt class="py-op">=</tt> <tt class="py-number">2</tt> </tt>
<a name="L1402"></a><tt class="py-lineno">1402</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1403"></a><tt class="py-lineno">1403</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s:%s:%s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1404"></a><tt class="py-lineno">1404</tt>  <tt class="py-line">                                                 <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1405"></a><tt class="py-lineno">1405</tt>  <tt class="py-line">                                                 <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L1406"></a><tt class="py-lineno">1406</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1407"></a><tt class="py-lineno">1407</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'seconds'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1408"></a><tt class="py-lineno">1408</tt>  <tt class="py-line">                    <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1409"></a><tt class="py-lineno">1409</tt>  <tt class="py-line">                        <tt class="py-name">parseStr</tt> <tt class="py-op">=</tt> <tt class="py-string">'%s:%s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">,</tt> </tt>
<a name="L1410"></a><tt class="py-lineno">1410</tt>  <tt class="py-line">                                              <tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">group</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">)</tt> </tt>
<a name="L1411"></a><tt class="py-lineno">1411</tt>  <tt class="py-line">                        <tt class="py-name">chunk1</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-op">:</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">start</tt><tt class="py-op">(</tt><tt class="py-string">'hours'</tt><tt class="py-op">)</tt><tt class="py-op">]</tt> </tt>
<a name="L1412"></a><tt class="py-lineno">1412</tt>  <tt class="py-line">                        <tt class="py-name">chunk2</tt>   <tt class="py-op">=</tt> <tt class="py-name">s</tt><tt class="py-op">[</tt><tt class="py-name">m</tt><tt class="py-op">.</tt><tt class="py-name">end</tt><tt class="py-op">(</tt><tt class="py-string">'minutes'</tt><tt class="py-op">)</tt><tt class="py-op">:</tt><tt class="py-op">]</tt> </tt>
<a name="L1413"></a><tt class="py-lineno">1413</tt>  <tt class="py-line"> </tt>
<a name="L1414"></a><tt class="py-lineno">1414</tt>  <tt class="py-line">                    <tt class="py-name">s</tt>    <tt class="py-op">=</tt> <tt class="py-string">'%s %s'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1415"></a><tt class="py-lineno">1415</tt>  <tt class="py-line">                    <tt class="py-name">flag</tt> <tt class="py-op">=</tt> <tt class="py-name">True</tt> </tt>
<a name="L1416"></a><tt class="py-lineno">1416</tt>  <tt class="py-line"> </tt>
<a name="L1417"></a><tt class="py-lineno">1417</tt>  <tt class="py-line">            <tt class="py-comment"># if string does not match any regex, empty string to</tt> </tt>
<a name="L1418"></a><tt class="py-lineno">1418</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># come out of the while loop</tt> </tt>
<a name="L1419"></a><tt class="py-lineno">1419</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-keyword">not</tt> <tt class="py-name">flag</tt><tt class="py-op">:</tt> </tt>
<a name="L1420"></a><tt class="py-lineno">1420</tt>  <tt class="py-line">                <tt class="py-name">s</tt> <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L1421"></a><tt class="py-lineno">1421</tt>  <tt class="py-line"> </tt>
<a name="L1422"></a><tt class="py-lineno">1422</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt id="link-82" class="py-name"><a title="parsedatetime.parsedatetime._debug" class="py-name" href="#" onclick="return doclink('link-82', '_debug', 'link-0');">_debug</a></tt><tt class="py-op">:</tt> </tt>
<a name="L1423"></a><tt class="py-lineno">1423</tt>  <tt class="py-line">                <tt class="py-keyword">print</tt> <tt class="py-string">'parse (bottom) [%s][%s][%s][%s]'</tt> <tt class="py-op">%</tt> <tt class="py-op">(</tt><tt class="py-name">s</tt><tt class="py-op">,</tt> <tt class="py-name">parseStr</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">)</tt> </tt>
<a name="L1424"></a><tt class="py-lineno">1424</tt>  <tt class="py-line">                <tt class="py-keyword">print</tt> <tt class="py-string">'weekday %s, dateStd %s, dateStr %s, time %s, timeStr %s, meridian %s'</tt> <tt class="py-op">%</tt> \ </tt>
<a name="L1425"></a><tt class="py-lineno">1425</tt>  <tt class="py-line">                       <tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">weekdyFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStdFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateStrFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStdFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeStrFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">meridianFlag</tt><tt class="py-op">)</tt> </tt>
<a name="L1426"></a><tt class="py-lineno">1426</tt>  <tt class="py-line">                <tt class="py-keyword">print</tt> <tt class="py-string">'dayStr %s, modifier %s, modifier2 %s, units %s, qunits %s'</tt> <tt class="py-op">%</tt> \ </tt>
<a name="L1427"></a><tt class="py-lineno">1427</tt>  <tt class="py-line">                       <tt class="py-op">(</tt><tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dayStrFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifier2Flag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">unitsFlag</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">qunitsFlag</tt><tt class="py-op">)</tt> </tt>
<a name="L1428"></a><tt class="py-lineno">1428</tt>  <tt class="py-line"> </tt>
<a name="L1429"></a><tt class="py-lineno">1429</tt>  <tt class="py-line">            <tt class="py-comment"># evaluate the matched string</tt> </tt>
<a name="L1430"></a><tt class="py-lineno">1430</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">parseStr</tt> <tt class="py-op">!=</tt> <tt class="py-string">''</tt><tt class="py-op">:</tt> </tt>
<a name="L1431"></a><tt class="py-lineno">1431</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifierFlag</tt> <tt class="py-op">==</tt> <tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L1432"></a><tt class="py-lineno">1432</tt>  <tt class="py-line">                    <tt class="py-name">t</tt><tt class="py-op">,</tt> <tt class="py-name">totalTime</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-83" class="py-name"><a title="parsedatetime.parsedatetime.Calendar._evalModifier" class="py-name" href="#" onclick="return doclink('link-83', '_evalModifier', 'link-53');">_evalModifier</a></tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">,</tt> <tt class="py-name">totalTime</tt><tt class="py-op">)</tt> </tt>
<a name="L1433"></a><tt class="py-lineno">1433</tt>  <tt class="py-line">                    <tt class="py-comment"># t is the unparsed part of the chunks.</tt> </tt>
<a name="L1434"></a><tt class="py-lineno">1434</tt>  <tt class="py-line"><tt class="py-comment"></tt>                    <tt class="py-comment"># If it is not date/time, return current</tt> </tt>
<a name="L1435"></a><tt class="py-lineno">1435</tt>  <tt class="py-line"><tt class="py-comment"></tt>                    <tt class="py-comment"># totalTime as it is; else return the output</tt> </tt>
<a name="L1436"></a><tt class="py-lineno">1436</tt>  <tt class="py-line"><tt class="py-comment"></tt>                    <tt class="py-comment"># after parsing t.</tt> </tt>
<a name="L1437"></a><tt class="py-lineno">1437</tt>  <tt class="py-line"><tt class="py-comment"></tt>                    <tt class="py-keyword">if</tt> <tt class="py-op">(</tt><tt class="py-name">t</tt> <tt class="py-op">!=</tt> <tt class="py-string">''</tt><tt class="py-op">)</tt> <tt class="py-keyword">and</tt> <tt class="py-op">(</tt><tt class="py-name">t</tt> <tt class="py-op">!=</tt> <tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1438"></a><tt class="py-lineno">1438</tt>  <tt class="py-line">                        <tt class="py-name">tempDateFlag</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> </tt>
<a name="L1439"></a><tt class="py-lineno">1439</tt>  <tt class="py-line">                        <tt class="py-name">tempTimeFlag</tt>       <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> </tt>
<a name="L1440"></a><tt class="py-lineno">1440</tt>  <tt class="py-line">                        <tt class="py-op">(</tt><tt class="py-name">totalTime2</tt><tt class="py-op">,</tt> <tt class="py-name">flag</tt><tt class="py-op">)</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-84" class="py-name"><a title="parsedatetime.parsedatetime.Calendar.parse" class="py-name" href="#" onclick="return doclink('link-84', 'parse', 'link-29');">parse</a></tt><tt class="py-op">(</tt><tt class="py-name">t</tt><tt class="py-op">,</tt> <tt class="py-name">totalTime</tt><tt class="py-op">)</tt> </tt>
<a name="L1441"></a><tt class="py-lineno">1441</tt>  <tt class="py-line"> </tt>
<a name="L1442"></a><tt class="py-lineno">1442</tt>  <tt class="py-line">                        <tt class="py-keyword">if</tt> <tt class="py-name">flag</tt> <tt class="py-op">==</tt> <tt class="py-number">0</tt> <tt class="py-keyword">and</tt> <tt class="py-name">totalTime</tt> <tt class="py-keyword">is</tt> <tt class="py-keyword">not</tt> <tt class="py-name">None</tt><tt class="py-op">:</tt> </tt>
<a name="L1443"></a><tt class="py-lineno">1443</tt>  <tt class="py-line">                            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">tempTimeFlag</tt> </tt>
<a name="L1444"></a><tt class="py-lineno">1444</tt>  <tt class="py-line">                            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">tempDateFlag</tt> </tt>
<a name="L1445"></a><tt class="py-lineno">1445</tt>  <tt class="py-line"> </tt>
<a name="L1446"></a><tt class="py-lineno">1446</tt>  <tt class="py-line">                            <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">totalTime</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt><tt class="py-op">)</tt> </tt>
<a name="L1447"></a><tt class="py-lineno">1447</tt>  <tt class="py-line">                        <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1448"></a><tt class="py-lineno">1448</tt>  <tt class="py-line">                            <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">totalTime2</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt><tt class="py-op">)</tt> </tt>
<a name="L1449"></a><tt class="py-lineno">1449</tt>  <tt class="py-line"> </tt>
<a name="L1450"></a><tt class="py-lineno">1450</tt>  <tt class="py-line">                <tt class="py-keyword">elif</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">modifier2Flag</tt> <tt class="py-op">==</tt> <tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L1451"></a><tt class="py-lineno">1451</tt>  <tt class="py-line">                    <tt class="py-name">totalTime</tt><tt class="py-op">,</tt> <tt class="py-name">invalidFlag</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-85" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar._evalModifier2()=parsedatetime.parsedatetime.Calendar-class.html#_evalModifier2"><a title="parsedatetime.parsedatetime.Calendar._evalModifier2" class="py-name" href="#" onclick="return doclink('link-85', '_evalModifier2', 'link-85');">_evalModifier2</a></tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">,</tt> <tt class="py-name">chunk1</tt><tt class="py-op">,</tt> <tt class="py-name">chunk2</tt><tt class="py-op">,</tt> <tt class="py-name">totalTime</tt><tt class="py-op">)</tt> </tt>
<a name="L1452"></a><tt class="py-lineno">1452</tt>  <tt class="py-line"> </tt>
<a name="L1453"></a><tt class="py-lineno">1453</tt>  <tt class="py-line">                    <tt class="py-keyword">if</tt> <tt class="py-name">invalidFlag</tt> <tt class="py-op">==</tt> <tt class="py-name">True</tt><tt class="py-op">:</tt> </tt>
<a name="L1454"></a><tt class="py-lineno">1454</tt>  <tt class="py-line">                        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1455"></a><tt class="py-lineno">1455</tt>  <tt class="py-line">                        <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1456"></a><tt class="py-lineno">1456</tt>  <tt class="py-line"> </tt>
<a name="L1457"></a><tt class="py-lineno">1457</tt>  <tt class="py-line">                <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1458"></a><tt class="py-lineno">1458</tt>  <tt class="py-line">                    <tt class="py-name">totalTime</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt id="link-86" class="py-name" targets="Method parsedatetime.parsedatetime.Calendar._evalString()=parsedatetime.parsedatetime.Calendar-class.html#_evalString"><a title="parsedatetime.parsedatetime.Calendar._evalString" class="py-name" href="#" onclick="return doclink('link-86', '_evalString', 'link-86');">_evalString</a></tt><tt class="py-op">(</tt><tt class="py-name">parseStr</tt><tt class="py-op">,</tt> <tt class="py-name">totalTime</tt><tt class="py-op">)</tt> </tt>
<a name="L1459"></a><tt class="py-lineno">1459</tt>  <tt class="py-line">                    <tt class="py-name">parseStr</tt>  <tt class="py-op">=</tt> <tt class="py-string">''</tt> </tt>
<a name="L1460"></a><tt class="py-lineno">1460</tt>  <tt class="py-line"> </tt>
<a name="L1461"></a><tt class="py-lineno">1461</tt>  <tt class="py-line">        <tt class="py-comment"># String is not parsed at all</tt> </tt>
<a name="L1462"></a><tt class="py-lineno">1462</tt>  <tt class="py-line"><tt class="py-comment"></tt>        <tt class="py-keyword">if</tt> <tt class="py-name">totalTime</tt> <tt class="py-keyword">is</tt> <tt class="py-name">None</tt> <tt class="py-keyword">or</tt> <tt class="py-name">totalTime</tt> <tt class="py-op">==</tt> <tt class="py-name">sourceTime</tt><tt class="py-op">:</tt> </tt>
<a name="L1463"></a><tt class="py-lineno">1463</tt>  <tt class="py-line">            <tt class="py-name">totalTime</tt>     <tt class="py-op">=</tt> <tt class="py-name">time</tt><tt class="py-op">.</tt><tt class="py-name">localtime</tt><tt class="py-op">(</tt><tt class="py-op">)</tt> </tt>
<a name="L1464"></a><tt class="py-lineno">1464</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1465"></a><tt class="py-lineno">1465</tt>  <tt class="py-line">            <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1466"></a><tt class="py-lineno">1466</tt>  <tt class="py-line"> </tt>
<a name="L1467"></a><tt class="py-lineno">1467</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-op">(</tt><tt class="py-name">totalTime</tt><tt class="py-op">,</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">dateFlag</tt> <tt class="py-op">+</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">timeFlag</tt><tt class="py-op">)</tt> </tt>
</div><a name="L1468"></a><tt class="py-lineno">1468</tt>  <tt class="py-line"> </tt>
<a name="L1469"></a><tt class="py-lineno">1469</tt>  <tt class="py-line"> </tt>
<a name="Calendar.inc"></a><div id="Calendar.inc-def"><a name="L1470"></a><tt class="py-lineno">1470</tt> <a class="py-toggle" href="#" id="Calendar.inc-toggle" onclick="return toggle('Calendar.inc');">-</a><tt class="py-line">    <tt class="py-keyword">def</tt> <a class="py-def-name" href="parsedatetime.parsedatetime.Calendar-class.html#inc">inc</a><tt class="py-op">(</tt><tt class="py-param">self</tt><tt class="py-op">,</tt> <tt class="py-param">source</tt><tt class="py-op">,</tt> <tt class="py-param">month</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">,</tt> <tt class="py-param">year</tt><tt class="py-op">=</tt><tt class="py-name">None</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="Calendar.inc-collapsed" style="display:none;" pad="++++" indent="++++++++"></div><div id="Calendar.inc-expanded"><a name="L1471"></a><tt class="py-lineno">1471</tt>  <tt class="py-line">        <tt class="py-docstring">"""</tt> </tt>
<a name="L1472"></a><tt class="py-lineno">1472</tt>  <tt class="py-line"><tt class="py-docstring">        Takes the given C{source} date, or current date if none is</tt> </tt>
<a name="L1473"></a><tt class="py-lineno">1473</tt>  <tt class="py-line"><tt class="py-docstring">        passed, and increments it according to the values passed in</tt> </tt>
<a name="L1474"></a><tt class="py-lineno">1474</tt>  <tt class="py-line"><tt class="py-docstring">        by month and/or year.</tt> </tt>
<a name="L1475"></a><tt class="py-lineno">1475</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1476"></a><tt class="py-lineno">1476</tt>  <tt class="py-line"><tt class="py-docstring">        This routine is needed because Python's C{timedelta()} function</tt> </tt>
<a name="L1477"></a><tt class="py-lineno">1477</tt>  <tt class="py-line"><tt class="py-docstring">        does not allow for month or year increments.</tt> </tt>
<a name="L1478"></a><tt class="py-lineno">1478</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1479"></a><tt class="py-lineno">1479</tt>  <tt class="py-line"><tt class="py-docstring">        @type  source: struct_time</tt> </tt>
<a name="L1480"></a><tt class="py-lineno">1480</tt>  <tt class="py-line"><tt class="py-docstring">        @param source: C{struct_time} value to increment</tt> </tt>
<a name="L1481"></a><tt class="py-lineno">1481</tt>  <tt class="py-line"><tt class="py-docstring">        @type  month:  integer</tt> </tt>
<a name="L1482"></a><tt class="py-lineno">1482</tt>  <tt class="py-line"><tt class="py-docstring">        @param month:  optional number of months to increment</tt> </tt>
<a name="L1483"></a><tt class="py-lineno">1483</tt>  <tt class="py-line"><tt class="py-docstring">        @type  year:   integer</tt> </tt>
<a name="L1484"></a><tt class="py-lineno">1484</tt>  <tt class="py-line"><tt class="py-docstring">        @param year:   optional number of years to increment</tt> </tt>
<a name="L1485"></a><tt class="py-lineno">1485</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L1486"></a><tt class="py-lineno">1486</tt>  <tt class="py-line"><tt class="py-docstring">        @rtype:  datetime</tt> </tt>
<a name="L1487"></a><tt class="py-lineno">1487</tt>  <tt class="py-line"><tt class="py-docstring">        @return: C{source} incremented by the number of months and/or years</tt> </tt>
<a name="L1488"></a><tt class="py-lineno">1488</tt>  <tt class="py-line"><tt class="py-docstring">        """</tt> </tt>
<a name="L1489"></a><tt class="py-lineno">1489</tt>  <tt class="py-line">        <tt class="py-name">yr</tt>  <tt class="py-op">=</tt> <tt class="py-name">source</tt><tt class="py-op">.</tt><tt class="py-name">year</tt> </tt>
<a name="L1490"></a><tt class="py-lineno">1490</tt>  <tt class="py-line">        <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">source</tt><tt class="py-op">.</tt><tt class="py-name">month</tt> </tt>
<a name="L1491"></a><tt class="py-lineno">1491</tt>  <tt class="py-line">        <tt class="py-name">dy</tt>  <tt class="py-op">=</tt> <tt class="py-name">source</tt><tt class="py-op">.</tt><tt class="py-name">day</tt> </tt>
<a name="L1492"></a><tt class="py-lineno">1492</tt>  <tt class="py-line"> </tt>
<a name="L1493"></a><tt class="py-lineno">1493</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">year</tt><tt class="py-op">:</tt> </tt>
<a name="L1494"></a><tt class="py-lineno">1494</tt>  <tt class="py-line">            <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L1495"></a><tt class="py-lineno">1495</tt>  <tt class="py-line">                <tt class="py-name">yi</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">year</tt><tt class="py-op">)</tt> </tt>
<a name="L1496"></a><tt class="py-lineno">1496</tt>  <tt class="py-line">            <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L1497"></a><tt class="py-lineno">1497</tt>  <tt class="py-line">                <tt class="py-name">yi</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1498"></a><tt class="py-lineno">1498</tt>  <tt class="py-line"> </tt>
<a name="L1499"></a><tt class="py-lineno">1499</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-name">yi</tt> </tt>
<a name="L1500"></a><tt class="py-lineno">1500</tt>  <tt class="py-line"> </tt>
<a name="L1501"></a><tt class="py-lineno">1501</tt>  <tt class="py-line">        <tt class="py-keyword">if</tt> <tt class="py-name">month</tt><tt class="py-op">:</tt> </tt>
<a name="L1502"></a><tt class="py-lineno">1502</tt>  <tt class="py-line">            <tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L1503"></a><tt class="py-lineno">1503</tt>  <tt class="py-line">                <tt class="py-name">mi</tt> <tt class="py-op">=</tt> <tt class="py-name">int</tt><tt class="py-op">(</tt><tt class="py-name">month</tt><tt class="py-op">)</tt> </tt>
<a name="L1504"></a><tt class="py-lineno">1504</tt>  <tt class="py-line">            <tt class="py-keyword">except</tt> <tt class="py-name">ValueError</tt><tt class="py-op">:</tt> </tt>
<a name="L1505"></a><tt class="py-lineno">1505</tt>  <tt class="py-line">                <tt class="py-name">mi</tt> <tt class="py-op">=</tt> <tt class="py-number">0</tt> </tt>
<a name="L1506"></a><tt class="py-lineno">1506</tt>  <tt class="py-line"> </tt>
<a name="L1507"></a><tt class="py-lineno">1507</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">abs</tt><tt class="py-op">(</tt><tt class="py-name">mi</tt><tt class="py-op">)</tt> </tt>
<a name="L1508"></a><tt class="py-lineno">1508</tt>  <tt class="py-line">            <tt class="py-name">y</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt> <tt class="py-op">/</tt> <tt class="py-number">12</tt>      <tt class="py-comment"># how many years are in month increment</tt> </tt>
<a name="L1509"></a><tt class="py-lineno">1509</tt>  <tt class="py-line">            <tt class="py-name">m</tt> <tt class="py-op">=</tt> <tt class="py-name">m</tt> <tt class="py-op">%</tt> <tt class="py-number">12</tt>      <tt class="py-comment"># get remaining months</tt> </tt>
<a name="L1510"></a><tt class="py-lineno">1510</tt>  <tt class="py-line"> </tt>
<a name="L1511"></a><tt class="py-lineno">1511</tt>  <tt class="py-line">            <tt class="py-keyword">if</tt> <tt class="py-name">mi</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">0</tt><tt class="py-op">:</tt> </tt>
<a name="L1512"></a><tt class="py-lineno">1512</tt>  <tt class="py-line">                <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">mth</tt> <tt class="py-op">-</tt> <tt class="py-name">m</tt>           <tt class="py-comment"># sub months from start month</tt> </tt>
<a name="L1513"></a><tt class="py-lineno">1513</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">mth</tt> <tt class="py-op">&lt;</tt> <tt class="py-number">1</tt><tt class="py-op">:</tt>             <tt class="py-comment"># cross start-of-year?</tt> </tt>
<a name="L1514"></a><tt class="py-lineno">1514</tt>  <tt class="py-line">                    <tt class="py-name">y</tt>   <tt class="py-op">-=</tt> <tt class="py-number">1</tt>            <tt class="py-comment">#   yes - decrement year</tt> </tt>
<a name="L1515"></a><tt class="py-lineno">1515</tt>  <tt class="py-line">                    <tt class="py-name">mth</tt> <tt class="py-op">+=</tt> <tt class="py-number">12</tt>           <tt class="py-comment">#         and fix month</tt> </tt>
<a name="L1516"></a><tt class="py-lineno">1516</tt>  <tt class="py-line">            <tt class="py-keyword">else</tt><tt class="py-op">:</tt> </tt>
<a name="L1517"></a><tt class="py-lineno">1517</tt>  <tt class="py-line">                <tt class="py-name">mth</tt> <tt class="py-op">=</tt> <tt class="py-name">mth</tt> <tt class="py-op">+</tt> <tt class="py-name">m</tt>           <tt class="py-comment"># add months to start month</tt> </tt>
<a name="L1518"></a><tt class="py-lineno">1518</tt>  <tt class="py-line">                <tt class="py-keyword">if</tt> <tt class="py-name">mth</tt> <tt class="py-op">&gt;</tt> <tt class="py-number">12</tt><tt class="py-op">:</tt>            <tt class="py-comment"># cross end-of-year?</tt> </tt>
<a name="L1519"></a><tt class="py-lineno">1519</tt>  <tt class="py-line">                    <tt class="py-name">y</tt>   <tt class="py-op">+=</tt> <tt class="py-number">1</tt>            <tt class="py-comment">#   yes - increment year</tt> </tt>
<a name="L1520"></a><tt class="py-lineno">1520</tt>  <tt class="py-line">                    <tt class="py-name">mth</tt> <tt class="py-op">-=</tt> <tt class="py-number">12</tt>           <tt class="py-comment">#         and fix month</tt> </tt>
<a name="L1521"></a><tt class="py-lineno">1521</tt>  <tt class="py-line"> </tt>
<a name="L1522"></a><tt class="py-lineno">1522</tt>  <tt class="py-line">            <tt class="py-name">yr</tt> <tt class="py-op">+=</tt> <tt class="py-name">y</tt> </tt>
<a name="L1523"></a><tt class="py-lineno">1523</tt>  <tt class="py-line"> </tt>
<a name="L1524"></a><tt class="py-lineno">1524</tt>  <tt class="py-line">            <tt class="py-comment"># if the day ends up past the last day of</tt> </tt>
<a name="L1525"></a><tt class="py-lineno">1525</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-comment"># the new month, set it to the last day</tt> </tt>
<a name="L1526"></a><tt class="py-lineno">1526</tt>  <tt class="py-line"><tt class="py-comment"></tt>            <tt class="py-keyword">if</tt> <tt class="py-name">dy</tt> <tt class="py-op">&gt;</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-87" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-87', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
<a name="L1527"></a><tt class="py-lineno">1527</tt>  <tt class="py-line">                <tt class="py-name">dy</tt> <tt class="py-op">=</tt> <tt class="py-name">self</tt><tt class="py-op">.</tt><tt class="py-name">ptc</tt><tt class="py-op">.</tt><tt id="link-88" class="py-name"><a title="parsedatetime.parsedatetime_consts.Constants.daysInMonth" class="py-name" href="#" onclick="return doclink('link-88', 'daysInMonth', 'link-25');">daysInMonth</a></tt><tt class="py-op">(</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">yr</tt><tt class="py-op">)</tt> </tt>
<a name="L1528"></a><tt class="py-lineno">1528</tt>  <tt class="py-line"> </tt>
<a name="L1529"></a><tt class="py-lineno">1529</tt>  <tt class="py-line">        <tt class="py-name">d</tt> <tt class="py-op">=</tt> <tt class="py-name">source</tt><tt class="py-op">.</tt><tt class="py-name">replace</tt><tt class="py-op">(</tt><tt class="py-name">year</tt><tt class="py-op">=</tt><tt class="py-name">yr</tt><tt class="py-op">,</tt> <tt class="py-name">month</tt><tt class="py-op">=</tt><tt class="py-name">mth</tt><tt class="py-op">,</tt> <tt class="py-name">day</tt><tt class="py-op">=</tt><tt class="py-name">dy</tt><tt class="py-op">)</tt> </tt>
<a name="L1530"></a><tt class="py-lineno">1530</tt>  <tt class="py-line"> </tt>
<a name="L1531"></a><tt class="py-lineno">1531</tt>  <tt class="py-line">        <tt class="py-keyword">return</tt> <tt class="py-name">source</tt> <tt class="py-op">+</tt> <tt class="py-op">(</tt><tt class="py-name">d</tt> <tt class="py-op">-</tt> <tt class="py-name">source</tt><tt class="py-op">)</tt> </tt>
</div></div><a name="L1532"></a><tt class="py-lineno">1532</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">
  <!-- Home link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="parsedatetime-module.html">Home</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Project homepage -->
      <th class="navbar" align="right" width="100%">
        <table border="0" cellpadding="0" cellspacing="0">
          <tr><th class="navbar" align="center"
            ><a class="navbar" target="_top" href="http://code-bear.com/code/parsedatetime">parsedatetime</a></th>
          </tr></table></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0beta1 on Mon Apr 21 02:29:35 2008
    </td>
    <td align="right" class="footer">
      <a href="http://epydoc.sourceforge.net">http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie()
  // -->
</script>
  
</body>
</html>
